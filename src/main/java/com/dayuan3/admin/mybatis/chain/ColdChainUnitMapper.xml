<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dayuan3.admin.mapper.chain.ColdChainUnitMapper">
	<resultMap id="BaseResultMap" type="com.dayuan3.admin.bean.chain.ColdChainUnit">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="reg_name" property="regName" jdbcType="VARCHAR"/>
		<result column="depart_id" property="departId" jdbcType="INTEGER"/>
		<result column="reg_type" property="regType" jdbcType="INTEGER"/>
		<result column="credit_code" property="creditCode" jdbcType="VARCHAR"/>
		<result column="company_name" property="companyName" jdbcType="VARCHAR"/>
		<result column="legal_person" property="legalPerson" jdbcType="VARCHAR"/>
		<result column="legal_phone" property="legalPhone" jdbcType="VARCHAR"/>
		<result column="link_user" property="linkUser" jdbcType="VARCHAR"/>
		<result column="link_phone" property="linkPhone" jdbcType="VARCHAR"/>
		<result column="link_idcard" property="linkIdcard" jdbcType="VARCHAR"/>
		<result column="region_id" property="regionId" jdbcType="DOUBLE"/>
		<result column="reg_address" property="regAddress" jdbcType="VARCHAR"/>
		<result column="place_x" property="placeX" jdbcType="VARCHAR"/>
		<result column="place_y" property="placeY" jdbcType="VARCHAR"/>
		<result column="qrcode" property="qrcode" jdbcType="VARCHAR"/>
		<result column="file_path" property="filePath" jdbcType="VARCHAR"/>
		<result column="remark" property="remark" jdbcType="VARCHAR"/>
		<result column="checked" property="checked" jdbcType="SMALLINT"/>
		<result column="delete_flag" property="deleteFlag" jdbcType="SMALLINT"/>
		<result column="sorting" property="sorting" jdbcType="SMALLINT"/>
		<result column="create_by" property="createBy" jdbcType="VARCHAR"/>
		<result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
		<result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
		<result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
		<result column="param1" property="param1" jdbcType="VARCHAR"/>
		<result column="param2" property="param2" jdbcType="VARCHAR"/>
		<result column="param3" property="param3" jdbcType="VARCHAR"/>
	</resultMap>
	<resultMap id="JoinResultMap" type="com.dayuan3.admin.bean.chain.ColdChainUnit" extends="BaseResultMap">


		<result column="regName" property="regName"/>
		<result column="departId" property="departId"/>
		<result column="regType" property="regType"/>
		<result column="creditCode" property="creditCode"/>
		<result column="companyName" property="companyName"/>
		<result column="legalPerson" property="legalPerson"/>
		<result column="legalPhone" property="legalPhone"/>
		<result column="linkUser" property="linkUser"/>
		<result column="linkPhone" property="linkPhone"/>
		<result column="linkIdcard" property="linkIdcard"/>
		<result column="regionId" property="regionId"/>
		<result column="regAddress" property="regAddress"/>
		<result column="placeX" property="placeX"/>
		<result column="placeY" property="placeY"/>
		<result column="filePath" property="filePath"/>
		<result column="deleteFlag" property="deleteFlag"/>
		<result column="createBy" property="createBy"/>
		<result column="createDate" property="createDate"/>
		<result column="updateBy" property="updateBy"/>
		<result column="updateDate" property="updateDate"/>

		<result column="departName" property="departName" />
		<result column="businessNumber" property="businessNumber"/>
		<!--
		<result column="unqualifiedNumber" property="unqualifiedNumber" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="pwd" property="pwd" jdbcType="VARCHAR" />
		<result column="regTypeName" property="regTypeName" jdbcType="VARCHAR" />
		<result column="showBusiness" property="showBusiness" jdbcType="SMALLINT" />-->
	</resultMap>
	<sql id="Base_Column_List">
		bro.id id, bro.depart_id departId, bro.reg_name regName, bro.reg_type regType, bro.link_user linkUser,
		bro.link_phone linkPhone,
		bro.link_idcard linkIdcard,bro.credit_code creditCode, bro.region_id regionId, bro.reg_address regAddress,
		bro.place_x placeX, bro.place_y placeY, bro.qrcode qrcode, bro.remark remark, bro.checked checked,
		bro.delete_flag deleteFlag, bro.sorting sorting,
		bro.create_by createBy, bro.create_date createDate, bro.update_by updateBy, bro.update_date updateDate,
		bro.param1 param1, bro.param2 param2, bro.param3 param3
		,tsd.depart_name departName,bro.legal_person legalPerson,bro.company_name companyName
		<!-- 2018.6.1 删除营业执照表信息 -->
		<!-- , brl.license_code regLicence, brl.legal_person legalPerson, brl.license_edate licenseEdate -->
	</sql>
	<select id="queryRegByDIdAndRegName" parameterType="Object" resultMap="BaseResultMap">
 		select o.*,d.depart_name
		from cold_chain_unit o
		LEFT JOIN t_s_depart d ON o.depart_id=d.id
		where o.delete_flag =0 and o.reg_type=#{regType}
		and o.depart_id in (
		SELECT id FROM t_s_depart
		WHERE depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart t2 WHERE t2.id=#{departId}),'%'))
		<if test="regName != null and regName != ''">
			and reg_name like CONCAT('%', #{regName}, '%')
		</if>
 	</select>
	<select id="queryRegByDIdAndRegName2New" parameterType="Object" resultMap="BaseResultMap">
		select o.*,d.depart_name
		from cold_chain_unit o
		LEFT JOIN t_s_depart d ON o.depart_id=d.id
		where o.delete_flag =0
		<if test="regType!=null and regType!=''">
			and FIND_IN_SET(o.reg_type,#{regType})
		</if>
		and o.depart_id in (
		SELECT id FROM t_s_depart
		WHERE depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart t2 WHERE t2.id=#{departId}),'%'))
		<if test="regName != null and regName != ''">
			and reg_name like CONCAT('%', #{regName}, '%')
		</if>
	</select>
	<select id="selectByDepartCodeAndRegName" resultMap="BaseResultMap" parameterType="Object">
		select *
		from cold_chain_unit bo
		LEFT JOIN t_s_depart td
		ON bo.depart_id=td.id
		where bo.delete_flag = 0 and td.delete_flag = 0
		and reg_name=#{regName} and td.depart_name=#{departName}
		AND td.depart_code LIKE CONCAT(#{departCode},'%')
		<if test="regType !=null">
			and reg_type=#{regType}
		</if>
		<!-- and FIND_IN_SET(depart_id,getChildDepartLst(#{departId})) -->
	</select>

	<select id="selectByDepartNameAndRegName" resultMap="BaseResultMap" parameterType="Object">
		select *
		from cold_chain_unit bo
		LEFT JOIN t_s_depart td
		ON bo.depart_id=td.id
		where bo.delete_flag = 0 and td.delete_flag = 0
		and bo.reg_name=#{regName} and td.depart_name=#{departName}
	</select>

	<sql id="sql_selectByPrimaryKey">
		SELECT
			<include refid="Base_Column_List" />
		FROM cold_chain_unit bro
		LEFT JOIN t_s_depart tsd ON bro.depart_id = tsd.id
		WHERE bro.delete_flag = 0
	</sql>
	<select id="selectByPrimaryKey" resultMap="JoinResultMap" parameterType="java.lang.Integer">
		<include refid="sql_selectByPrimaryKey"/>
		AND bro.id = #{id,jdbcType=INTEGER}
	</select>
	<select id="queryByIds" resultMap="JoinResultMap" parameterType="java.lang.Integer">
		SELECT
		<include refid="Base_Column_List" />
		FROM cold_chain_unit bro
		LEFT JOIN t_s_depart tsd ON bro.depart_id = tsd.id
		WHERE bro.delete_flag = 0
		AND bro.id IN
			<foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
				#{id}
			</foreach>
	</select>

	<update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update cold_chain_unit set delete_flag=1, update_date=now()
		where id in
		<foreach collection="array" item="ids" index="index" open="(" close=")" separator=",">
			#{ids}
		</foreach>
	</update>
	<update id="deleteData" parameterType="java.lang.Object">
		update cold_chain_unit set delete_flag=1, update_date=now(), update_by=#{userId,jdbcType=VARCHAR}
		where id in
		<foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</update>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.dayuan3.admin.bean.chain.ColdChainUnit">
		insert into cold_chain_unit (id, depart_id, reg_name,
		reg_type, link_user, link_phone,
		link_idcard, credit_code,
		region_id, reg_address, place_x,
		place_y, qrcode, remark, checked,
		delete_flag, sorting, create_by,
		create_date, update_by, update_date,legal_phone, file_path,
		param1, param2, param3,legal_person,company_name)
		values (#{id,jdbcType=INTEGER}, #{departId,jdbcType=INTEGER}, #{regName,jdbcType=VARCHAR},
		#{regType,jdbcType=SMALLINT}, #{linkUser,jdbcType=VARCHAR}, #{linkPhone,jdbcType=VARCHAR},
		#{linkIdcard,jdbcType=VARCHAR},#{creditCode,jdbcType=VARCHAR},
		#{regionId,jdbcType=DOUBLE}, #{regAddress,jdbcType=VARCHAR}, #{placeX,jdbcType=VARCHAR},
		#{placeY,jdbcType=VARCHAR}, #{qrcode,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR},
		#{checked,jdbcType=SMALLINT},
		#{deleteFlag,jdbcType=SMALLINT}, #{sorting,jdbcType=SMALLINT}, #{createBy,jdbcType=VARCHAR},
		#{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP},#{legalPhone,jdbcType=VARCHAR},#{filePath,jdbcType=VARCHAR},
        #{param1,jdbcType=VARCHAR}, #{param2,jdbcType=VARCHAR}, #{param3,jdbcType=VARCHAR}
		,#{legalPerson,jdbcType=VARCHAR},#{companyName,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.dayuan3.admin.bean.chain.ColdChainUnit" useGeneratedKeys="true" keyProperty="id">
		insert into cold_chain_unit
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="departId != null">
				depart_id,
			</if>
			<if test="regName != null">
				reg_name,
			</if>
			<if test="regType != null">
				reg_type,
			</if>
			<if test="linkUser != null">
				link_user,
			</if>
			<if test="linkPhone != null">
				link_phone,
			</if>
			<if test="linkIdcard != null">
				link_idcard,
			</if>
			<if test="creditCode != null">
				credit_code,
			</if>
			<if test="regionId != null">
				region_id,
			</if>
			<if test="regAddress != null">
				reg_address,
			</if>
			<if test="placeX != null">
				place_x,
			</if>
			<if test="placeY != null">
				place_y,
			</if>
			<if test="qrcode != null">
				qrcode,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="checked != null">
				checked,
			</if>
			<if test="deleteFlag != null">
				delete_flag,
			</if>
			<if test="sorting != null">
				sorting,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
			<if test="updateBy != null">
				update_by,
			</if>
			<if test="updateDate != null">
				update_date,
			</if>
			<if test="param1 != null">
				param1,
			</if>
			<if test="param2 != null">
				param2,
			</if>
			<if test="param3 != null">
				param3,
			</if>
			<if test="legalPerson != null">
				legal_person,
			</if>
			<if test="companyName != null">
				company_name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="departId != null">
				#{departId,jdbcType=INTEGER},
			</if>
			<if test="regName != null">
				#{regName,jdbcType=VARCHAR},
			</if>
			<if test="regType != null">
				#{regType,jdbcType=SMALLINT},
			</if>
			<if test="linkUser != null">
				#{linkUser,jdbcType=VARCHAR},
			</if>
			<if test="linkPhone != null">
				#{linkPhone,jdbcType=VARCHAR},
			</if>
			<if test="linkIdcard != null">
				#{linkIdcard,jdbcType=VARCHAR},
			</if>
			<if test="creditCode != null">
				#{creditCode,jdbcType=VARCHAR},
			</if>
			<if test="regionId != null">
				#{regionId,jdbcType=DOUBLE},
			</if>
			<if test="regAddress != null">
				#{regAddress,jdbcType=VARCHAR},
			</if>
			<if test="placeX != null">
				#{placeX,jdbcType=VARCHAR},
			</if>
			<if test="placeY != null">
				#{placeY,jdbcType=VARCHAR},
			</if>
			<if test="qrcode != null">
				#{qrcode,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="checked != null">
				#{checked,jdbcType=SMALLINT},
			</if>
			<if test="deleteFlag != null">
				#{deleteFlag,jdbcType=SMALLINT},
			</if>
			<if test="sorting != null">
				#{sorting,jdbcType=SMALLINT},
			</if>
			<if test="createBy != null">
				#{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				#{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				#{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="param1 != null">
				#{param1,jdbcType=VARCHAR},
			</if>
			<if test="param2 != null">
				#{param2,jdbcType=VARCHAR},
			</if>
			<if test="param3 != null">
				#{param3,jdbcType=VARCHAR},
			</if>
			<if test="legalPerson != null">
				#{legalPerson,jdbcType=VARCHAR},
			</if>
			<if test="companyName != null">
				#{companyName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.dayuan3.admin.bean.chain.ColdChainUnit">
		update cold_chain_unit
		<set>
			<if test="departId != null">
				depart_id = #{departId,jdbcType=INTEGER},
			</if>
			<if test="regName != null">
				reg_name = #{regName,jdbcType=VARCHAR},
			</if>
			<if test="regType != null">
				reg_type = #{regType,jdbcType=SMALLINT},
			</if>
			<if test="linkUser != null">
				link_user = #{linkUser,jdbcType=VARCHAR},
			</if>
			<if test="linkPhone != null">
				link_phone = #{linkPhone,jdbcType=VARCHAR},
			</if>
			<if test="linkIdcard != null">
				link_idcard = #{linkIdcard,jdbcType=VARCHAR},
			</if>
			<if test="creditCode != null">
				credit_code = #{creditCode,jdbcType=VARCHAR},
			</if>
			<if test="regionId != null">
				region_id = #{regionId,jdbcType=DOUBLE},
			</if>
			<if test="regAddress != null">
				reg_address = #{regAddress,jdbcType=VARCHAR},
			</if>
			<if test="placeX != null">
				place_x = #{placeX,jdbcType=VARCHAR},
			</if>
			<if test="placeY != null">
				place_y = #{placeY,jdbcType=VARCHAR},
			</if>
			<if test="qrcode != null">
				qrcode = #{qrcode,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="checked != null">
				checked = #{checked,jdbcType=SMALLINT},
			</if>
			<if test="deleteFlag != null">
				delete_flag = #{deleteFlag,jdbcType=SMALLINT},
			</if>
			<if test="sorting != null">
				sorting = #{sorting,jdbcType=SMALLINT},
			</if>
			<if test="createBy != null">
				create_by = #{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				create_date = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
			<if test="param1 != null">
				param1 = #{param1,jdbcType=VARCHAR},
			</if>
			<if test="param2 != null">
				param2 = #{param2,jdbcType=VARCHAR},
			</if>
			<if test="param3 != null">
				param3 = #{param3,jdbcType=VARCHAR},
			</if>
			<if test="legalPerson != null">
				legal_person = #{legalPerson,jdbcType=VARCHAR},
			</if>
			<if test="companyName != null">
				company_name = #{companyName,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.dayuan3.admin.bean.chain.ColdChainUnit">
		update cold_chain_unit
		set depart_id = #{departId,jdbcType=INTEGER},
		reg_name = #{regName,jdbcType=VARCHAR},
		reg_type = #{regType,jdbcType=SMALLINT},
		link_user = #{linkUser,jdbcType=VARCHAR},
		link_phone = #{linkPhone,jdbcType=VARCHAR},
		link_idcard = #{linkIdcard,jdbcType=VARCHAR},
		credit_code = #{creditCode,jdbcType=VARCHAR},
		region_id = #{regionId,jdbcType=DOUBLE},
		reg_address = #{regAddress,jdbcType=VARCHAR},
		place_x = #{placeX,jdbcType=VARCHAR},
		place_y = #{placeY,jdbcType=VARCHAR},
		qrcode = #{qrcode,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		checked = #{checked,jdbcType=SMALLINT},
		delete_flag = #{deleteFlag,jdbcType=SMALLINT},
		sorting = #{sorting,jdbcType=SMALLINT},
		<!--
		create_by = #{createBy,jdbcType=VARCHAR},
		create_date = #{createDate,jdbcType=TIMESTAMP},
		-->
		update_by = #{updateBy,jdbcType=VARCHAR},
		update_date = #{updateDate,jdbcType=TIMESTAMP},
		param1 = #{param1,jdbcType=VARCHAR},
		param2 = #{param2,jdbcType=VARCHAR},
		param3 = #{param3,jdbcType=VARCHAR},
		legal_person = #{legalPerson,jdbcType=VARCHAR},
		company_name = #{companyName,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>


	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		where bro.delete_flag = 0 <!-- and brl.license_type = 0 and brl.delete_flag = 0 -->
		<trim suffixOverrides=",">
			<if test="obj.chainUnit != null">
				<if test="obj.chainUnit.regName != null and obj.chainUnit.regName != ''">
					and bro.reg_name like concat('%',#{obj.chainUnit.regName},'%')
				</if>
				<choose>
					<when test="obj.chainUnit.regType != null and obj.chainUnit.regType.indexOf(',')!=-1">
						and FIND_IN_SET(bro.reg_type,#{obj.chainUnit.regType})
					</when>
					<when test="obj.chainUnit.regType != null">
						and bro.reg_type = #{obj.chainUnit.regType}
					</when>
				</choose>
				<if test="obj.chainUnit.id != null">
					and bro.id = #{obj.chainUnit.id}
				</if>
			</if>
				<if test="obj.map != null">
					and bro.place_x is NOT NULL and bro.place_y IS NOT NULL and bro.place_x!=''and bro.place_y!='' AND bro.checked = 1
				</if>
		</trim>
	</sql>

	<!-- 分页查询 --> <!-- 2019-4-24 监管对象添加账号查看 胡 -->
	<select id="loadDatagrid" resultMap="JoinResultMap" parameterType="Object">
		SELECT
		<include refid="Base_Column_List" />,
		brb.businessNumber businessNumber
		FROM cold_chain_unit bro
		LEFT JOIN t_s_depart tsd ON bro.depart_id = tsd.id
		LEFT JOIN (
		SELECT tb2.cold_unit_id regId, COUNT(1) businessNumber
		FROM inspection_unit tb2
		WHERE tb2.delete_flag = 0
		GROUP BY tb2.cold_unit_id
		) brb ON brb.regId = bro.id
		<include refid="Example_Where_Clause" />
		<if test="obj.departCode != null and obj.departCode != ''">
			AND tsd.depart_code LIKE CONCAT(#{obj.departCode}, '%')
		</if>
		ORDER BY
		bro.checked DESC,
		bro.depart_id ASC,
		<if test="obj.departCode != null and obj.departCode != ''">
		tsd.depart_code ASC, tsd.sorting ASC,
		</if>
		bro.sorting ${order}
		LIMIT #{rowOffset}, #{pageSize}
	</select>

	<!-- 总数 -->
	<select id="getRowTotal" resultType="java.lang.Integer" parameterType="Object">
		select count(1) as rowTotal
		FROM cold_chain_unit bro
		LEFT JOIN t_s_depart tsd ON bro.depart_id = tsd.id
		LEFT JOIN (
		SELECT tb2.cold_unit_id regId, COUNT(1) businessNumber
		FROM inspection_unit tb2
		WHERE tb2.delete_flag = 0
		GROUP BY tb2.cold_unit_id
		) brb ON brb.regId = bro.id
		<include refid="Example_Where_Clause" />
		<if test="obj.departCode != null and obj.departCode != ''">
			AND tsd.depart_code LIKE CONCAT(#{obj.departCode}, '%')
		</if>
	</select>


	<!-- 分页查询-->
	<select id="loadDatagrid2" resultMap="JoinResultMap" parameterType="Object">
		SELECT
			bro.id id, bro.depart_id departId, bro.reg_name regName, bro.reg_type regType, bro.reg_address regAddress,
			bro.place_x placeX, bro.place_y placeY, bro.qrcode qrcode, bro.checked checked,
			bro.param1 param1, bro.param2 param2, bro.param3 param3,
			bro.legal_person legalPerson, bro.company_name companyName,
			tsd.depart_name departName,
			(SELECT COUNT(1) FROM inspection_unit WHERE delete_flag = 0 AND reg_id = bro.id) businessNumber,
			bt.reg_type regTypeName, bt.show_business showBusiness

			<if test="obj.isQueryUnqualified==1"><!--查询监管对象不合格检测数 -->
				,(select count(1) from data_check_recording dcr where  dcr.check_date>=#{obj.startDateStr} and dcr.check_date&lt;=#{obj.endDateStr}
				and dcr.reg_id=bro.id and dcr.conclusion='不合格' and dcr.delete_flag=0) unqualifiedNumber
			</if>
		FROM cold_chain_unit bro
		<if test="obj.chainUnit != null">
			<choose>
				<when test="obj.chainUnit.departId != null">
					INNER JOIN (SELECT id, depart_name, depart_code FROM t_s_depart WHERE delete_flag = 0 AND depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart WHERE id =#{obj.chainUnit.departId}), '%')) tsd ON bro.depart_id = tsd.id
				</when>
				<otherwise>
					INNER JOIN (SELECT id, depart_name, depart_code FROM t_s_depart WHERE delete_flag = 0) tsd ON bro.depart_id = tsd.id
				</otherwise>
			</choose>
		</if>
		INNER JOIN base_regulatory_type bt on bt.id=bro.reg_type
		WHERE bro.delete_flag = 0  and bt.checked=1 and bt.delete_flag=0
		<if test="obj.chainUnit != null">
			<if test="obj.chainUnit.regName != null and obj.chainUnit.regName != ''">
				and bro.reg_name like concat('%',#{obj.chainUnit.regName},'%')
			</if>
			<if test="obj.chainUnit.id != null">
				and bro.id = #{obj.chainUnit.id}
			</if>
			<choose>
				<when test="obj.chainUnit.regType != null and obj.chainUnit.regType.indexOf(',')!=-1">
					and FIND_IN_SET(bro.reg_type,#{obj.chainUnit.regType})
				</when>
				<when test="obj.chainUnit.regType != null">
					and bro.reg_type = #{obj.chainUnit.regType}
				</when>
			</choose>
		</if>
		<if test="obj.map != null">
			and bro.place_x is NOT NULL and bro.place_y IS NOT NULL and bro.place_x!=''and bro.place_y!='' AND bro.checked = 1
		</if>
		ORDER BY bro.checked DESC, tsd.depart_code ASC, bro.sorting ASC
		limit #{rowOffset}, #{pageSize}
	</select>

	<!-- 总数 -->
	<select id="getRowTotal2" resultType="java.lang.Integer" parameterType="Object">
		SELECT COUNT(1) AS rowTotal
		FROM cold_chain_unit bro
		<if test="obj.chainUnit != null">
			<choose>
				<when test="obj.chainUnit.departId != null">
					INNER JOIN (SELECT id, depart_name, depart_code FROM t_s_depart WHERE delete_flag = 0 AND depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart WHERE id =#{obj.chainUnit.departId}), '%')) tsd ON bro.depart_id = tsd.id
				</when>
				<otherwise>
					INNER JOIN (SELECT id, depart_name, depart_code FROM t_s_depart WHERE delete_flag = 0) tsd ON bro.depart_id = tsd.id
				</otherwise>
			</choose>
		</if>
		INNER JOIN base_regulatory_type bt on bt.id=bro.reg_type
		WHERE bro.delete_flag=0  and bt.checked=1 and bt.delete_flag=0
		<if test="obj.chainUnit != null">
			<if test="obj.chainUnit.regName != null and obj.chainUnit.regName != ''">
				and bro.reg_name like concat('%',#{obj.chainUnit.regName},'%')
			</if>
			<if test="obj.chainUnit.id != null">
				and bro.id = #{obj.chainUnit.id}
			</if>
			<choose>
				<when test="obj.chainUnit.regType != null and obj.chainUnit.regType.indexOf(',')!=-1">
					and FIND_IN_SET(bro.reg_type,#{obj.chainUnit.regType})
				</when>
				<when test="obj.chainUnit.regType != null">
					and bro.reg_type = #{obj.chainUnit.regType}
				</when>
			</choose>
		</if>
		<if test="obj.map != null">
			and bro.place_x is NOT NULL and bro.place_y IS NOT NULL and bro.place_x!=''and bro.place_y!='' AND bro.checked = 1
		</if>
	</select>

	<select id="queryByDepartId" resultMap="BaseResultMap" parameterType="Object">
		SELECT * FROM cold_chain_unit WHERE delete_flag = 0
		<if test="departId!=null">
			and depart_id in (SELECT id FROM t_s_depart WHERE depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart WHERE id = #{departId}), '%'))
		</if>
		<if test="checked!=null"> AND checked = #{checked}</if>
		ORDER BY create_date ASC
	</select>

	<select id="queryByDepartId1" resultMap="BaseResultMap" parameterType="Object">
		SELECT * FROM cold_chain_unit WHERE delete_flag = 0
		<if test="departId!=null">
			AND depart_id = #{departId}
		</if>
		<if test="checked!=null">
		 	AND checked = #{checked}
		</if>
	</select>

	<select id="queryRegByDepartId" resultMap="BaseResultMap" parameterType="Object">
		SELECT * from cold_chain_unit where  delete_flag = 0 and checked=1
		<if test="departId!=null">
			and depart_id=#{departId}
		</if>
		<if test="coldName!=null">
			and reg_name LIKE CONCAT(#{coldName},'%')
		</if>
	</select>

	<select id="queryRegByDepartIds" resultMap="BaseResultMap" parameterType="Object">
		SELECT * from cold_chain_unit where delete_flag = 0 and checked=1
		and reg_type=#{regualtoryTypeId}
		<if test="departArr != null and departArr.length > 0">
			and depart_id in
			<foreach item="item" index="index" collection="departArr" open="(" separator="," close=")">
				#{item}
			</foreach>
			order by sorting
		</if>
	</select>
	<!-- 根据机构code查询市场 2018-11-19 胡洪涛 -->
		<select id="queryRegByDepartCode" resultMap="BaseResultMap" parameterType="Object">
			SELECT * FROM cold_chain_unit obj LEFT JOIN t_s_depart d on obj.depart_id=d.id
			WHERE
			obj.delete_flag = 0 and obj.checked=1
			and obj.reg_type=#{regualtoryTypeId}
			and d.depart_code LIKE CONCAT(#{departCode},'%')
			 limit 0,50
	</select>
	<!-- /**
	 * 查询机构 下的所有 监管对象
	 * @param subDepartIds 机构id及子机构id
	 * @return
	 * @author LuoYX
	 * @date 2018年4月27日
	 */ -->
	<select id="queryRegIdsByDepartIds" resultType="java.lang.Integer" parameterType="Object">
		SELECT id FROM cold_chain_unit where delete_flag=0 AND checked=1
		AND depart_id in
		<if test="subDepartIds != null and subDepartIds.size() > 0">
			<foreach item="item" index="index" collection="subDepartIds" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="subDepartIds == null or subDepartIds.size() == 0">
			(0)
		</if>
 	</select>

 	<!--
 	/**
	 * 查询机构下的市场
	 * @param departId 部门ID
	 * @param subset 是否包含子机构
	 * @param regName 市场名称
	 * @return
	 * @author LuoYX
	 * @date 2018年5月14日
	 */
 	<select id="queryRegByDepartIdAndRegName" parameterType="Object" resultMap="BaseResultMap">
 		select
		*
		from cold_chain_unit
		where delete_flag = '0'
		<if test="subset == null or subset == 'N'.toString()">
			and depart_id = #{departId}
		</if>
		<if test="subset == 'Y'.toString()">
			and FIND_IN_SET(depart_id,getChildDepartLst(#{departId}))
		</if>
		<if test="regName != null and regName != ''">
			and reg_name like CONCAT('%', #{regName}, '%')
		</if>
 	</select>
 	-->
 	<!-- 根据dipartId查询全部object  2018-12-20 hu 增加监管对象类型条件查询-->
 	<select id="queryAllByDepartId" parameterType="Object" resultMap="BaseResultMap">
 		SELECT  *
 		from cold_chain_unit  WHERE depart_id in (
		SELECT id from t_s_depart WHERE depart_code
		 LIKE CONCAT((SELECT depart_code from t_s_depart WHERE id=#{departId}),'%')
		)
		and  delete_flag=0 and checked=1
		<if test="regType != null and regType != ''">
		 and reg_type=#{regType}
		 </if>
		<if test="id != null and id != ''">
			and id =#{id}
		</if>
		order BY reg_name
 	</select>

 	<!-- /**
	 * 查询机构下的市场
	 * @param departCode 机构编号
	 * @param subset 是否查询子机构下的
	 * @return
	 * @author LuoYX
	 * @date 2018年5月30日
	 */ -->
	 <!-- wtt 2019/1/23因柯桥项目修改 -->
 	<select id="queryRegMapByDepartCode" parameterType="Object" resultType="java.util.Map">
 		SELECT o.id,reg_name,o.reg_type,COUNT(reg_name) count,t.show_business
		FROM cold_chain_unit o
		LEFT JOIN base_regulatory_type t ON t.id=o.reg_type
		WHERE o.delete_flag=0
		AND depart_id in (
			SELECT id FROM t_s_depart WHERE depart_code
			<if test="subset != null and subset == 'Y'.toString()">
				LIKE CONCAT(#{departCode},'%')
			</if>
			<if test="subset != null and subset == 'N'.toString()">
				=#{departCode}
			</if>
		)
		GROUP BY reg_name
 	</select>

	<!-- 根据机构ID和监管对象编码查询监管对象  -->
	<select id="queryByOtherCode" resultMap="BaseResultMap" parameterType="Object">
		SELECT id, depart_id, reg_name, reg_type, link_user, link_phone, link_idcard,
			region_id, reg_address, place_x, place_y, qrcode, remark, checked,
			delete_flag, sorting, create_by, create_date, update_by, update_date,
			param1, param2, param3, credit_rating, monitoring_level,
			credit_code, company_name, legal_person
		FROM cold_chain_unit
		WHERE delete_flag = 0 AND depart_id = #{departId} AND param1 = #{otherCode}
	</select>
	<select id="queryByLastUpdateTime" resultMap="BaseResultMap" parameterType="Object">
		SELECT * FROM cold_chain_unit WHERE delete_flag = 0
		<if test="departId!=null">
			and depart_id in (SELECT id FROM t_s_depart WHERE depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart WHERE id = #{departId}), '%'))
		</if>
		<if test="checked!=null"> AND checked = #{checked}</if>
		<if test="lastUpdateTime!=null">
		and update_date &gt;= #{lastUpdateTime}
		</if>
	</select>

	<select id="queryById2Print" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		bro.*
		,(SELECT COUNT(1) FROM inspection_unit WHERE delete_flag = 0 AND reg_id = bro.id) businessNumber
		from cold_chain_unit bro
		where bro.delete_flag = 0 and bro.id = #{id,jdbcType=INTEGER}
	</select>

    <resultMap id="deviceResultMap" type="com.dayuan.model.regulatory.BaseRegObjDeviceModel">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="depart_id" property="departId" jdbcType="INTEGER"/>
        <result column="reg_name" property="regName" jdbcType="VARCHAR"/>
        <result column="reg_type" property="regType" jdbcType="VARCHAR"/>
        <result column="reg_address" property="regAddress" jdbcType="VARCHAR"/>
        <result column="checked" property="checked" jdbcType="SMALLINT"/>
        <result column="businessNumber" property="businessNumber" jdbcType="INTEGER"/>
        <result column="regTypeName" property="regTypeName" jdbcType="VARCHAR"/>
        <result column="showBusiness" property="showBusiness" jdbcType="SMALLINT"/>
    </resultMap>

    <!--
    仪器端嵌套网页的分页查询-查询列表
    @author：shit
    @date 2022-03-11
    按中文拼音排序 CONVERT(bro.reg_name USING GBK) ASC
    -->
    <select id="loadDatagridDevice" resultMap="deviceResultMap" parameterType="Object">
        SELECT
        bro.id id,
        bro.depart_id departId,
        bro.reg_name regName,
        bro.reg_address regAddress,
        bro.checked checked,
        (SELECT COUNT(1)
        FROM inspection_unit
        WHERE delete_flag = 0 AND reg_id = bro.id) businessNumber,
        bro.reg_type regType,
        bt.reg_type regTypeName,
        bt.show_business showBusiness
        FROM
		cold_chain_unit bro
        JOIN base_regulatory_type bt ON bt.id = bro.reg_type
        <if test="obj.id == null and obj.departId != null">
            JOIN (SELECT id, depart_name, depart_code FROM t_s_depart WHERE delete_flag = 0 AND
            depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart WHERE id
            =#{obj.departId}), '%')) tsd ON bro.depart_id = tsd.id
        </if>
        WHERE
        bro.delete_flag = 0
        AND bt.checked = 1
        AND bt.delete_flag = 0

        <if test="obj.regName != null and obj.regName != ''">
            AND bro.reg_name LIKE concat('%',#{obj.regName},'%')
        </if>

        <if test="obj.regType != null">
            AND bro.reg_type = #{obj.regType}
        </if>
		<if test="obj.id != null">
			AND bro.id = #{obj.id}
		</if>
        ORDER BY
        bro.checked DESC,
        <if test="obj.id == null and obj.departId != null">
            tsd.depart_code ASC,
        </if>
        bro.sorting ASC,
        bro.update_date DESC
        LIMIT #{rowOffset}, #{pageSize}
    </select>

    <!--
    仪器端嵌套网页的分页查询-查询总数
    @author：shit
    @date 2022-03-11
    -->
    <select id="getRowTotalDevice" resultType="java.lang.Integer" parameterType="Object">
        SELECT COUNT(1) AS rowTotal
        FROM cold_chain_unit bro
        <if test="obj.id == null and obj.departId != null">
            JOIN (SELECT id, depart_name, depart_code FROM t_s_depart WHERE delete_flag = 0 AND
            depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart WHERE id
            =#{obj.departId}), '%')) tsd ON bro.depart_id = tsd.id
        </if>
        WHERE
        bro.delete_flag = 0
        <if test="obj.regName != null and obj.regName != ''">
            AND bro.reg_name LIKE concat('%',#{obj.regName},'%')
        </if>
        <if test="obj.regType != null">
            AND bro.reg_type = #{obj.regType}
        </if>
		<if test="obj.id != null">
			AND bro.id = #{obj.id}
		</if>
    </select>

    <!--用于仪器嵌入的网页端新增被检单位时的唯一校验 shit:2022-03-14-->
    <select id="reqName" resultType="com.dayuan3.admin.bean.chain.ColdChainUnit">
        SELECT
        id,
        reg_name
        FROM cold_chain_unit
        WHERE
        delete_flag = 0 AND reg_name = #{name}
        AND reg_type = #{type}
        AND depart_id = #{departId}
        <if test="id != null">
            AND id != #{id}
        </if>
    </select>

	<select id="queryByIdForTemplate4" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		bro.*
		,(SELECT COUNT(1) FROM inspection_unit WHERE delete_flag = 0 AND reg_id = bro.id) businessNumber
		from cold_chain_unit bro
		where bro.delete_flag = 0 and bro.id = #{id,jdbcType=INTEGER}
	</select>

	<select id="queryAllUnit" resultType="com.dayuan3.api.vo.ColdChainUnitRespVo" parameterType="java.lang.String">
		select bro.id,bro.reg_name regName,bro.depart_id departId,bro.reg_type regType,bro.credit_code creditCode,bro.company_name companyName,bro. legal_person legalPerson,
		bro.legal_phone legalPhone,bro.link_user linkUser,bro.link_phone linkPhone,bro.link_idcard  linkIdCard,bro.reg_address regAddress,bro.place_x placeX,bro.place_y placeY
		 from cold_chain_unit bro
		where bro.delete_flag = 0
		<if test="keywords != null and keywords != ''">
		AND bro.reg_name LIKE concat('%',#{keywords},'%')
	</if>
	</select>
</mapper>