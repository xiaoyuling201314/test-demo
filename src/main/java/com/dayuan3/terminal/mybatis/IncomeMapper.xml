<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dayuan3.terminal.mapper.IncomeMapper">
  <resultMap id="BaseResultMap" type="com.dayuan3.terminal.bean.Income">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="sampling_id" jdbcType="INTEGER" property="samplingId" />
    <result column="order_platform" jdbcType="SMALLINT" property="orderPlatform" />
    <result column="pay_type" jdbcType="SMALLINT" property="payType" />
    <result column="pay_source" jdbcType="VARCHAR" property="paySource" />
    <result column="pay_number" jdbcType="VARCHAR" property="payNumber" />
    <result column="transaction_type" jdbcType="SMALLINT" property="transactionType" />
    <result column="pay_account" jdbcType="VARCHAR" property="payAccount" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="pay_date" jdbcType="TIMESTAMP" property="payDate" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="delete_flag" jdbcType="SMALLINT" property="deleteFlag" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="param1" jdbcType="VARCHAR" property="param1" />
    <result column="param2" jdbcType="VARCHAR" property="param2" />
    <result column="param3" jdbcType="VARCHAR" property="param3" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="report_money" jdbcType="DOUBLE" property="reportMoney" />
	<result column="take_sampling_money" jdbcType="DOUBLE" property="takeSamplingMoney" />
	<result column="check_money" jdbcType="DOUBLE" property="checkMoney" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="invoice_id" jdbcType="INTEGER" property="invoiceId" />
  </resultMap>
  <sql id="Base_Column_List">
        id,number,sampling_id,order_platform,pay_type,pay_source,
        pay_number,transaction_type,pay_account,money,pay_date,
        status,remark,invoice_id,delete_flag,create_by,
        create_date,update_by,update_date,param1,param2,
        param3,create_user,report_money,take_sampling_money,check_money
  </sql>
<!--  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">-->
<!--    select -->
<!--    <include refid="Base_Column_List" />-->
<!--    from income-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </select>-->
<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
<!--    delete from income-->
<!--     where id in-->
<!--	<foreach collection="array" item="ids" index="index" open="(" close=")" separator=",">-->
<!--		#{ids}-->
<!--	</foreach>-->
<!--  </delete>-->
<!--  <insert id="insert" parameterType="com.dayuan3.terminal.bean.Income" useGeneratedKeys="true" keyProperty="id">-->
<!--    insert into income (id, number, sampling_id, -->
<!--      order_platform, pay_type, pay_source, -->
<!--      pay_number, transaction_type, pay_account, -->
<!--      money, pay_date, status, -->
<!--      remark, delete_flag, create_by, -->
<!--      create_date, update_by, update_date, -->
<!--      param1, param2, param3, create_user, report_money, take_sampling_money,check_money,invoice_id-->
<!--      )-->
<!--    values (#{id,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, #{samplingId,jdbcType=INTEGER}, -->
<!--      #{orderPlatform,jdbcType=SMALLINT}, #{payType,jdbcType=SMALLINT}, #{paySource,jdbcType=VARCHAR}, -->
<!--      #{payNumber,jdbcType=VARCHAR}, #{transactionType,jdbcType=SMALLINT}, #{payAccount,jdbcType=VARCHAR}, -->
<!--      #{money,jdbcType=INTEGER}, #{payDate,jdbcType=TIMESTAMP}, #{status,jdbcType=SMALLINT},-->
<!--      #{remark,jdbcType=VARCHAR}, #{deleteFlag,jdbcType=SMALLINT}, #{createBy,jdbcType=VARCHAR}, -->
<!--      #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, -->
<!--      #{param1,jdbcType=VARCHAR}, #{param2,jdbcType=VARCHAR}, #{param3,jdbcType=VARCHAR},#{createUser,jdbcType=VARCHAR},-->
<!--      #{reportMoney,jdbcType=DOUBLE}, #{takeSamplingMoney,jdbcType=DOUBLE},#{checkMoney,jdbcType=DOUBLE},#{invoiceId,jdbcType=INTEGER}-->
<!--      )-->
<!--  </insert>-->
<!--  <insert id="insertSelective" parameterType="com.dayuan3.terminal.bean.Income" useGeneratedKeys="true" keyProperty="id">-->
<!--    insert into income-->
<!--    <trim prefix="(" suffix=")" suffixOverrides=",">-->
<!--      <if test="id != null">-->
<!--        id,-->
<!--      </if>-->
<!--      <if test="number != null">-->
<!--        number,-->
<!--      </if>-->
<!--      <if test="samplingId != null">-->
<!--        sampling_id,-->
<!--      </if>-->
<!--      <if test="orderPlatform != null">-->
<!--        order_platform,-->
<!--      </if>-->
<!--      <if test="payType != null">-->
<!--        pay_type,-->
<!--      </if>-->
<!--      <if test="paySource != null">-->
<!--        pay_source,-->
<!--      </if>-->
<!--      <if test="payNumber != null">-->
<!--        pay_number,-->
<!--      </if>-->
<!--      <if test="transactionType != null">-->
<!--        transaction_type,-->
<!--      </if>-->
<!--      <if test="payAccount != null">-->
<!--        pay_account,-->
<!--      </if>-->
<!--      <if test="money != null">-->
<!--        money,-->
<!--      </if>-->
<!--      <if test="payDate != null">-->
<!--        pay_date,-->
<!--      </if>-->
<!--      <if test="status != null">-->
<!--        status,-->
<!--      </if>-->
<!--      <if test="remark != null">-->
<!--        remark,-->
<!--      </if>-->
<!--      <if test="deleteFlag != null">-->
<!--        delete_flag,-->
<!--      </if>-->
<!--      <if test="createBy != null">-->
<!--        create_by,-->
<!--      </if>-->
<!--      <if test="createDate != null">-->
<!--        create_date,-->
<!--      </if>-->
<!--      <if test="updateBy != null">-->
<!--        update_by,-->
<!--      </if>-->
<!--      <if test="updateDate != null">-->
<!--        update_date,-->
<!--      </if>-->
<!--      <if test="param1 != null">-->
<!--        param1,-->
<!--      </if>-->
<!--      <if test="param2 != null">-->
<!--        param2,-->
<!--      </if>-->
<!--      <if test="param3 != null">-->
<!--        param3,-->
<!--      </if>-->
<!--      <if test="createUser != null">-->
<!--        create_user,-->
<!--      </if>-->
<!--      <if test="reportMoney != null">-->
<!--        report_money,-->
<!--      </if>-->
<!--       <if test="takeSamplingMoney != null">-->
<!--        take_sampling_money,-->
<!--      </if>-->
<!--       <if test="checkMoney != null">-->
<!--         check_money,-->
<!--      </if>-->
<!--       <if test="invoiceId != null">-->
<!--         invoice_id,-->
<!--      </if>-->
<!--    </trim>-->
<!--    <trim prefix="values (" suffix=")" suffixOverrides=",">-->
<!--      <if test="id != null">-->
<!--        #{id,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="number != null">-->
<!--        #{number,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="samplingId != null">-->
<!--        #{samplingId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="orderPlatform != null">-->
<!--        #{orderPlatform,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="payType != null">-->
<!--        #{payType,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="paySource != null">-->
<!--        #{paySource,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="payNumber != null">-->
<!--        #{payNumber,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="transactionType != null">-->
<!--        #{transactionType,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="payAccount != null">-->
<!--        #{payAccount,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="money != null">-->
<!--        #{money,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="payDate != null">-->
<!--        #{payDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="status != null">-->
<!--        #{status,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="remark != null">-->
<!--        #{remark,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="deleteFlag != null">-->
<!--        #{deleteFlag,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="createBy != null">-->
<!--        #{createBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="createDate != null">-->
<!--        #{createDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="updateBy != null">-->
<!--        #{updateBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="updateDate != null">-->
<!--        #{updateDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="param1 != null">-->
<!--        #{param1,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="param2 != null">-->
<!--        #{param2,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="param3 != null">-->
<!--        #{param3,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="createUser != null">-->
<!--        #{createUser,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="reportMoney != null">-->
<!--        #{reportMoney,jdbcType=DOUBLE},-->
<!--      </if>-->
<!--       <if test="takeSamplingMoney != null">-->
<!--        #{takeSamplingMoney,jdbcType=DOUBLE},-->
<!--      </if>-->
<!--       <if test="checkMoney != null">-->
<!--        #{checkMoney,jdbcType=DOUBLE},-->
<!--      </if>-->
<!--    </trim>-->
<!--  </insert>-->
<!--  <update id="updateByPrimaryKeySelective" parameterType="com.dayuan3.terminal.bean.Income">-->
<!--    update income-->
<!--    <set>-->
<!--      <if test="number != null">-->
<!--        number = #{number,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="samplingId != null">-->
<!--        sampling_id = #{samplingId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="orderPlatform != null">-->
<!--        order_platform = #{orderPlatform,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="payType != null">-->
<!--        pay_type = #{payType,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="paySource != null">-->
<!--        pay_source = #{paySource,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="payNumber != null">-->
<!--        pay_number = #{payNumber,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="transactionType != null">-->
<!--        transaction_type = #{transactionType,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="payAccount != null">-->
<!--        pay_account = #{payAccount,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="money != null">-->
<!--        money = #{money,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="payDate != null">-->
<!--        pay_date = #{payDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="status != null">-->
<!--        status = #{status,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="remark != null">-->
<!--        remark = #{remark,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="deleteFlag != null">-->
<!--        delete_flag = #{deleteFlag,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="createBy != null">-->
<!--        create_by = #{createBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="createDate != null">-->
<!--        create_date = #{createDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="updateBy != null">-->
<!--        update_by = #{updateBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="updateDate != null">-->
<!--        update_date = #{updateDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="param1 != null">-->
<!--        param1 = #{param1,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="param2 != null">-->
<!--        param2 = #{param2,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="param3 != null">-->
<!--        param3 = #{param3,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="createUser != null">-->
<!--        create_user = #{createUser,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="reportMoney != null">-->
<!--        report_money = #{reportMoney,jdbcType=DOUBLE},-->
<!--      </if>-->
<!--       <if test="takeSamplingMoney != null">-->
<!--        take_sampling_money = #{takeSamplingMoney,jdbcType=DOUBLE},-->
<!--      </if>-->
<!--       <if test="checkMoney != null">-->
<!--         check_money = #{checkMoney,jdbcType=DOUBLE},-->
<!--      </if>-->
<!--       <if test="invoiceId != null">-->
<!--         invoice_id = #{invoiceId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--    </set>-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </update>-->
<!--  <update id="updateByPrimaryKey" parameterType="com.dayuan3.terminal.bean.Income">-->
<!--    update income-->
<!--    set number = #{number,jdbcType=VARCHAR},-->
<!--      sampling_id = #{samplingId,jdbcType=INTEGER},-->
<!--      order_platform = #{orderPlatform,jdbcType=SMALLINT},-->
<!--      pay_type = #{payType,jdbcType=SMALLINT},-->
<!--      pay_source = #{paySource,jdbcType=VARCHAR},-->
<!--      pay_number = #{payNumber,jdbcType=VARCHAR},-->
<!--      transaction_type = #{transactionType,jdbcType=SMALLINT},-->
<!--      pay_account = #{payAccount,jdbcType=VARCHAR},-->
<!--      money = #{money,jdbcType=INTEGER},-->
<!--      pay_date = #{payDate,jdbcType=TIMESTAMP},-->
<!--      status = #{status,jdbcType=SMALLINT},-->
<!--      remark = #{remark,jdbcType=VARCHAR},-->
<!--      delete_flag = #{deleteFlag,jdbcType=SMALLINT},-->
<!--      create_by = #{createBy,jdbcType=VARCHAR},-->
<!--      create_date = #{createDate,jdbcType=TIMESTAMP},-->
<!--      update_by = #{updateBy,jdbcType=VARCHAR},-->
<!--      update_date = #{updateDate,jdbcType=TIMESTAMP},-->
<!--      param1 = #{param1,jdbcType=VARCHAR},-->
<!--      param2 = #{param2,jdbcType=VARCHAR},-->
<!--      param3 = #{param3,jdbcType=VARCHAR},-->
<!--      create_user = #{createUser,jdbcType=VARCHAR},-->
<!--      report_money = #{reportMoney,jdbcType=DOUBLE},-->
<!--      take_sampling_money = #{takeSamplingMoney,jdbcType=DOUBLE},-->
<!--      check_money = #{checkMoney,jdbcType=DOUBLE},-->
<!--      invoice_id = #{invoiceId,jdbcType=INTEGER}-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </update>-->

  <select id="queryPaymentOrder" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT <include refid="Base_Column_List"></include>
      FROM income
    WHERE delete_flag = 0 AND transaction_type = 0 AND status = 1
      AND sampling_id = #{id,jdbcType=INTEGER}
    LIMIT 0,1
  </select>

  	<!-- 微信端 根据订单id 查询 -->
    <select id="selectBySamplingId" parameterType="Object" resultMap="BaseResultMap">
	SELECT * FROM income WHERE delete_flag=0
     <choose>
       <when test="incNumber!=null">
         AND number = #{incNumber,jdbcType=VARCHAR}
       </when>
       <otherwise>
         AND sampling_id=#{samplingId}
         AND transaction_type=#{transactionType}
       </otherwise>
     </choose>
     and (status = 0 or status = 1)
	ORDER BY update_date DESC LIMIT 0,1
  </select>
  	<!-- 微信端 根据交易订单number 查询  2019-11-2 刪除 transaction_type 状态 -->
    <select id="selectByNumber" parameterType="Object" resultMap="BaseResultMap">
		 SELECT * FROM income WHERE delete_flag=0   and order_platform=#{orderPlatform}  AND number=#{number}
		ORDER BY update_date DESC LIMIT 0,1
  </select>
  <!-- 根据订单id  删除流水 仅删除 wx端检测费用流水 -->
    <delete id="deleteBySamplingId" parameterType="java.lang.Integer">
    update income set delete_flag=1,update_date=now()
    where transaction_type=0  and     sampling_id =#{samplingId}
 
  </delete>
  <resultMap id="StatisticalResultMap" type="com.dayuan3.terminal.model.IncomeModel">
    <result column="payDate" jdbcType="VARCHAR" property="payDate" />
    <result column="checkMoney" jdbcType="DOUBLE" property="checkMoney" />
    <result column="printMoney" jdbcType="DOUBLE" property="printMoney" />
    <result column="checkCount" jdbcType="INTEGER" property="checkCount"/>
    <result column="printCount" jdbcType="INTEGER" property="printCount"/>
    <result column="total" jdbcType="DOUBLE" property="total" />
  </resultMap>
  <!-- 收费汇总查询 -->
  <select id="loadDatagridForStatistics" resultMap="StatisticalResultMap" parameterType="Object" >
     select DATE_FORMAT(pay_date,'%Y-%m-%d') payDate,
		sum(if(transaction_type=0 and `status`=1,money,0)) checkMoney,
		sum(if(transaction_type=1 and `status`=1,money,0)) printMoney,
		count(if(transaction_type=0,money,0)) checkCount,
		count(if(transaction_type=1,money,0)) printCount
		 from income
		where  `status`=1 and pay_date&gt;#{obj.startDateStr} and pay_date&lt;#{obj.endDateStr}
		<!-- <if test="obj.checkDateStartDateStr !=null and obj.checkDateStartDateStr !=''">
            and pay_date&gt;=#{obj.checkDateStartDateStr}
        </if>
        <if test="obj.checkDateEndDateStr !=null and obj.checkDateEndDateStr !=''">
            and pay_date&lt;= CONCAT(#{obj.checkDateEndDateStr},' 23:59:59')
        </if> -->
		GROUP BY payDate  order by payDate ${order} LIMIT #{rowOffset}, #{pageSize}
     	
    </select>

    <select id="getRowTotalForStatistics" resultType="java.lang.Integer" parameterType="Object" >
      SELECT count( 1 ) as rowTotal FROM
	( SELECT id FROM income WHERE  `status`=1 and pay_date&gt;#{obj.startDateStr} and pay_date&lt;#{obj.endDateStr} GROUP BY DATE_FORMAT( pay_date, '%Y-%m-%d' ) ) a
    </select>
    <!-- 收费明细查询 -->
      <select id="loadDatagridForIncome" resultMap="BaseResultMap" parameterType="Object" >
       select ic.*,iUser.real_name from income  ic 
 		left join inspection_unit_user iUser on ic.create_by=iUser.id
       <include refid="Example_Where_ClauseForIncome"/>
		order by ic.pay_date ${order} LIMIT #{rowOffset}, #{pageSize}
    </select>

    <select id="getRowTotalForIncome" resultType="java.lang.Integer" parameterType="Object" >
      select count(1) as rowTotal from income ic 
		<include refid="Example_Where_ClauseForIncome"/>
    </select>
    <sql id="Example_Where_ClauseForIncome">
    	where ic.delete_flag=0
		and ic.sampling_id =${obj.samplingId} 
		<if test="obj.payDate!=null">
		and ic.pay_date like CONCAT(#{obj.payDate},'%')
		</if>
		<if test="obj.keyWords!=null">
		 and ic.pay_number like CONCAT(#{obj.keyWords},'%') 
		</if>
    </sql>
    <!-- 根据商户订单号查询订单 ,因为可能出现不同支付方式同时支付导致出现重复收费的情况，
	所以根据商户订单号可能出现1-3个交易记录  -->
    <select id="queryListByNumber" parameterType="Object" resultMap="BaseResultMap">
		 SELECT * FROM income WHERE  delete_flag=0 
		 <if test="sampleId!=null">
		 	 and sampling_id=#{sampleId}
		 </if>
		 <if test="number!=null">
		 	and number=#{number}
		 </if>
		   ORDER BY pay_date asc
  </select>
  <select id="queryUniqueByNumber" resultType="java.lang.Integer" parameterType="Object" >
      select count(1) from income where number=#{number} and pay_type=#{payType}
    </select>
    
      <!-- 查询未开票订单列表 2020-3-27 huht -->
    <select id="queryInvoiceList" resultMap="BaseResultMap" parameterType="Object">
        select * FROM income
		WHERE
			delete_flag = 0
		AND (pay_type = 0 OR pay_type = 1)
		AND (transaction_type=0 or transaction_type=1 or transaction_type=2)
		AND STATUS = 1
		AND create_by =#{userId}
		AND invoice_id IS NULL
        <if test="start!=null">
            and pay_date &gt;=#{start}
        </if>
        <if test="end!=null">
            and pay_date &lt;=#{end}
        </if>
        order by pay_date desc
        <if test="rowStart !=null and rowEnd!=null">
            limit #{rowStart}, #{rowEnd}
        </if>
    </select>
    
    <!-- 获取列表下单金额 -->
    <select id="queryIncomeListMoney" resultType="java.lang.Double" parameterType="Object">
    SELECT SUM(money)  FROM income WHERE
			delete_flag = 0 
 			and id in 
				<foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
			#{id}
			</foreach>
    </select>
    <select id="queryBySamplingId" resultType="java.lang.String" parameterType="java.lang.Integer">
        select GROUP_CONCAT(pay_number) from income  where sampling_id=#{samplingId}
        and (transaction_type=0 or transaction_type=1)
        and `status`=1
    </select>
    <select id="queryAllSplitOrder" resultMap="BaseResultMap"  parameterType="Object">
        select * from income tb1
        where tb1.delete_flag=0 and tb1.`status`=1
        and tb1.create_date>#{start}
        and tb1.number not in
        (select income_number from tb_split_amount split where tb1.number=split.income_number and split.status!=2)
    </select>

</mapper>