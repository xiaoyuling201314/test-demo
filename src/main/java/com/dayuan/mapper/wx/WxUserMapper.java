package com.dayuan.mapper.wx;

import com.dayuan.bean.wx.WxUser;
import com.dayuan.mapper.BaseMapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface WxUserMapper extends BaseMapper<WxUser, Integer> {
	/** This method was generated by MyBatis Generator. This method corresponds
	 * to the database table wx_user
	 *
	 * @mbg.generated Thu May 17 14:48:38 CST 2018 */
	int deleteByPrimaryKey(Integer id);

	/** This method was generated by MyBatis Generator. This method corresponds
	 * to the database table wx_user
	 *
	 * @mbg.generated Thu May 17 14:48:38 CST 2018 */
	int insert(WxUser record);

	/** This method was generated by MyBatis Generator. This method corresponds
	 * to the database table wx_user
	 *
	 * @mbg.generated Thu May 17 14:48:38 CST 2018 */
	int insertSelective(WxUser record);

	/** This method was generated by MyBatis Generator. This method corresponds
	 * to the database table wx_user
	 *
	 * @mbg.generated Thu May 17 14:48:38 CST 2018 */
	WxUser selectByPrimaryKey(Integer id);

	/** This method was generated by MyBatis Generator. This method corresponds
	 * to the database table wx_user
	 *
	 * @mbg.generated Thu May 17 14:48:38 CST 2018 */
	int updateByPrimaryKeySelective(WxUser record);

	/** This method was generated by MyBatis Generator. This method corresponds
	 * to the database table wx_user
	 *
	 * @mbg.generated Thu May 17 14:48:38 CST 2018 */
	int updateByPrimaryKey(WxUser record);

	WxUser selectByOpenid(String openid);

	/** <!-- 根据openid 查询绑定用户信息 -->
	 * @param openid
	 * @return */
	WxUser selectByOpenidForUser(String openid);

	/** 根据用户id查询账号是否被绑定
	 * @param userId
	 * @return */
	WxUser selectByUserId(String userId);
	
	
	List<WxUser>    selectByDepartId(String  departId);
	/**
	 * 根据用户名称查询用户是否已存在
	 * @param userName
	 * @return
	 */
	WxUser	getUserByUserName(String userName);
	/**
	 * 检验用户名密码
	 * @param userName
	 * @param password
	 * @return
	 */
	WxUser	selectByUserAndPwd( @Param("userName")String userName, @Param("password")String password);
	/**
	 * 根据机构code查询可绑定的平台账号
	 * @param departCode
	 * @return
	 */
	List<WxUser> selectByDepartCode(String departCode);

	/**
	 * 查询已经存在的所有人员
	 * @return
	 */
    List<WxUser> selectAllUser();
}