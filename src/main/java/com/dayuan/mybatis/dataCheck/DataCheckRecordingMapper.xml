<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dayuan.mapper.dataCheck.DataCheckRecordingMapper">
    <resultMap id="BaseResultMap" type="com.dayuan.bean.dataCheck.DataCheckRecording">
        <id property="id" column="id" />
        <result property="uid" column="uid" />
        <result property="checkCode" column="check_code" />
        <result property="foodId" column="food_id" />
        <result property="foodName" column="food_name" />
        <result property="itemId" column="item_id" />
        <result property="itemName" column="item_name" />
        <result property="regId" column="reg_id" />
        <result property="regName" column="reg_name" />
        <result property="regUserId" column="reg_user_id" />
        <result property="regUserName" column="reg_user_name" />
        <result property="departId" column="depart_id" />
        <result property="departName" column="depart_name" />
        <result property="pointId" column="point_id" />
        <result property="pointName" column="point_name" />
        <result property="samplingId" column="sampling_id" />
        <result property="samplingDetailId" column="sampling_detail_id" />
        <result property="checkUserid" column="check_userid" />
        <result property="checkUsername" column="check_username" />
        <result property="checkUserSignature" column="check_user_signature" />
        <result property="checkDate" column="check_date" />
        <result property="uploadDate" column="upload_date" />
        <result property="checkAccordId" column="check_accord_id" />
        <result property="checkAccord" column="check_accord" />
        <result property="limitValue" column="limit_value" />
        <result property="checkResult" column="check_result" />
        <result property="checkUnit" column="check_unit" />
        <result property="conclusion" column="conclusion" />
        <result property="deviceId" column="device_id" />
        <result property="deviceName" column="device_name" />
        <result property="deviceModel" column="device_model" />
        <result property="deviceMethod" column="device_method" />
        <result property="deviceCompany" column="device_company" />
        <result property="reloadFlag" column="reload_flag" />
        <result property="dataSource" column="data_source" />
        <result property="statusFalg" column="status_falg" />
        <result property="deleteFlag" column="delete_flag" />
        <result property="createBy" column="create_by" />
        <result property="createDate" column="create_date" />
        <result property="updateBy" column="update_by" />
        <result property="updateDate" column="update_date" />
        <result property="remark" column="remark" />
    </resultMap>
    <resultMap type="com.dayuan.model.dataCheck.DataCheckRecordingModel" id="DataMap">
        <result column="depart_id" property="departId" jdbcType="INTEGER"/>
        <result column="depart_name" property="departName" jdbcType="VARCHAR"/>
        <result column="point_id" property="pointId" jdbcType="INTEGER"/>
        <result column="point_name" property="pointName" jdbcType="VARCHAR"/>
        <result column="num" property="num" jdbcType="INTEGER"/>
        <result column="qualified" property="qualified" jdbcType="INTEGER"/>
        <result column="unqualified" property="unqualified" jdbcType="INTEGER"/>
        <result column="item_id" property="itemId" jdbcType="VARCHAR"/>
        <result column="item_name" property="itemName" jdbcType="VARCHAR"/>
        <result column="food_id" property="foodId" jdbcType="INTEGER"/>
        <result column="food_name" property="foodName" jdbcType="VARCHAR"/>
        <result column="food_type_id" property="foodTypeId" jdbcType="VARCHAR"/>
        <result column="food_type_name" property="foodTypeName" jdbcType="VARCHAR"/>
        <result column="reg_id" property="regId" jdbcType="INTEGER"/>
        <result column="reg_name" property="regName" jdbcType="VARCHAR"/>
        <result column="check_username" property="checkUsername" jdbcType="VARCHAR"/>
        <result column="reg_user_name" property="regUserName" jdbcType="VARCHAR"/>
        <result column="check_result" property="checkResult" jdbcType="VARCHAR"/>
        <result column="check_date" property="checkDate" jdbcType="VARCHAR"/>
        <result column="data_type" property="dataType" jdbcType="SMALLINT"/>
        <result column="check_name" property="checkName" jdbcType="VARCHAR"/>
        <result column="purchase_amount" property="purchaseAmount" jdbcType="DOUBLE"/>
        <result column="destory_number" property="destoryNumber" jdbcType="DOUBLE"/>
        <result column="unqualified_food" property="unqualifiedFood" jdbcType="VARCHAR"/>
        <result column="area_depart_name" property="areaDepartName" jdbcType="VARCHAR"/>
        <result column="jcdpn" property="jcdpn" jdbcType="INTEGER"/>
        <result column="zfpn" property="zfpn" jdbcType="INTEGER"/>
        <result column="qypn" property="qypn" jdbcType="INTEGER"/>
        <result column="carpn" property="carpn" jdbcType="INTEGER"/>
        <result column="zfnum" property="zfnum" jdbcType="INTEGER"/>
        <result column="qynum" property="qynum" jdbcType="INTEGER"/>
        <result column="carnum" property="carnum" jdbcType="INTEGER"/>
        <result column="zfun" property="zfun" jdbcType="INTEGER"/>
        <result column="qyun" property="qyun" jdbcType="INTEGER"/>
        <result column="carun" property="carun" jdbcType="INTEGER"/>
        <result column="task_type" property="taskType" jdbcType="SMALLINT"/>
        <result column="sorting" property="sorting" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap type="com.dayuan.bean.data.foodTypeStatistics" id="TypeDataMap">
        <result column="num" property="num" jdbcType="INTEGER"/>
        <result column="qualified" property="qualified" jdbcType="INTEGER"/>
        <result column="unqualified" property="unqualified" jdbcType="INTEGER"/>
        <result column="purchase_amount" property="purchaseAmount" jdbcType="DOUBLE"/>
        <result column="destory_number" property="destoryNumber" jdbcType="DOUBLE"/>
        <result column="unqualified_food" property="unqualifiedFood" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="RecordingMap" type="com.dayuan.model.dataCheck.CheckResultModel"></resultMap>
    <sql id="Base_Column_List">
        id,uid,check_code,food_id,food_name,item_id,
        item_name,reg_id,reg_name,reg_user_id,reg_user_name,
        depart_id,depart_name,point_id,point_name,sampling_id,
        sampling_detail_id,check_userid,check_username,check_user_signature,check_date,
        upload_date,check_accord_id,check_accord,limit_value,check_result,
        check_unit,conclusion,device_id,device_name,device_model,
        device_method,device_company,reload_flag,data_source,status_falg,
        delete_flag,create_by,create_date,update_by,update_date,
        remark
    </sql>
    <select id="queryByList" resultMap="BaseResultMap" parameterType="Object">
        SELECT dcr.id id, dcr.uid uid, dcr.check_code, dcr.task_id, dcr.sampling_id,
        dcr.sampling_detail_id, dcr.food_type_id,
        dcr.food_type_name, dcr.food_id, dcr.food_name,
        dcr.reg_id, dcr.reg_name, dcr.reg_user_id, dcr.reg_user_name, dcr.depart_id, dcr.depart_name, dcr.point_id,
        dcr.point_name,
        dcr.check_userid, dcr.check_username,
        dcr.auditor_id,  dcr.upload_id, dcr.upload_date, dcr.item_id, dcr.item_name,
        dcr.check_date,
        dcr.check_accord_id, dcr.check_accord,
        dcr.device_id, dcr.device_name, dcr.limit_value, dcr.check_result, dcr.check_unit, dcr.conclusion,
        dcr.data_source, dcr.delete_flag,
        dcr.create_by,
        dcr.create_date, dcr.update_by, dcr.update_date, dcr.device_method, dcr.device_model, dcr.device_company,
        dcr.reload_flag,
        dcr.status_falg, dcr.remark,
        tsd.origin, tsd.sample_code samplingDetailCode
        FROM data_check_recording dcr
        LEFT JOIN tb_sampling_detail tsd ON dcr.sampling_detail_id = tsd.id
        <if test="regTypeId !=null and regTypeId !=''">
            LEFT JOIN base_regulatory_object obj ON dcr.reg_id=obj.id
            LEFT JOIN base_regulatory_type type ON obj.reg_type=type.id
        </if>
        WHERE dcr.delete_flag = 0
        <if test="regTypeId !=null and regTypeId !=''">
            AND FIND_IN_SET(type.id,#{regTypeId})
        </if>
        <if test="departArr != null and departArr.length > 0">
            AND dcr.depart_id IN
            <foreach item="item" index="index" collection="departArr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="pointArr != null and pointArr.length > 0">
            AND dcr.point_id IN
            <foreach item="item" index="index" collection="pointArr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <include refid="check_Where_Clauses"/>
        ORDER BY dcr.check_date DESC
    </select>
    <select id="selectTreatment" resultMap="DataMap">
        SELECT '不合格处理' AS check_name,
        COUNT(*) num,(SELECT COUNT(*) dealing
        FROM data_check_recording r
        LEFT JOIN data_unqualified_treatment dut ON dut.check_recording_id=r.rid
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1 WHERE t1.delete_flag=0 AND t1.depart_code LIKE CONCAT((SELECT
        depart_code FROM t_s_depart t2 WHERE
        t2.id=#{did}),'%')) t
        ON r.depart_id=t.id
        WHERE rid IS NOT NULL
        AND r.delete_flag = 0  AND dut.deal_method = 0
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>)qualified,
        (SELECT COUNT(*) dealed
        FROM data_check_recording r
        LEFT JOIN data_unqualified_treatment dut ON dut.check_recording_id=r.rid
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1 WHERE t1.delete_flag=0 AND t1.depart_code LIKE CONCAT((SELECT
        depart_code FROM t_s_depart t2 WHERE
        t2.id=#{did}),'%')) t
        ON r.depart_id=t.id
        WHERE rid IS NOT NULL
        AND r.delete_flag = 0 AND dut.deal_method = 1
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>)unqualified
        FROM data_check_recording r
        LEFT JOIN data_unqualified_treatment dut ON dut.check_recording_id = r.rid
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1 WHERE t1.delete_flag=0 AND t1.depart_code LIKE CONCAT((SELECT
        depart_code FROM t_s_depart t2 WHERE
        t2.id=#{did}),'%')) t
        ON r.depart_id=t.id
        WHERE r.delete_flag = 0 AND r.conclusion ='不合格' AND dut.deal_method IS NULL
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
    </select>
    <select id="queryBySamplingDetailId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM data_check_recording
        WHERE sampling_detail_id = #{samplingDetailId,jdbcType=VARCHAR}
    </select>
    <select id="selectTrendNum" resultMap="DataMap">
        SELECT '检测数据总数' AS check_name,COUNT(*) num,
        SUM(CASE WHEN r.conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified
        FROM data_check_recording r
        LEFT JOIN base_point bp ON bp.id=r.point_id
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1 WHERE t1.delete_flag=0 AND t1.depart_code LIKE CONCAT((SELECT
        depart_code FROM t_s_depart t2 WHERE
        t2.id=#{did}),'%')) t
        ON bp.depart_id=t.id
        WHERE r.delete_flag=0
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
        ORDER BY num DESC,qualified DESC
    </select>
    <!-- 数据报表 检测趋势查询 -->
    <select id="selectTrend" resultMap="DataMap">
        SELECT date_format(check_date,#{datatype}) AS 'time',COUNT(*) num,
        SUM(CASE WHEN r.conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified
        FROM data_check_recording r
        LEFT JOIN base_point bp ON bp.id=r.point_id
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1 WHERE t1.delete_flag=0 AND t1.depart_code LIKE CONCAT((SELECT
        depart_code FROM t_s_depart t2 WHERE
        t2.id=#{did}),'%')) t
        ON bp.depart_id=t.id
        WHERE r.delete_flag=0
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
        GROUP BY time ORDER BY time ASC,num DESC,qualified DESC
    </select>
    <select id="selectDepartDataGroup" resultMap="DataMap">
        SELECT
        #{departId} AS departId,
        #{departName} AS depart_name,
        d.sorting,
        COUNT(1) num,
        SUM(CASE WHEN r.conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified
        <if test="systemFlag==1">
            ,SUM(CASE WHEN sd.purchase_amount!='' THEN sd.purchase_amount ELSE 0 END) purchase_amount,
            SUM(CASE WHEN dis.dispose_value1!='' THEN dis.dispose_value1 ELSE 0 END) destory_number,
            GROUP_CONCAT(DISTINCT IF(r.conclusion='不合格', r.food_name,NULL)) unqualified_food
        </if>
        FROM data_check_recording r
        left join t_s_depart d on r.depart_id=d.id
        <if test="typeObj !=null and typeObj !='' ">
            LEFT JOIN base_regulatory_object o ON o.id=r.reg_id
            LEFT JOIN base_regulatory_type rt ON o.reg_type=rt.id
        </if>
        <if test="systemFlag==1">
            LEFT JOIN tb_sampling_detail sd ON r.sampling_detail_id=sd.id
            LEFT JOIN data_unqualified_treatment dut on dut.check_recording_id=r.rid and dut.delete_flag=0
            LEFT JOIN data_unqualified_dispose dis ON dut.id=dis.unid AND dis.dispose_id=5
        </if>
        <if test="pointType!=null">
            LEFT JOIN base_point bp ON bp.id=r.point_id
        </if>
        WHERE r.delete_flag=0
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND r.check_date &gt;=#{start} AND r.check_date &lt;=#{end}
        </if>
        <if test="typeObj !=null and typeObj !='' ">
            AND rt.id=#{typeObj}
        </if>
        <choose>
            <when test="pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>
        <if test="departIds != null and departIds.size() > 0 ">
            AND r.depart_id IN
            <foreach collection="departIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="did !=null and did .size() > 0 ">
            AND r.depart_id IN
            <foreach collection="did" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY num DESC,qualified DESC
    </select>
    <!-- 检测点统计 -->
    <select id="selectDataItem" resultMap="DataMap">
        SELECT
        r.reg_name,r.item_name,COUNT(*) num,
        SUM(CASE WHEN r.conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified
        FROM data_check_recording r
        LEFT JOIN base_point bp ON bp.id=r.point_id
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1
        WHERE t1.delete_flag=0 AND t1.depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart t2 WHERE
        t2.id=#{did}),'%')) t ON bp.depart_id=t.id
        WHERE r.delete_flag=0
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
        AND reg_id IS NOT NULL
        AND r.item_id IN
        <foreach item="item" index="index" collection="itemArray" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND r.food_id IN
        <foreach item="fooditem" index="index" collection="foodArray" open="(" separator="," close=")">
            #{fooditem}
        </foreach>
        GROUP BY r.reg_name,item_name
        ORDER BY num DESC;
    </select>

    <!-- 机构统计 -->
    <select id="selectDataGroup" resultMap="DataMap">
        SELECT
        tb1.point_id, tb1.point_name, tb1.num, tb1.qualified, tb1.unqualified, tb1.depart_name
        <if test="systemFlag==1">
            , tb1.purchase_amount, tb1.destory_number, tb1.unqualified_food
        </if>
        FROM
        (
        SELECT
        r.point_id,r.point_name,COUNT(r.point_name) num,
        SUM(CASE WHEN r.conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified,
        t.depart_name,
        t.depart_code
        <if test="systemFlag==1">
            ,SUM(CASE WHEN sd.purchase_amount!='' THEN sd.purchase_amount ELSE 0 END) purchase_amount,
            SUM(CASE WHEN dis.dispose_value1!='' THEN dis.dispose_value1 ELSE 0 END) destory_number,
            GROUP_CONCAT(DISTINCT IF(r.conclusion='不合格', r.food_name,NULL)) unqualified_food
        </if>
        FROM data_check_recording r
        <if test="typeObj !=null and typeObj !='' ">
            LEFT JOIN base_regulatory_object o ON r.reg_id=o.id
            LEFT JOIN base_regulatory_type rt ON o.reg_type=rt.id
        </if>
        LEFT JOIN base_point bp ON bp.id=r.point_id
        <if test="systemFlag==1">
            LEFT JOIN tb_sampling_detail sd ON r.sampling_detail_id=sd.id
            LEFT JOIN data_unqualified_treatment dut on dut.check_recording_id=r.rid and dut.delete_flag=0
            LEFT JOIN data_unqualified_dispose dis ON dut.id=dis.unid AND dis.dispose_id=5
        </if>
        STRAIGHT_JOIN (
        SELECT t1.id, t2.depart_code, t2.depart_name
        FROM t_s_depart t1
        INNER JOIN (SELECT * FROM t_s_depart WHERE delete_flag = 0 AND depart_pid = #{did}) t2 ON t1.depart_code LIKE
        CONCAT( t2.depart_code, '%' )
        WHERE t1.delete_flag = 0
        UNION
        SELECT t3.id, t3.depart_code, t3.depart_name
        FROM t_s_depart t3
        WHERE t3.delete_flag = 0 AND t3.id = #{did}
        ) t ON r.depart_id=t.id
        WHERE r.delete_flag=0   AND r.point_name IS NOT NULL AND r.point_name !=""
        <if test="typeObj !=null and typeObj !='' ">
            AND rt.id=#{typeObj}
        </if>
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
        <choose>
            <when test="pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>
        <if test="pointId !=null and pointId !='' ">
            AND r.point_id=#{pointId}
        </if>
        GROUP BY r.point_id
        ) tb1
        ORDER BY tb1.depart_code ASC, tb1.num DESC, tb1.qualified DESC
        <if test="pageSize!=null">
            limit 0,#{pageSize}
        </if>
    </select>

    <!-- 单位统计 -->
    <select id="selectDepartDataGroup2" resultMap="DataMap">
        SELECT
            (SELECT id
             FROM t_s_depart
             WHERE depart_code = SUBSTRING(dp.depart_code, 1, LENGTH(#{departCode}) + 2)
             LIMIT 0, 1)                                                                        AS depart_id,
            -- 单位ID
            (SELECT depart_name
             FROM t_s_depart
             WHERE depart_code = SUBSTRING(dp.depart_code, 1, LENGTH(#{departCode}) + 2)
             LIMIT 0, 1)                                                                        AS depart_name,
            -- 单位名称
            COUNT(DISTINCT (IF(r.point_id IS NOT NULL, r.point_id, NULL)))                      AS jcdpn,
            -- 检测点总数
            count(DISTINCT (IF(bp.point_type = 0 AND bp.point_type_id = 1, r.point_id, NULL)))  AS zfpn,
            -- 政府检测室总数
            count(DISTINCT (IF(bp.point_type = 0 AND bp.point_type_id != 1, r.point_id, NULL))) AS qypn,
            -- 企业检测室总数
            count(DISTINCT (IF(bp.point_type = 1 AND bp.point_type_id = 1, r.point_id, NULL)))  AS carpn,
            -- 快检车总数

            COUNT(1)                                                                               num,
            -- 检测数量
            SUM(CASE WHEN r.conclusion = '合格'
                THEN 1
                ELSE 0 END)                                                                        qualified,
            -- 总合格数量
            SUM(CASE WHEN r.conclusion = '不合格'
                THEN 1
                ELSE 0 END)                                                                        unqualified,
            -- 不合格数量

            SUM(CASE WHEN bp.point_type = 0 AND bp.point_type_id = 1
                THEN 1
                ELSE 0 END)                                                                        zfnum,
            -- 政府检测量
            SUM(CASE WHEN bp.point_type = 0 AND bp.point_type_id != 1
                THEN 1
                ELSE 0 END)                                                                        qynum,
            -- 企业检测量
            SUM(CASE WHEN bp.point_type = 1 AND bp.point_type_id = 1
                THEN 1
                ELSE 0 END)                                                                        carnum,
            -- 快检车检测量

            SUM(CASE WHEN bp.point_type = 0 AND bp.point_type_id = 1 AND r.conclusion = '不合格'
                THEN 1
                ELSE 0 END)                                                                        zfun,
            -- 政府检测室不合格数量
            SUM(CASE WHEN bp.point_type = 0 AND bp.point_type_id != 1 AND r.conclusion = '不合格'
                THEN 1
                ELSE 0 END)                                                                        qyun,
            -- 企业检测室不合格数量
            SUM(CASE WHEN bp.point_type = 1 AND bp.point_type_id = 1 AND r.conclusion = '不合格'
                THEN 1
                ELSE 0 END)                                                                        carun -- 快检车不合格数量
        FROM
            data_check_recording r
            INNER JOIN base_point bp ON bp.id = r.point_id
            INNER JOIN t_s_depart dp ON r.depart_id = dp.id
        WHERE
            r.delete_flag = 0   AND r.check_date BETWEEN #{start} AND #{end}
            AND dp.depart_code LIKE CONCAT(#{departCode}, '%')
        GROUP BY SUBSTRING(dp.depart_code, 1, LENGTH(#{departCode}) + 2)
    </select>

    <!-- 检测项目统计 -->
    <select id="selectItemGroup" resultMap="DataMap">
        SELECT
        r.item_id,r.item_name,COUNT(*) num,
        SUM(CASE WHEN r.conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified
        <if test="systemFlag==1">
            ,SUM(CASE WHEN sd.purchase_amount!='' THEN sd.purchase_amount ELSE 0 END) purchase_amount,
            SUM(CASE WHEN dis.dispose_value1!='' THEN dis.dispose_value1 ELSE 0 END) destory_number,
            GROUP_CONCAT(DISTINCT IF(r.conclusion='不合格', r.food_name,NULL)) unqualified_food
        </if>
        FROM data_check_recording r
        LEFT JOIN base_point bp ON bp.id=r.point_id
        <if test="typeObj !=null and typeObj !='' ">
            LEFT JOIN base_regulatory_object o ON r.reg_id=o.id
            LEFT JOIN base_regulatory_type rt ON o.reg_type=rt.id
        </if>
        <if test="systemFlag==1">
            LEFT JOIN tb_sampling_detail sd ON r.sampling_detail_id=sd.id
            LEFT JOIN data_unqualified_treatment dut on dut.check_recording_id=r.rid and dut.delete_flag=0
            LEFT JOIN data_unqualified_dispose dis ON dut.id=dis.unid AND dis.dispose_id=5
        </if>
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1
        WHERE t1.depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart t2 WHERE t2.id=#{did}),'%')) t ON
        r.depart_id=t.id
        WHERE r.delete_flag=0  AND r.item_name IS NOT NULL AND r.item_name !=""
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
        <if test="pointId !=null and pointId !='' ">
            AND r.point_id=#{pointId}
        </if>
        <if test="typeObj !=null and typeObj !='' ">
            AND rt.id=#{typeObj}
        </if>
        <choose>
            <when test="pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>
        GROUP BY r.item_id
        ORDER BY num DESC,qualified DESC
    </select>

    <!-- 食品种类统计 -->
    <select id="selectFoodGroup" resultMap="DataMap">
        SELECT
        r.food_id,r.food_name,COUNT(r.food_name) num,
        SUM(CASE WHEN r.conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified
        <if test="systemFlag==1">
            ,SUM(CASE WHEN sd.purchase_amount!='' THEN sd.purchase_amount ELSE 0 END) purchase_amount,
            SUM(CASE WHEN dis.dispose_value1!='' THEN dis.dispose_value1 ELSE 0 END) destory_number,
            GROUP_CONCAT(DISTINCT IF(r.conclusion='不合格', r.food_name,NULL)) unqualified_food
        </if>
        FROM data_check_recording r
        LEFT JOIN base_point bp ON bp.id=r.point_id
        <if test="typeObj !=null and typeObj !='' ">
            LEFT JOIN base_regulatory_object o ON r.reg_id=o.id
            LEFT JOIN base_regulatory_type rt ON o.reg_type=rt.id
        </if>
        <if test="systemFlag==1">
            LEFT JOIN tb_sampling_detail sd ON r.sampling_detail_id=sd.id
            LEFT JOIN data_unqualified_treatment dut on dut.check_recording_id=r.rid and dut.delete_flag=0
            LEFT JOIN data_unqualified_dispose dis ON dut.id=dis.unid AND dis.dispose_id=5
        </if>
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1
        WHERE t1.depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart t2 WHERE t2.id=#{did}),'%')) t ON
        r.depart_id=t.id
        WHERE r.delete_flag=0
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
        <if test="fid != null and fid.size() > 0 ">
            AND r.food_id IN
            <foreach collection="fid" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="typeObj !=null and typeObj !='' ">
            AND rt.id=#{typeObj}
        </if>
        <if test="pointId !=null and pointId !='' ">
            AND r.point_id=#{pointId}
        </if>
        <choose>
            <when test="pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>
        GROUP BY r.food_id
        ORDER BY num DESC,qualified DESC
    </select>
    <select id="selectArryByFid" resultType="java.lang.String" parameterType="java.lang.String">
        SELECT getChildLst(#{fid})
    </select>
    <!-- 食品类别统计 -->
    <select id="selectFoodTypeGroup" resultMap="TypeDataMap">
        SELECT
        #{id} AS id,#{name} AS foodName,COUNT(r.food_name) num,
        SUM(CASE WHEN r.conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified
        <if test="systemFlag==1">
            ,SUM(CASE WHEN sd.purchase_amount!='' THEN sd.purchase_amount ELSE 0 END) purchase_amount,
            SUM(CASE WHEN dis.dispose_value1!='' THEN dis.dispose_value1 ELSE 0 END) destory_number,
            GROUP_CONCAT(DISTINCT IF(r.conclusion='不合格', r.food_name,NULL)) unqualified_food
        </if>
        FROM data_check_recording r
        LEFT JOIN base_point bp ON bp.id=r.point_id
        <if test="typeObj !=null and typeObj !='' ">
            LEFT JOIN base_regulatory_object o ON r.reg_id=o.id
            LEFT JOIN base_regulatory_type rt ON o.reg_type=rt.id
        </if>
        <if test="systemFlag==1">
            LEFT JOIN tb_sampling_detail sd ON r.sampling_detail_id=sd.id
            LEFT JOIN data_unqualified_treatment dut on dut.check_recording_id=r.rid and dut.delete_flag=0
            LEFT JOIN data_unqualified_dispose dis ON dut.id=dis.unid AND dis.dispose_id=5
        </if>
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1
        WHERE t1.depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart t2 WHERE t2.id=#{did}),'%')) t ON
        r.depart_id=t.id
        WHERE r.delete_flag=0
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
        <!--delete by xiaoyl 2020/11/20 该条件会过滤掉已删除的类型-->
        <if test="fid != null and fid.size() > 0 ">
            AND r.food_id IN
            <foreach collection="fid" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="typeObj !=null and typeObj !='' ">
            AND rt.id=#{typeObj}
        </if>
        <choose>
            <when test="pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>
        <if test="pointId !=null and pointId !='' ">
            AND bp.id=#{pointId}
        </if>
        ORDER BY num DESC,qualified DESC
    </select>

    <!-- 食品安全预警统计 -->
    <select id="selectFoodGroup2" resultMap="DataMap">
        SELECT
        r.food_id,r.food_name,COUNT(r.food_name) num,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified
        <if test="systemFlag==1">
            ,SUM(CASE WHEN sd.purchase_amount!='' THEN sd.purchase_amount ELSE 0 END) purchase_amount,
            SUM(CASE WHEN dis.dispose_value1!='' THEN dis.dispose_value1 ELSE 0 END) destory_number,
            GROUP_CONCAT(DISTINCT IF(r.conclusion='不合格', r.food_name,NULL)) unqualified_food
        </if>
        FROM data_check_recording r
        LEFT JOIN base_point bp ON bp.id=r.point_id
        <if test="systemFlag==1">
            LEFT JOIN tb_sampling_detail sd ON r.sampling_detail_id=sd.id
            LEFT JOIN data_unqualified_treatment dut on dut.check_recording_id=r.rid and dut.delete_flag=0
            LEFT JOIN data_unqualified_dispose dis ON dut.id=dis.unid AND dis.dispose_id=5
        </if>
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1
        WHERE t1.depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart t2 WHERE t2.id=#{did}),'%')) t ON
        r.depart_id=t.id
        WHERE r.delete_flag=0
        <!-- <if test="type!=null and type!='' and type=='month' and month !=null and month !=''">
              and month(check_date)=#{month} and year(check_date)=year(now())
          </if>
          <if test="type!=null and type!='' and type=='season' and season !=null and season !=''">
              and QUARTER(check_date)=#{season} and year(check_date)=year(now())
          </if>
          <if test="type!=null and type!='' and type=='year' and year !=null and year !=''">
              and year(check_date)=#{year}
          </if>
          <if test="type!=null and type!='' and type=='diy' and start !=null and start !='' and end !=null and end !=''">
              and check_date &gt;=#{start} and check_date &lt;='${end}'
          </if> -->
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND r.check_date &gt;=#{start} AND r.check_date &lt;=#{end}
        </if>
        <choose>
            <when test="pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>
        <if test="pointId !=null and pointId !='' ">
            AND r.point_id=#{pointId}
        </if>
        GROUP BY r.food_id
        HAVING unqualified>0
        ORDER BY unqualified DESC
        <!-- )test where unqualified!=0-->
        <if test="pageSize!=null">
            limit 0,#{pageSize}
        </if>
    </select>

    <!-- 被检单位统计 -->
    <select id="selectRegGroup" resultMap="DataMap">
        SELECT
        tb1.reg_id, tb1.reg_name, tb1.num, tb1.qualified, tb1.unqualified, tb1.depart_name,tb1.task_type
        <if test="systemFlag==1">
            , tb1.purchase_amount, tb1.destory_number, tb1.unqualified_food
        </if>
        FROM
        (
        SELECT
        r.reg_id,r.reg_name, COUNT(*) num,
        SUM(CASE WHEN r.conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified,
        t.depart_name,
        t.depart_code,o.task_type
        <if test="systemFlag==1">
            ,SUM(CASE WHEN sd.purchase_amount!='' THEN sd.purchase_amount ELSE 0 END) purchase_amount,
            SUM(CASE WHEN dis.dispose_value1!='' THEN dis.dispose_value1 ELSE 0 END) destory_number,
            GROUP_CONCAT(DISTINCT IF(r.conclusion='不合格', r.food_name,NULL)) unqualified_food
        </if>
        FROM data_check_recording r
        LEFT JOIN base_regulatory_object o ON r.reg_id=o.id
        <if test="pointType !=null and pointType !='' ">
            LEFT JOIN base_point bp ON r.point_id=bp.id
        </if>
        <if test="typeObj !=null and typeObj !='' ">
            LEFT JOIN base_regulatory_type rt ON o.reg_type=rt.id
        </if>
        <if test="systemFlag==1">
            LEFT JOIN tb_sampling_detail sd ON r.sampling_detail_id=sd.id
            LEFT JOIN data_unqualified_treatment dut on dut.check_recording_id=r.rid and dut.delete_flag=0
            LEFT JOIN data_unqualified_dispose dis ON dut.id=dis.unid AND dis.dispose_id=5
        </if>
        STRAIGHT_JOIN (
        SELECT t1.id, t2.depart_code, t2.depart_name
        FROM t_s_depart t1
        INNER JOIN (SELECT * FROM t_s_depart WHERE delete_flag = 0 AND depart_pid = #{did}) t2 ON t1.depart_code LIKE
        CONCAT( t2.depart_code, '%' )
        WHERE t1.delete_flag = 0
        UNION
        SELECT t3.id, t3.depart_code, t3.depart_name
        FROM t_s_depart t3
        WHERE t3.delete_flag = 0 AND t3.id = #{did}
        ) t ON o.depart_id=t.id
        WHERE r.delete_flag=0 AND r.param7 = 1 AND r.reg_name IS NOT NULL AND r.reg_name !=""
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
        <if test="typeObj !=null and typeObj !='' ">
            AND rt.id=#{typeObj}
        </if>
        <choose>
            <when test="pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>
        <if test="pointId !=null and pointId !='' ">
            AND r.point_id=#{pointId}
        </if>
        <if test="taskType !=null and taskType !=0 ">
            AND o.task_type=#{taskType}
        </if>
        GROUP BY r.reg_id
        ) tb1
        ORDER BY tb1.depart_code ASC, tb1.num DESC, tb1.qualified DESC
        <if test="pageSize!=null">
            limit 0,#{pageSize}
        </if>
    </select>
    <!--企业云-微信端检测室统计-->
    <select id="selectPointGroup" resultMap="DataMap">
        <!--优化查询效率 update by xiaoyl 2022/03/21-->
        SELECT tb1.point_id, tb1.point_name, tb1.num, tb1.qualified, tb1.unqualified, tb1.depart_name
        FROM
        (
        SELECT
        r.point_id,r.point_name,COUNT(r.point_name) num,
        SUM(CASE WHEN r.conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified,
        t.depart_name,
        t.depart_code
        FROM data_check_recording r
        LEFT JOIN base_point bp ON bp.id=r.point_id
        STRAIGHT_JOIN (SELECT * FROM t_s_depart t1
        WHERE t1.delete_flag=0 AND t1.depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart t2 WHERE
        t2.id=#{departId}),'%')
        ) t ON bp.depart_id=t.id
        WHERE r.delete_flag=0  AND r.param7 = 1 AND r.point_name IS NOT NULL AND r.point_name !=""
        AND check_date >=#{start} AND check_date &lt;=#{end}
        GROUP BY r.point_id
        ) tb1
        ORDER BY tb1.num DESC, tb1.qualified DESC <!--tb1.depart_code ASC, -->
        <!-- delete by xiaoyl 查询效率太慢
            select t.depart_name depart_name,bp.id point_id,bp.point_name,count(dcr.id) num,
          SUM(CASE WHEN dcr.conclusion='合格' THEN 1 ELSE 0 END) qualified,
          SUM(CASE WHEN dcr.conclusion='不合格' THEN 1 ELSE 0 END) unqualified
          from base_point bp
          STRAIGHT_JOIN (SELECT * FROM t_s_depart t1
          WHERE t1.delete_flag=0 and t1.depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart t2 WHERE t2.id=#{departId}),'%')) t ON bp.depart_id=t.id
          left join  (select * from data_check_recording dcr1
          where dcr1.delete_flag=0  and dcr1.check_date >=#{start} and dcr1.check_date &lt;=#{end}) dcr on dcr.point_id=bp.id
          where  bp.delete_flag=0
          GROUP BY bp.point_name
          ORDER BY   num desc,qualified desc; -->
    </select>
    <!-- 企业云微信端-被检单位统计 -->
    <select id="selectRegGroup2Wx" resultMap="DataMap">
        SELECT
        tb1.reg_id, tb1.reg_name, tb1.num, tb1.qualified, tb1.unqualified, tb1.depart_name,tb1.task_type
        FROM
        (
        SELECT
        r.reg_id,r.reg_name, COUNT(*) num,
        SUM(CASE WHEN r.conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN r.conclusion='不合格' THEN 1 ELSE 0 END) unqualified,
        t.depart_name,
        t.depart_code,o.task_type
        FROM data_check_recording r
        LEFT JOIN base_regulatory_object o ON r.reg_id=o.id
        STRAIGHT_JOIN (
        SELECT t1.id, t2.depart_code, t2.depart_name
        FROM t_s_depart t1
        INNER JOIN (SELECT * FROM t_s_depart WHERE delete_flag = 0 AND depart_pid = #{did}) t2 ON t1.depart_code LIKE
        CONCAT( t2.depart_code, '%' )
        WHERE t1.delete_flag = 0
        UNION
        SELECT t3.id, t3.depart_code, t3.depart_name
        FROM t_s_depart t3
        WHERE t3.delete_flag = 0 AND t3.id = #{did}
        ) t ON o.depart_id=t.id
        WHERE r.delete_flag=0   AND r.reg_name IS NOT NULL AND r.reg_name !=""
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
        GROUP BY r.reg_id
        ) tb1
        ORDER BY tb1.num DESC, tb1.qualified DESC
        <if test="pageSize!=null">
            limit 0,#{pageSize}
        </if>
    </select>

    <select id="selectDataForDate" resultMap="DataMap">
        SELECT
        DATE_FORMAT(check_date,"%Y-%m-%d") date,
        COUNT(point_id) num,
        SUM(CASE WHEN conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN conclusion='不合格' THEN 1 ELSE 0 END) unqualified
        FROM data_check_recording r
        <if test="typeObj !=null and typeObj !='' ">
            LEFT JOIN base_regulatory_object o ON r.reg_id=o.id
            LEFT JOIN base_regulatory_type rt ON o.reg_type=rt.id
        </if>
        WHERE r.delete_flag=0
        <if test="pointId!=null and pointId!=''">
            AND point_id=#{pointId}
        </if>
        <if test="regId!=null and regId!=''">
            AND reg_id=#{regId}
        </if>
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
        <if test="typeObj !=null and typeObj !='' ">
            AND rt.id=#{typeObj}
        </if>
        GROUP BY DATE_FORMAT(check_date,"%Y-%m-%d")
    </select>

    <select id="selectDataForDates" resultMap="DataMap">
        SELECT
        SUM(CASE WHEN conclusion='合格' THEN 1 ELSE 0 END) qualified,
        SUM(CASE WHEN conclusion='不合格' THEN 1 ELSE 0 END) unqualified
        FROM data_check_recording r
        <if test="typeObj !=null and typeObj !='' ">
            LEFT JOIN base_regulatory_object o ON r.reg_id=o.id
            LEFT JOIN base_regulatory_type rt ON o.reg_type=rt.id
        </if>
        WHERE r.delete_flag=0
        <if test="pointId!=null and pointId!=''">
            AND point_id=#{pointId}
        </if>
        <if test="regId!=null and regId!=''">
            AND reg_id=#{regId}
        </if>
        <if test="start !=null and start !='' and end !=null and end !=''">
            AND check_date &gt;=#{start} AND check_date &lt;=#{end}
        </if>
        <if test="typeObj !=null and typeObj !='' ">
            AND rt.id=#{typeObj}
        </if>
    </select>

    <!-- ***********************************  所有检测数据结果  ************************************* -->

    <sql id="check_Where_Clauses">
        <if test="keyWords !=null and keyWords !=''">
            AND (dcr.depart_name LIKE CONCAT('%', #{keyWords}, '%')
            OR dcr.point_name LIKE CONCAT('%', #{keyWords}, '%')
            OR dcr.reg_name LIKE CONCAT('%', #{keyWords}, '%')
            OR dcr.reg_user_name LIKE CONCAT('%', #{keyWords}, '%')
            )
        </if>
        <!--  <if test="departName !=null and departName !=''">
              and dcr.depart_name = #{departName}
          </if>-->
        <if test="departId !=null and departId !=''">
            AND dcr.depart_id = #{departId}
        </if>
        <if test="pointId !=null and pointId !=''">
            AND dcr.point_id = #{pointId}
        </if>
        <if test="pointName !=null and pointName !=''">
            AND dcr.point_name LIKE CONCAT('%', #{pointName}, '%')
        </if>
        <if test="regName !=null and regName !=''">
            AND dcr.reg_name LIKE CONCAT('%', #{regName}, '%')
        </if>
        <if test="opeShopName !=null and opeShopName !=''">
            AND dcr.reg_user_name LIKE CONCAT('%', #{opeShopName}, '%')
        </if>
        <if test="foodName !=null and foodName !=''">
            AND dcr.food_name LIKE CONCAT('%', #{foodName}, '%')
        </if>
        <if test="itemName !=null and itemName !=''">
            AND dcr.item_name LIKE CONCAT('%', #{itemName}, '%')
        </if>
        <if test="conclusion !=null and conclusion !=''">
            AND dcr.conclusion =#{conclusion}
        </if>
        <if test="checkDateStartDateStr!=null and checkDateStartDateStr!=''">
            AND dcr.check_date &gt;= #{checkDateStartDateStr}
        </if>
        <if test="checkDateEndDateStr!=null and checkDateEndDateStr!=''">
            AND dcr.check_date &lt;= #{checkDateEndDateStr}
        </if>
    </sql>
    <sql id="check_Where_Clause">
        <if test="obj.checkDateStartDateStr!=null and obj.checkDateStartDateStr!=''">
            AND dcr.check_date &gt;= #{obj.checkDateStartDateStr}
        </if>
        <if test="obj.checkDateEndDateStr!=null and obj.checkDateEndDateStr!=''">
            AND dcr.check_date &lt;= #{obj.checkDateEndDateStr}
        </if>
        <if test="obj.keyWords !=null and obj.keyWords !=''">
            AND (dcr.depart_name LIKE CONCAT('%', #{obj.keyWords}, '%')
            OR dcr.point_name LIKE CONCAT('%', #{obj.keyWords}, '%')
            OR dcr.reg_name LIKE CONCAT('%', #{obj.keyWords}, '%')
            OR dcr.reg_user_name LIKE CONCAT('%', #{obj.keyWords}, '%')
            OR dcr.food_name LIKE CONCAT('%', #{obj.keyWords}, '%')
            OR dcr.item_name LIKE CONCAT('%', #{obj.keyWords}, '%')

            OR tsd.sample_code LIKE CONCAT('%', #{obj.keyWords}, '%')

            OR dcr.id = #{obj.keyWords} <!-- add by xiaoyl 2022/04/24关键字查询：增加检测记录编号查询-->
            )
        </if>
        <!-- <if test="obj.departName !=null and obj.departName !=''">
             AND dcr.depart_name LIKE CONCAT('%', #{obj.departName}, '%')
         </if>-->
        <if test="obj.departId !=null and obj.departId !=''">
            AND dcr.depart_id = #{obj.departId}
        </if>
        <if test="obj.pointName !=null and obj.pointName !=''">
            AND dcr.point_name LIKE CONCAT('%', #{obj.pointName}, '%')
        </if>
        <if test="obj.regName !=null and obj.regName !=''">
            AND dcr.reg_name LIKE CONCAT('%', #{obj.regName}, '%')
        </if>
        <if test="obj.opeShopName !=null and obj.opeShopName !=''">
            AND dcr.reg_user_name LIKE CONCAT('%', #{obj.opeShopName}, '%')
        </if>
        <if test="obj.foodName !=null and obj.foodName !=''">
            AND dcr.food_name = #{obj.foodName}
        </if>
        <if test="obj.itemName !=null and obj.itemName !=''">
            AND dcr.item_name = #{obj.itemName}
        </if>
        <if test="obj.conclusion !=null and obj.conclusion !=''">
            AND dcr.conclusion =#{obj.conclusion}
        </if>
        <if test="obj.dataSource != null and obj.dataSource !='' ">
            AND dcr.data_source=#{obj.dataSource}
        </if>
        <if test="obj.regIds != null">
            AND dcr.reg_id IN
            <foreach collection="obj.regIds" item="regId0" open="(" close=")" separator=",">
                #{regId0}
            </foreach>
        </if>
    </sql>
    <select id="loadDatagrid" resultMap="RecordingMap" parameterType="Object">
        SELECT dcr.id id, dcr.check_accord checkAccord, dcr.limit_value limitValue, dcr.check_result checkResult,
        dcr.check_unit checkUnit, dcr.conclusion conclusion,dcr.check_date checkDate, dcr.check_code checkCode,
        dcr.check_username checkUsername,
        dcr.upload_date uploadDate,  dcr.depart_id departId, dcr.depart_name departName,
        dcr.device_model deviceModel, dcr.device_method deviceMethod,dcr.device_company deviceCompany,
        dcr.data_source dataSource,dcr.item_name itemName, dcr.food_name foodName,dcr.reg_user_name opeName,
        dcr.point_name pointName,dcr.device_name deviceName,
        <!-- update by xiaoyl 2022-03-01 修复dcr.reload_flag为(dcr.reload_flag-1)表示复检次数-->
        (dcr.reload_flag-1) reloadFlag,
        dcr.reg_name regName, dcr.reg_user_name opeShopName,
        tsd.sample_code sampleCode,tsd.purchase_amount purchaseAmount
        FROM data_check_recording dcr
        LEFT JOIN tb_sampling_detail tsd ON tsd.id = dcr.sampling_detail_id

        <if test="obj.regTypeId !=null and obj.regTypeId !=''">
            LEFT JOIN base_regulatory_object obj ON dcr.reg_id=obj.id
            LEFT JOIN base_regulatory_type type ON obj.reg_type=type.id
        </if>

        <if test="obj.pointType != null">
            LEFT JOIN base_point bp ON dcr.point_id = bp.id
        </if>
        WHERE dcr.delete_flag=0

        <if test="obj.regTypeId !=null and obj.regTypeId !=''">
            AND FIND_IN_SET(type.id,#{obj.regTypeId})
        </if>

        <choose>
            <when test="obj.pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="obj.pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="obj.pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>

        <if test="obj.departArr != null and obj.departArr.length > 0">
            AND dcr.depart_id IN
            <foreach item="item" index="index" collection="obj.departArr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="obj.pointArr != null and obj.pointArr.length > 0">
            AND dcr.point_id IN
            <foreach item="item" index="index" collection="obj.pointArr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="obj.regId != null">
            AND dcr.reg_id = #{obj.regId}
        </if>
        <if test="obj.userRegId != null">
            AND dcr.reg_id = #{obj.userRegId}
        </if>
        <include refid="check_Where_Clause"/>
        ORDER BY dcr.check_date ${order} LIMIT #{rowOffset}, #{pageSize}
    </select>
    <select id="loadDatagrids" resultMap="DataMap" parameterType="Object">
        SELECT
        dcr.point_id,dcr.point_name,dcr.reg_id,dcr.reg_name,dcr.check_username,dcr.reg_user_name,dcr.food_name,dcr.item_name,dcr.check_result,dcr.conclusion,dcr.check_date
        FROM data_check_recording dcr
        <if test="obj.typeObj !=null and obj.typeObj !=''">
            LEFT JOIN base_regulatory_object obj ON dcr.reg_id=obj.id
            LEFT JOIN base_regulatory_type type ON obj.reg_type=type.id
        </if>
        <if test="obj.departList !=null and obj.departList.size()>0">
            LEFT JOIN base_regulatory_object o ON o.id=dcr.reg_id
        </if>
        LEFT JOIN base_point bp ON bp.id=dcr.point_id
        WHERE dcr.delete_flag = 0
        <!--
        <if test="obj.departList !=null and obj.departList.size()>0">
            and o.delete_flag = 0 and bp.delete_flag=0
        </if>
        -->
        <if test="obj.typeObj !=null and obj.typeObj !=''">
            AND type.id=#{obj.typeObj}
        </if>
        <if test="obj.pointId !=null and obj.pointId !=''">
            AND dcr.point_id=#{obj.pointId}
        </if>
        <if test="obj.regId !=null and obj.regId !=''">
            AND reg_id=#{obj.regId}
        </if>
        <if test="obj.itemId !=null and obj.itemId !=''">
            AND item_id=#{obj.itemId}
        </if>
        <if test="obj.foodId !=null and obj.foodId !=''">
            AND food_id=#{obj.foodId}
        </if>
        <if test="obj.foodTypeId != null and obj.foodTypeId!=''">
            AND food_id IN (SELECT id FROM base_food_type WHERE food_code
            LIKE CONCAT((SELECT food_code FROM base_food_type WHERE id=#{obj.foodTypeId}),'%'))
        </if>
        <if test="obj.foodList != null and obj.foodList.size() > 0 ">
            AND food_id IN
            <foreach collection="obj.foodList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <choose>
            <when test="obj.pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="obj.pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="obj.pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>
        <if test="obj.departListForStatist!=null and obj.departListForStatist.size()>0">
            AND dcr.depart_id IN
            <foreach collection="obj.departListForStatist" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="obj.conclusion !=null and obj.conclusion !=''">
            AND conclusion=#{obj.conclusion}
        </if>
        <!-- <if test="obj.type!=null and obj.type!='' and obj.type=='month' and obj.month !=null and obj.month !=''">
            and month(check_date)=#{obj.month} and year(check_date)=year(now())
        </if>
        <if test="obj.type!=null and obj.type!='' and obj.type=='season' and obj.season !=null and obj.season !=''">
            and QUARTER(check_date)=#{obj.season} and year(check_date)=year(now())
        </if>
        <if test="obj.type!=null and obj.type!='' and obj.type=='year' and obj.year !=null and obj.year !=''">
            and year(check_date)=#{obj.year}
        </if>
        <if test="obj.type!=null and obj.type!='' and obj.type=='diy' and obj.start !=null and obj.start !='' and obj.end !=null and obj.end !=''">
            and check_date &gt;=#{obj.start} and check_date &lt;='${obj.end}'
        </if> -->
        <if test="obj.start !=null and obj.start !='' and obj.end !=null and obj.end !=''">
            AND check_date &gt;=#{obj.start} AND check_date &lt;=#{obj.end}
        </if>
        <if test="obj.departList !=null and obj.departList.size()>0">
            <!--delete by xiaoyl 2020/11/20 该条件会过滤掉送检的数据-->
            <!--and o.depart_id in-->
            AND dcr.depart_id IN
            <foreach collection="obj.departList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="obj.childDepartList !=null and obj.childDepartList.size()>0">
            AND bp.depart_id IN
            <foreach collection="obj.childDepartList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY check_date ${order} LIMIT #{rowOffset}, #{pageSize}
    </select>

    <select id="getRowTotals" resultType="java.lang.Integer" parameterType="Object">
        SELECT count(1) AS rowTotal
        FROM data_check_recording dcr
        <if test="obj.typeObj !=null and obj.typeObj !=''">
            LEFT JOIN base_regulatory_object obj ON dcr.reg_id=obj.id
            LEFT JOIN base_regulatory_type type ON obj.reg_type=type.id
        </if>
        <if test="obj.departList !=null and obj.departList.size()>0">
            LEFT JOIN base_regulatory_object o ON o.id=dcr.reg_id
        </if>
        LEFT JOIN base_point bp ON bp.id=dcr.point_id
        WHERE dcr.delete_flag = 0
        <!--
        <if test="obj.departList !=null and obj.departList.size()>0">
            and o.delete_flag = 0 and bp.delete_flag=0
        </if>
        -->
        <if test="obj.typeObj !=null and obj.typeObj !=''">
            AND type.id=#{obj.typeObj}
        </if>
        <if test="obj.pointId !=null and obj.pointId !=''">
            AND point_id=#{obj.pointId}
        </if>
        <if test="obj.regId !=null and obj.regId !=''">
            AND reg_id=#{obj.regId}
        </if>
        <if test="obj.itemId !=null and obj.itemId !=''">
            AND item_id=#{obj.itemId}
        </if>
        <if test="obj.foodId !=null and obj.foodId !=''">
            AND food_id=#{obj.foodId}
        </if>
        <if test="obj.foodTypeId != null and obj.foodTypeId!=''">
            AND food_id IN (SELECT id FROM base_food_type WHERE food_code
            LIKE CONCAT((SELECT food_code FROM base_food_type WHERE id=#{obj.foodTypeId}),'%'))
        </if>
        <if test="obj.foodList != null and obj.foodList.size() > 0 ">
            AND food_id IN
            <foreach collection="obj.foodList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <choose>
            <when test="obj.pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="obj.pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="obj.pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>
        <if test="obj.departListForStatist!=null and obj.departListForStatist.size()>0">
            AND dcr.depart_id IN
            <foreach collection="obj.departListForStatist" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="obj.conclusion !=null and obj.conclusion !=''">
            AND conclusion=#{obj.conclusion}
        </if>
        <!-- <if test="obj.type!=null and obj.type!='' and obj.type=='month' and obj.month !=null and obj.month !=''">
            and month(check_date)=#{obj.month} and year(check_date)=year(now())
        </if>
        <if test="obj.type!=null and obj.type!='' and obj.type=='season' and obj.season !=null and obj.season !=''">
            and QUARTER(check_date)=#{obj.season} and year(check_date)=year(now())
        </if>
        <if test="obj.type!=null and obj.type!='' and obj.type=='year' and obj.year !=null and obj.year !=''">
            and year(check_date)=#{obj.year}
        </if>
        <if test="obj.type!=null and obj.type!='' and obj.type=='diy' and obj.start !=null and obj.start !='' and obj.end !=null and obj.end !=''">
            and check_date &gt;=#{obj.start} and check_date &lt;='${obj.end}'
        </if> -->
        <if test="obj.start !=null and obj.start !='' and obj.end !=null and obj.end !=''">
            AND check_date &gt;=#{obj.start} AND check_date &lt;=#{obj.end}
        </if>
        <if test="obj.departList !=null and obj.departList.size()>0">
            <!--delete by xiaoyl 2020/11/20 该条件会过滤掉送检的数据-->
            <!--and o.depart_id in-->
            AND dcr.depart_id IN
            <foreach collection="obj.departList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="obj.childDepartList !=null and obj.childDepartList.size()>0">
            AND bp.depart_id IN
            <foreach collection="obj.childDepartList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="getRowTotal" resultType="java.lang.Integer" parameterType="Object">
        SELECT count(1) AS rowTotal
        FROM data_check_recording dcr
        LEFT JOIN tb_sampling_detail tsd ON tsd.id = dcr.sampling_detail_id
        <if test="obj.regTypeId !=null and obj.regTypeId !=''">
            LEFT JOIN base_regulatory_object obj ON dcr.reg_id=obj.id
            LEFT JOIN base_regulatory_type type ON obj.reg_type=type.id
        </if>
        <if test="obj.pointType != null">
            LEFT JOIN base_point bp ON dcr.point_id = bp.id
        </if>
        WHERE dcr.delete_flag=0

        <if test="obj.regTypeId !=null and obj.regTypeId !=''">
            AND FIND_IN_SET(type.id,#{obj.regTypeId})
        </if>

        <choose>
            <when test="obj.pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="obj.pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="obj.pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>

        <if test="obj.departArr != null and obj.departArr.length > 0">
            AND dcr.depart_id IN
            <foreach item="item" index="index" collection="obj.departArr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="obj.pointArr != null and obj.pointArr.length > 0">
            AND dcr.point_id IN
            <foreach item="item" index="index" collection="obj.pointArr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="obj.regId != null">
            AND dcr.reg_id = #{obj.regId}
        </if>
        <if test="obj.userRegId != null">
            AND dcr.reg_id = #{obj.userRegId}
        </if>
        <include refid="check_Where_Clause"/>
    </select>

    <!-- 根据id查询结果 -->
    <select id="getRecording" resultMap="RecordingMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="BASEMAP"/>
        FROM data_check_recording dcr
        <include refid="LEFT_JOIN"/>
        WHERE dcr.id = #{rid}
    </select>

    <sql id="BASEMAP">
        <!-- 检测结果表  data_check_recording -->
        dcr.id id, dcr.id id2, dcr.check_accord checkAccord, dcr.limit_value limitValue,
        dcr.check_result checkResult,
        dcr.check_unit checkUnit, dcr.conclusion conclusion,dcr.check_date checkDate, dcr.check_code checkCode,
        dcr.check_username checkUsername,
        dcr.upload_date uploadDate, dcr.depart_id departId,dcr.depart_name departName,
        dcr.device_model deviceModel, dcr.device_method deviceMethod,dcr.device_company deviceCompany,
        dcr.data_source dataSource,dcr.item_name itemName, dcr.food_name foodName,dcr.reg_user_name reg_user_name,
        dcr.point_name pointName,dcr.device_name deviceName,dcr.reload_flag reloadFlag, dcr.reg_id regId,
        dcr.reg_user_id opeId, dcr.remark remark2,
        dcr.reg_name regName, dcr.reg_user_name ope_shop_code,
        <!-- 抽检单表 -->
        tbs.id samplingId, tbs.order_number samplingNo, tbs.order_time samplingDate, tbs.ccu_name inspectionCompany,
        tbs.order_username samplingUsername,
         tbs.order_user_phone samplingUserPhone,
        <!-- 抽检单详情表 -->
        tbsd.id samplingDetailId, tbsd.sample_number sampleNumber, tbsd.purchase_amount
        purchaseAmount,tbsd.purchase_date purchaseDate,
        tbsd.origin origin,tbsd.supplier supplier,tbsd.supplier_address supplierAddress,tbsd.supplier_phone
        supplierPhone,
        tbsd.supplier_person supplierPerson,tbsd.batch_number batchNumber,tbsd.sample_code sampleCode,
        <!-- 受检单位信息 -->
        bro.reg_address regAddress,
        <!-- 经营户信息 -->
        brb.ope_name opeName, brb.ope_shop_name AS opeShopName,
        <!-- 抽检点 -->
        bp.address address,
        <!-- 检测使用仪器 -->
        bd.device_code deviceCode,bd.device_name deviceName,
        <!-- 不合格处理人 -->
        bw.worker_name workerName,
        <!-- 不合格处理 -->
        dut.id dutId, dut.deal_type udealType, dut.deal_method dealMethod , dut.recheck_depart recheckDepart,
        dut.send_date sendDate, dut.sperson_name spersonName, dut.remark remark, dut.supervisor supervisor,
        dut.supervisor_phone supervisorPhone, dut.create_date createDate,dut.update_date updateDate,dut.recheck_date
        recheckDate,
        (SELECT realname FROM t_s_user WHERE id=dut.create_by) AS dealUser
    </sql>


    <sql id="LEFT_JOIN">
        LEFT JOIN tb_sampling_detail tbsd ON dcr.sampling_detail_id = tbsd.id
        LEFT JOIN tb_sampling tbs ON tbs.id = tbsd.sampling_id
        LEFT JOIN base_regulatory_object bro on bro.id = dcr.reg_id
        LEFT JOIN base_regulatory_business brb on brb.id = dcr.reg_user_id
        LEFT JOIN base_point bp on bp.id = dcr.point_id
        LEFT JOIN base_device bd on bd.id = dcr.device_id
        LEFT JOIN data_unqualified_treatment dut on dut.check_recording_id = dcr.id AND dut.delete_flag = 0
        LEFT JOIN base_workers bw on bw.id = dcr.check_userid
    </sql>

    <!-- 查询条件 -->
    <sql id="Example_Where_Clause">
        WHERE dcr.delete_flag = 0
        <trim suffixOverrides=",">
            <if test="obj != null">
                <if test=" obj.pointName !=null and obj.pointName != ''">
                    AND (

                    dcr.point_name LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR tbs.reg_name LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR tbs.reg_link_person LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR tbs.reg_link_phone LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR tbs.ope_shop_name LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR dcr.item_name LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR dcr.food_name LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR dcr.device_name LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR bw.worker_name LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR dcr.depart_name LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR tbs.ope_shop_code LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR dcr.check_result LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR dcr.conclusion LIKE CONCAT('%', #{obj.pointName}, '%')
                    OR dcr.check_username LIKE CONCAT('%', #{obj.pointName}, '%')

                    )
                </if>
                <if test="obj.taskId != null and obj.taskId != '' ">
                    AND dcr.task_id = #{obj.taskId}
                </if>
                <!-- 待处理条件:结论为不合格,且处理状态标识为空(未处理) -->
                <if test="obj.conclusion != null and obj.conclusion != '' ">
                    AND dcr.conclusion = #{obj.conclusion}
                </if>
                <!-- 处理中和已处理条件 -->
                <if test="obj.dealMethod != null ">
                    AND dut.deal_method = #{obj.dealMethod}
                </if>
                <if test="obj.regName != null ">
                    AND tbs.reg_name LIKE CONCAT('%',#{obj.regName},'%')
                </if>
                <if test="obj.opeShopName != null ">
                    AND tbs.ope_shop_name LIKE CONCAT('%',#{obj.opeShopName},'%')
                </if>
                <if test="obj.foodName != null ">
                    AND dcr.food_name LIKE CONCAT('%',#{obj.foodName},'%')
                </if>
                <if test="obj.itemName != null ">
                    AND dcr.item_name LIKE CONCAT('%',#{obj.itemName},'%')
                </if>
                <!-- 筛选当前部门下属机构/检测点 -->
                <choose>
                    <!--
                        <when test="obj.pointArr == null or obj.pointArr.length == 0">
                            <if test="obj.departArr != null and obj.departArr.length > 0">
                                and dcr.depart_id in
                                 <foreach item="item" index="index" collection="obj.departArr" open="(" separator="," close=")">
                                    #{item}
                                </foreach>
                            </if>
                        </when>
                        <when test="obj.departArr == null or obj.departArr.length == 0">
                            <if test="obj.pointArr != null and obj.pointArr.length > 0">
                                and dcr.point_id in
                                <foreach item="item" index="index" collection="obj.pointArr" open="(" separator="," close=")">
                                    #{item}
                                </foreach>
                            </if>
                        </when>
                        <otherwise>
                            and dcr.depart_id in
                             <foreach item="item" index="index" collection="obj.departArr" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                            and dcr.point_id in
                             <foreach item="item" index="index" collection="obj.pointArr" open="(" separator="," close=")">
                                #{item}
                            </foreach>
                        </otherwise>
                         -->

                    <when test="obj.pointArr != null and obj.pointArr.length > 0">
                        AND dcr.point_id IN
                        <foreach item="item" index="index" collection="obj.pointArr" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <when test="obj.departArr != null and obj.departArr.length > 0">
                        AND dcr.depart_id IN
                        <foreach item="item" index="index" collection="obj.departArr" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                </choose>

                <!-- 筛选检测点用户数据 -->
                <if test="obj.pointId != null ">
                    AND dcr.point_id = #{obj.pointId}
                </if>

            </if>
        </trim>
    </sql>

    <select id="queryById" resultMap="BaseResultMap" parameterType="Object">
        SELECT
        <include refid="Base_Column_List"/>
        FROM data_check_recording WHERE delete_flag = 0 AND id = #{id}
    </select>

    <!-- ***********************************  结束  ************************************* -->
<!--    <insert id="insert" parameterType="com.dayuan.bean.dataCheck.DataCheckRecording" useGeneratedKeys="true"-->
<!--            keyProperty="rid" keyColumn="rid">-->
<!--        INSERT INTO data_check_recording (id, rid, check_code, sampling_id,-->
<!--                                          sampling_detail_id, point_id, point_name, check_userid, check_username, check_user_signature, item_id,-->
<!--                                          item_name, check_date, check_accord, device_id, device_name, limit_value,-->
<!--                                          check_result, check_unit, conclusion, data_source, delete_flag, create_by,-->
<!--                                          create_date, update_name, update_by, update_date, data_type,-->
<!--                                          modified_remark, param4, param5, param6, param7, check_voucher, param8, param9, time1)-->
<!--        VALUES (#{id,jdbcType=VARCHAR}, #{rid,jdbcType=INTEGER}, #{checkCode,jdbcType=VARCHAR},-->
<!--                                        #{samplingId,jdbcType=VARCHAR},-->
<!--                                        #{samplingDetailId,jdbcType=VARCHAR}, #{pointId,jdbcType=VARCHAR},-->
<!--                                        #{pointName,jdbcType=VARCHAR},-->
<!--                                        #{checkUserid,jdbcType=VARCHAR}, #{checkUsername,jdbcType=VARCHAR},-->
<!--                                        #{checkUserSignature,jdbcType=VARCHAR}, #{itemId,jdbcType=VARCHAR},-->
<!--            #{itemName,jdbcType=VARCHAR}, #{checkDate,jdbcType=TIMESTAMP}, #{checkAccord,jdbcType=VARCHAR},-->
<!--            #{deviceId,jdbcType=VARCHAR}, #{deviceName,jdbcType=VARCHAR}, #{limitValue,jdbcType=VARCHAR},-->
<!--            #{checkResult,jdbcType=VARCHAR}, #{checkUnit,jdbcType=VARCHAR}, #{conclusion,jdbcType=VARCHAR},-->
<!--            #{dataSource,jdbcType=SMALLINT}, #{deleteFlag,jdbcType=SMALLINT}, #{createBy,jdbcType=VARCHAR},-->
<!--                                             #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR},-->
<!--                                             #{updateDate,jdbcType=TIMESTAMP}, #{dataType,jdbcType=SMALLINT},-->
<!--                                             #{modifiedRemark,jdbcType=VARCHAR}, #{param4,jdbcType=VARCHAR},-->
<!--                                             #{param5,jdbcType=VARCHAR},-->
<!--                                             #{param6,jdbcType=INTEGER}, #{param7,jdbcType=INTEGER},-->
<!--                #{checkVoucher,jdbcType=VARCHAR}, #{param8,jdbcType=VARCHAR}, #{param9,jdbcType=VARCHAR},-->
<!--                #{time1,jdbcType=TIMESTAMP})-->
<!--    </insert>-->
<!--    <insert id="insertSelective" parameterType="com.dayuan.bean.dataCheck.DataCheckRecording" useGeneratedKeys="true"-->
<!--            keyProperty="rid" keyColumn="rid">-->
<!--        INSERT INTO data_check_recording-->
<!--        <trim prefix="(" suffix=")" suffixOverrides=",">-->
<!--            <if test="id != null">-->
<!--                id,-->
<!--            </if>-->
<!--            <if test="rid != null">-->
<!--                rid,-->
<!--            </if>-->
<!--            <if test="checkCode != null">-->
<!--                check_code,-->
<!--            </if>-->
<!--            <if test="taskId != null">-->
<!--                task_id,-->
<!--            </if>-->
<!--            <if test="taskName != null">-->
<!--                task_name,-->
<!--            </if>-->
<!--            <if test="samplingId != null">-->
<!--                sampling_id,-->
<!--            </if>-->
<!--            <if test="samplingDetailId != null">-->
<!--                sampling_detail_id,-->
<!--            </if>-->
<!--            <if test="foodTypeId != null">-->
<!--                food_type_id,-->
<!--            </if>-->
<!--            <if test="foodTypeName != null">-->
<!--                food_type_name,-->
<!--            </if>-->
<!--            <if test="foodId != null">-->
<!--                food_id,-->
<!--            </if>-->
<!--            <if test="foodName != null">-->
<!--                food_name,-->
<!--            </if>-->
<!--            <if test="regId != null">-->
<!--                reg_id,-->
<!--            </if>-->
<!--            <if test="regName != null">-->
<!--                reg_name,-->
<!--            </if>-->
<!--            <if test="regUserId != null">-->
<!--                reg_user_id,-->
<!--            </if>-->
<!--            <if test="regUserName != null">-->
<!--                reg_user_name,-->
<!--            </if>-->
<!--            <if test="departId != null">-->
<!--                depart_id,-->
<!--            </if>-->
<!--            <if test="departName != null">-->
<!--                depart_name,-->
<!--            </if>-->
<!--            <if test="pointId != null">-->
<!--                point_id,-->
<!--            </if>-->
<!--            <if test="pointName != null">-->
<!--                point_name,-->
<!--            </if>-->
<!--            <if test="checkUserid != null">-->
<!--                check_userid,-->
<!--            </if>-->
<!--            <if test="checkUsername != null">-->
<!--                check_username,-->
<!--            </if>-->
<!--            <if test="checkUserSignature != null">-->
<!--                check_user_signature,-->
<!--            </if>-->
<!--            <if test="auditorId != null">-->
<!--                auditor_id,-->
<!--            </if>-->
<!--            <if test="auditorName != null">-->
<!--                auditor_name,-->
<!--            </if>-->
<!--            <if test="uploadId != null">-->
<!--                upload_id,-->
<!--            </if>-->
<!--            <if test="uploadName != null">-->
<!--                upload_name,-->
<!--            </if>-->
<!--            <if test="uploadDate != null">-->
<!--                upload_date,-->
<!--            </if>-->
<!--            <if test="itemId != null">-->
<!--                item_id,-->
<!--            </if>-->
<!--            <if test="itemName != null">-->
<!--                item_name,-->
<!--            </if>-->
<!--            <if test="checkDate != null">-->
<!--                check_date,-->
<!--            </if>-->
<!--            <if test="checkAccordId != null">-->
<!--                check_accord_id,-->
<!--            </if>-->
<!--            <if test="checkAccord != null">-->
<!--                check_accord,-->
<!--            </if>-->
<!--            <if test="deviceId != null">-->
<!--                device_id,-->
<!--            </if>-->
<!--            <if test="deviceName != null">-->
<!--                device_name,-->
<!--            </if>-->
<!--            <if test="limitValue != null">-->
<!--                limit_value,-->
<!--            </if>-->
<!--            <if test="checkResult != null">-->
<!--                check_result,-->
<!--            </if>-->
<!--            <if test="checkUnit != null">-->
<!--                check_unit,-->
<!--            </if>-->
<!--            <if test="conclusion != null">-->
<!--                conclusion,-->
<!--            </if>-->
<!--            <if test="dataSource != null">-->
<!--                data_source,-->
<!--            </if>-->
<!--            <if test="deleteFlag != null">-->
<!--                delete_flag,-->
<!--            </if>-->
<!--            <if test="createBy != null">-->
<!--                create_by,-->
<!--            </if>-->
<!--            <if test="createDate != null">-->
<!--                create_date,-->
<!--            </if>-->
<!--            <if test="updateBy != null">-->
<!--                update_by,-->
<!--            </if>-->
<!--            <if test="updateDate != null">-->
<!--                update_date,-->
<!--            </if>-->
<!--            <if test="deviceMethod != null">-->
<!--                device_method,-->
<!--            </if>-->
<!--            <if test="deviceModel != null">-->
<!--                device_model,-->
<!--            </if>-->
<!--            <if test="deviceCompany != null">-->
<!--                device_company,-->
<!--            </if>-->
<!--            <if test="reloadFlag != null">-->
<!--                reload_flag,-->
<!--            </if>-->
<!--            <if test="statusFalg != null">-->
<!--                status_falg,-->
<!--            </if>-->
<!--            <if test="remark != null">-->
<!--                remark,-->
<!--            </if>-->
<!--            <if test="param1 != null">-->
<!--                param1,-->
<!--            </if>-->
<!--            <if test="param2 != null">-->
<!--                param2,-->
<!--            </if>-->
<!--            <if test="param3 != null">-->
<!--                param3,-->
<!--            </if>-->
<!--            <if test="dataType != null">-->
<!--                data_type,-->
<!--            </if>-->
<!--            <if test="modifiedRemark != null">-->
<!--                modified_remark,-->
<!--            </if>-->
<!--            <if test="param4 != null">-->
<!--                param4,-->
<!--            </if>-->
<!--            <if test="param5 != null">-->
<!--                param5,-->
<!--            </if>-->
<!--            <if test="param6 != null">-->
<!--                param6,-->
<!--            </if>-->
<!--            <if test="param7 != null">-->
<!--                param7,-->
<!--            </if>-->
<!--            <if test="checkVoucher != null">-->
<!--                check_voucher,-->
<!--            </if>-->
<!--            <if test="param8 != null">-->
<!--                param8,-->
<!--            </if>-->
<!--            <if test="param9 != null">-->
<!--                param9,-->
<!--            </if>-->
<!--            <if test="time1 != null">-->
<!--                time1,-->
<!--            </if>-->
<!--        </trim>-->
<!--        <trim prefix="values (" suffix=")" suffixOverrides=",">-->
<!--            <if test="id != null">-->
<!--                #{id,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="rid != null">-->
<!--                #{rid,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="checkCode != null">-->
<!--                #{checkCode,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="taskId != null">-->
<!--                #{taskId,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="taskName != null">-->
<!--                #{taskName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="samplingId != null">-->
<!--                #{samplingId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="samplingDetailId != null">-->
<!--                #{samplingDetailId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="foodTypeId != null">-->
<!--                #{foodTypeId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="foodTypeName != null">-->
<!--                #{foodTypeName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="foodId != null">-->
<!--                #{foodId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="foodName != null">-->
<!--                #{foodName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="regId != null">-->
<!--                #{regId,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="regName != null">-->
<!--                #{regName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="regUserId != null">-->
<!--                #{regUserId,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="regUserName != null">-->
<!--                #{regUserName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="departId != null">-->
<!--                #{departId,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="departName != null">-->
<!--                #{departName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="pointId != null">-->
<!--                #{pointId,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="pointName != null">-->
<!--                #{pointName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkUserid != null">-->
<!--                #{checkUserid,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkUsername != null">-->
<!--                #{checkUsername,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkUserSignature != null">-->
<!--                #{checkUserSignature,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="auditorId != null">-->
<!--                #{auditorId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="auditorName != null">-->
<!--                #{auditorName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="uploadId != null">-->
<!--                #{uploadId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="uploadName != null">-->
<!--                #{uploadName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="uploadDate != null">-->
<!--                #{uploadDate,jdbcType=TIMESTAMP},-->
<!--            </if>-->
<!--            <if test="itemId != null">-->
<!--                #{itemId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="itemName != null">-->
<!--                #{itemName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkDate != null">-->
<!--                #{checkDate,jdbcType=TIMESTAMP},-->
<!--            </if>-->
<!--            <if test="checkAccordId != null">-->
<!--                #{checkAccordId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkAccord != null">-->
<!--                #{checkAccord,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="deviceId != null">-->
<!--                #{deviceId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="deviceName != null">-->
<!--                #{deviceName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="limitValue != null">-->
<!--                #{limitValue,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkResult != null">-->
<!--                #{checkResult,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkUnit != null">-->
<!--                #{checkUnit,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="conclusion != null">-->
<!--                #{conclusion,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="dataSource != null">-->
<!--                #{dataSource,jdbcType=SMALLINT},-->
<!--            </if>-->
<!--            <if test="deleteFlag != null">-->
<!--                #{deleteFlag,jdbcType=SMALLINT},-->
<!--            </if>-->
<!--            <if test="createBy != null">-->
<!--                #{createBy,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="createDate != null">-->
<!--                #{createDate,jdbcType=TIMESTAMP},-->
<!--            </if>-->
<!--            <if test="updateBy != null">-->
<!--                #{updateBy,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="updateDate != null">-->
<!--                #{updateDate,jdbcType=TIMESTAMP},-->
<!--            </if>-->
<!--            <if test="deviceMethod != null">-->
<!--                #{deviceMethod,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="deviceModel != null">-->
<!--                #{deviceModel,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="deviceCompany != null">-->
<!--                #{deviceCompany,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="reloadFlag != null">-->
<!--                #{reloadFlag,jdbcType=SMALLINT},-->
<!--            </if>-->
<!--            <if test="statusFalg != null">-->
<!--                #{statusFalg,jdbcType=SMALLINT},-->
<!--            </if>-->
<!--            <if test="remark != null">-->
<!--                #{remark,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param1 != null">-->
<!--                #{param1,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="param2 != null">-->
<!--                #{param2,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param3 != null">-->
<!--                #{param3,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="dataType != null">-->
<!--                #{dataType,jdbcType=SMALLINT},-->
<!--            </if>-->
<!--            <if test="modifiedRemark != null">-->
<!--                #{modifiedRemark,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param4 != null">-->
<!--                #{param4,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param5 != null">-->
<!--                #{param5,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param6 != null">-->
<!--                #{param6,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="param7 != null">-->
<!--                #{param7,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="checkVoucher != null">-->
<!--                #{checkVoucher,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param8 != null">-->
<!--                #{param8,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param9 != null">-->
<!--                #{param9,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="time1 != null">-->
<!--                #{time1,jdbcType=TIMESTAMP},-->
<!--            </if>-->
<!--        </trim>-->
<!--    </insert>-->
<!--    <update id="updateByPrimaryKeySelective" parameterType="com.dayuan.bean.dataCheck.DataCheckRecording">-->
<!--        UPDATE data_check_recording-->
<!--        <set>-->
<!--            <if test="id != null">-->
<!--                id = #{id, jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkCode != null">-->
<!--                check_code = #{checkCode,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="taskId != null">-->
<!--                task_id = #{taskId,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="taskName != null">-->
<!--                task_name = #{taskName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="samplingId != null">-->
<!--                sampling_id = #{samplingId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="samplingDetailId != null">-->
<!--                sampling_detail_id = #{samplingDetailId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="foodTypeId != null">-->
<!--                food_type_id = #{foodTypeId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="foodTypeName != null">-->
<!--                food_type_name = #{foodTypeName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="foodId != null">-->
<!--                food_id = #{foodId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="foodName != null">-->
<!--                food_name = #{foodName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="regId != null">-->
<!--                reg_id = #{regId,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="regName != null">-->
<!--                reg_name = #{regName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="regUserId != null">-->
<!--                reg_user_id = #{regUserId,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="regUserName != null">-->
<!--                reg_user_name = #{regUserName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="departId != null">-->
<!--                depart_id = #{departId,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="departName != null">-->
<!--                depart_name = #{departName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="pointId != null">-->
<!--                point_id = #{pointId,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="pointName != null">-->
<!--                point_name = #{pointName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkUserid != null">-->
<!--                check_userid = #{checkUserid,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkUsername != null">-->
<!--                check_username = #{checkUsername,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkUserSignature != null">-->
<!--                check_user_signature = #{checkUserSignature,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="auditorId != null">-->
<!--                auditor_id = #{auditorId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="auditorName != null">-->
<!--                auditor_name = #{auditorName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="uploadId != null">-->
<!--                upload_id = #{uploadId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="uploadName != null">-->
<!--                upload_name = #{uploadName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="uploadDate != null">-->
<!--                upload_date = #{uploadDate,jdbcType=TIMESTAMP},-->
<!--            </if>-->
<!--            <if test="itemId != null">-->
<!--                item_id = #{itemId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="itemName != null">-->
<!--                item_name = #{itemName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkDate != null">-->
<!--                check_date = #{checkDate,jdbcType=TIMESTAMP},-->
<!--            </if>-->
<!--            <if test="checkAccordId != null">-->
<!--                check_accord_id = #{checkAccordId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkAccord != null">-->
<!--                check_accord = #{checkAccord,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="deviceId != null">-->
<!--                device_id = #{deviceId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="deviceName != null">-->
<!--                device_name = #{deviceName,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="limitValue != null">-->
<!--                limit_value = #{limitValue,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkResult != null">-->
<!--                check_result = #{checkResult,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="checkUnit != null">-->
<!--                check_unit = #{checkUnit,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="conclusion != null">-->
<!--                conclusion = #{conclusion,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="dataSource != null">-->
<!--                data_source = #{dataSource,jdbcType=SMALLINT},-->
<!--            </if>-->
<!--            <if test="deleteFlag != null">-->
<!--                delete_flag = #{deleteFlag,jdbcType=SMALLINT},-->
<!--            </if>-->
<!--            <if test="createBy != null">-->
<!--                create_by = #{createBy,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="createDate != null">-->
<!--                create_date = #{createDate,jdbcType=TIMESTAMP},-->
<!--            </if>-->
<!--            <if test="updateBy != null">-->
<!--                update_by = #{updateBy,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="updateDate != null">-->
<!--                update_date = #{updateDate,jdbcType=TIMESTAMP},-->
<!--            </if>-->
<!--            <if test="deviceMethod != null">-->
<!--                device_method = #{deviceMethod,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="deviceModel != null">-->
<!--                device_model = #{deviceModel,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="deviceCompany != null">-->
<!--                device_company = #{deviceCompany,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="reloadFlag != null">-->
<!--                reload_flag = #{reloadFlag,jdbcType=SMALLINT},-->
<!--            </if>-->
<!--            <if test="statusFalg != null">-->
<!--                status_falg = #{statusFalg,jdbcType=SMALLINT},-->
<!--            </if>-->
<!--            <if test="remark != null">-->
<!--                remark = #{remark,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param1 != null">-->
<!--                param1 = #{param1,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="param2 != null">-->
<!--                param2 = #{param2,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param3 != null">-->
<!--                param3 = #{param3,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="dataType != null">-->
<!--                data_type = #{dataType,jdbcType=SMALLINT},-->
<!--            </if>-->
<!--            <if test="modifiedRemark != null">-->
<!--                modified_remark = #{modifiedRemark,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param4 != null">-->
<!--                param4 = #{param4,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param5 != null">-->
<!--                param5 = #{param5,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param6 != null">-->
<!--                param6 = #{param6,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="param7 != null">-->
<!--                param7 = #{param7,jdbcType=INTEGER},-->
<!--            </if>-->
<!--            <if test="checkVoucher != null">-->
<!--                check_voucher = #{checkVoucher,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param8 != null">-->
<!--                param8 = #{param8,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="param9 != null">-->
<!--                param9 = #{param9,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="time1 != null">-->
<!--                time1 = #{time1,jdbcType=TIMESTAMP},-->
<!--            </if>-->
<!--        </set>-->
<!--        WHERE rid = #{rid,jdbcType=INTEGER}-->
<!--    </update>-->
<!--    <update id="updateByPrimaryKey" parameterType="com.dayuan.bean.dataCheck.DataCheckRecording">-->
<!--        UPDATE data_check_recording-->
<!--        SET id                   = #{id}, check_code = #{checkCode,jdbcType=VARCHAR},-->
<!--            sampling_id          = #{samplingId,jdbcType=VARCHAR},-->
<!--            sampling_detail_id   = #{samplingDetailId,jdbcType=VARCHAR},-->
<!--            point_id             = #{pointId,jdbcType=VARCHAR},-->
<!--            point_name           = #{pointName,jdbcType=VARCHAR},-->
<!--            check_userid         = #{checkUserid,jdbcType=VARCHAR},-->
<!--            check_username       = #{checkUsername,jdbcType=VARCHAR},-->
<!--            check_user_signature = #{checkUserSignature,jdbcType=VARCHAR},-->
<!--            item_id              = #{itemId,jdbcType=VARCHAR},-->
<!--            item_name            = #{itemName,jdbcType=VARCHAR},-->
<!--            check_date           = #{checkDate,jdbcType=TIMESTAMP},-->
<!--            check_accord         = #{checkAccord,jdbcType=VARCHAR},-->
<!--            device_id            = #{deviceId,jdbcType=VARCHAR},-->
<!--            device_name          = #{deviceName,jdbcType=VARCHAR},-->
<!--            limit_value          = #{limitValue,jdbcType=VARCHAR},-->
<!--            check_result         = #{checkResult,jdbcType=VARCHAR},-->
<!--            check_unit           = #{checkUnit,jdbcType=VARCHAR},-->
<!--            conclusion           = #{conclusion,jdbcType=VARCHAR},-->
<!--            data_source          = #{dataSource,jdbcType=SMALLINT},-->
<!--            delete_flag          = #{deleteFlag,jdbcType=SMALLINT},-->
<!--            create_by            = #{createBy,jdbcType=VARCHAR},-->
<!--            create_date          = #{createDate,jdbcType=TIMESTAMP},-->
<!--            update_by            = #{updateBy,jdbcType=VARCHAR},-->
<!--            update_date          = #{updateDate,jdbcType=TIMESTAMP},-->
<!--            remark               = #{remark,jdbcType=VARCHAR},-->
<!--            param1               = #{param1,jdbcType=INTEGER},-->
<!--            param2               = #{param2,jdbcType=VARCHAR},-->
<!--            param3               = #{param3,jdbcType=VARCHAR},-->
<!--            data_type            = #{dataType,jdbcType=SMALLINT},-->
<!--            modified_remark      = #{modifiedRemark,jdbcType=VARCHAR},-->
<!--            param4               = #{param4,jdbcType=VARCHAR},-->
<!--            param5               = #{param5,jdbcType=VARCHAR},-->
<!--            param6               = #{param6,jdbcType=INTEGER},-->
<!--            param7               = #{param7,jdbcType=INTEGER},-->
<!--            check_voucher        = #{checkVoucher,jdbcType=VARCHAR},-->
<!--            param8               = #{param8,jdbcType=VARCHAR},-->
<!--            param9               = #{param9,jdbcType=VARCHAR},-->
<!--            time1                = #{time1,jdbcType=TIMESTAMP}-->
<!--        WHERE rid = #{rid,jdbcType=INTEGER}-->
<!--    </update>-->
    <!-- /**
      * 按项目统计完成数量
      * @param pId 项目ID
      * @param departId 项目的顶级机构ID
      * @return
      * @author LuoYX
      * @date 2018年3月26日
      */ -->
    <select id="queryCountByPId" parameterType="Object" resultType="java.lang.Integer">
        <!--   SELECT count(1) count FROM data_check_recording r
          LEFT JOIN (SELECT '${pId}' pid,id FROM t_s_depart t WHERE depart_code LIKE CONCAT(#{departCode},'%')) t ON r.depart_id=t.id
          WHERE t.pid='${pId}' AND r.delete_flag=0 AND check_date &gt;=#{start} AND check_date &lt; #{end}
          GROUP BY t.pid -->
        <!-- delete by xiaoyl2019-06-05 -->
        SELECT COUNT(*) count FROM data_check_recording r
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1 WHERE t1.delete_flag=0 AND
        t1.depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart t2 WHERE t2.id=#{pId}),'%')) t
        ON r.depart_id=t.id WHERE r.delete_flag=0 AND check_date &gt;=#{start} AND check_date &lt; #{end} AND
        r.delete_flag=0
    </select>

    <select id="queryCountByPId2" parameterType="Object" resultType="java.util.Map">
        <!--   SELECT DATE_FORMAT(check_date,'%Y-%m') month,count(1) count FROM data_check_recording r
          LEFT JOIN (SELECT '${pId}' pid,id FROM t_s_depart t WHERE depart_code LIKE CONCAT(#{departCode},'%')) t ON r.depart_id=t.id
          WHERE t.pid='${pId}' AND r.delete_flag=0 AND check_date &gt;=#{start} AND check_date &lt; #{end}
          GROUP BY t.pid,DATE_FORMAT(check_date,'%Y-%m') -->
        <!-- delete by xiaoyl2019-06-05 -->
        SELECT DATE_FORMAT(check_date,'%Y-%m') month, COUNT(*) count FROM data_check_recording r
        STRAIGHT_JOIN (SELECT id FROM t_s_depart t1 WHERE t1.delete_flag=0 AND t1.depart_code
        LIKE CONCAT((SELECT depart_code FROM t_s_depart t2 WHERE t2.id=${pId}),'%')) t ON r.depart_id=t.id
        WHERE r.delete_flag=0 AND check_date &gt;= #{start} AND check_date &lt; #{end} AND r.delete_flag=0
        GROUP BY month
    </select>
    <select id="queryDailyData" parameterType="Object" resultMap="RecordingMap">
        SELECT
        id id,
        rid rid,
        check_accord checkAccord,
        limit_value limitValue,
        check_result checkResult,
        check_unit checkUnit,
        conclusion conclusion,
        check_date checkDate,
        check_code checkCode,
        check_username checkUsername,
        upload_date uploadDate,
        depart_id departId,
        depart_name departName,
        device_model deviceModel,
        device_method deviceMethod,
        device_company deviceCompany,
        data_source dataSource,
        item_name itemName,
        food_name foodName,
        point_name pointName,
        device_name deviceName,
        reload_flag reloadFlag,
        reg_name regName,
        reg_user_name opeShopName
        FROM data_check_recording
        WHERE delete_flag = 0
        <if test="departId">
            AND depart_id IN (SELECT id FROM t_s_depart WHERE delete_flag = 0 AND depart_code LIKE CONCAT((SELECT
            depart_code FROM t_s_depart WHERE id = #{departId}),'%'))
        </if>
        <if test="pointId">
            AND point_id = #{pointId}
        </if>
        <if test="regId">
            AND reg_id = #{regId}
        </if>
        AND check_date BETWEEN #{start} AND #{end}
        ORDER BY check_date DESC
    </select>

    <!-- /**
       * 项目进度详情，查询检测数据分析CHAT
       * @param departIds 子级机构IDs
       * @param start 开始时间
       * @param end 结束时间
       * @return
       * @author LuoYX
       * @date 2018年4月19日
       */ -->
    <select id="queryCheckChat" parameterType="Object" resultType="java.util.Map">
        SELECT COUNT(1) count,
        IFNULL(SUM(CASE WHEN conclusion='合格' THEN 1 ELSE 0 END),0) qual,
        IFNULL(SUM(CASE WHEN conclusion='不合格' THEN 1 ELSE 0 END),0) unqual
        FROM data_check_recording
        WHERE 1=1
        <include refid="sumaryDetailCondition"/>
    </select>
    <!-- /**
     * 机构自身检测的数据数量
     * @param departId
     * @return
     * @author LuoYX
     * @date 2018年4月19日
     */ -->
    <select id="queryCountByDepartId" resultType="java.util.Map" parameterType="Object">
        SELECT
            id,
            depart_name,
            IFNULL((SELECT COUNT(1)
                    FROM data_check_recording
                    WHERE depart_id = d.id AND delete_flag = 0 AND check_date &gt; #{start} AND
                          check_date &lt; CONCAT(#{end}, ' 23:59:59')),
                   0)                                                      count,
            IFNULL((SELECT SUM(CASE WHEN conclusion = '合格'
                THEN 1
                               ELSE 0 END)
                    FROM data_check_recording
                    WHERE depart_id = d.id AND delete_flag = 0 AND check_date &gt; #{start} AND
                          check_date &lt; CONCAT(#{end}, ' 23:59:59')), 0) qual,
            IFNULL((SELECT SUM(CASE WHEN conclusion = '不合格'
                THEN 1
                               ELSE 0 END)
                    FROM data_check_recording
                    WHERE depart_id = d.id AND delete_flag = 0 AND check_date &gt; #{start} AND
                          check_date &lt; CONCAT(#{end}, ' 23:59:59')),
                   0)                                                      unqual
        FROM t_s_depart d
        WHERE id = #{departId}
    </select>
    <!-- /**
     * 机构检测数据总数、合格数、不合格数
     * @param departId
     * @return
     * @author LuoYX
     * @date 2018年4月19日
     */ -->
    <select id="queryCountBySubDepart" resultType="java.util.Map" parameterType="Object">
        SELECT COUNT(1) count,
        IFNULL(SUM(IF(conclusion='合格', 1, 0)), 0) qual,
        IFNULL(SUM(IF(conclusion='不合格', 1, 0)), 0) unqual
        FROM data_check_recording
        WHERE 1=1
        <include refid="sumaryDetailCondition"/>
    </select>
    <!-- /**
     * 根据 监管对象 Ids 查询检测总数、合格数、不合格数
     * @param regIds 监管对象Ids
     * @return
     * @author LuoYX
     * @date 2018年4月27日
     */ -->
    <select id="queryCountByRegIds" resultType="java.util.Map" parameterType="Object">
        SELECT
        count(1) count,
        COUNT(conclusion='合格' OR NULL) qual,
        COUNT(conclusion='不合格' OR NULL) unqual
        FROM data_check_recording
        WHERE delete_flag=0
        <if test="start != null and start != ''">
            AND check_date &gt;= #{start}
        </if>
        <if test="end != null and end != ''">
            AND check_date &lt;= CONCAT(#{end},'23:59:59')
        </if>
        <if test="regIds != null and regIds.size() > 0 ">
            AND reg_id IN
            <foreach collection="regIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="regIds.size() == 0 ">
            AND reg_id IN (0)
        </if>
    </select>
    <!-- /**
     * 33大类检测CHAT
     * @param typeId
     * @param typeIds
     * @param start
     * @param end
     * @return
     * @author LuoYX
     * @date 2018年4月19日
     */ -->
    <select id="queryCountBySubType" resultType="java.util.Map" parameterType="Object">
        SELECT COUNT(1) count,
        IFNULL(SUM(IF(conclusion='合格', 1, 0)), 0) qual,
        IFNULL(SUM(IF(conclusion='不合格', 1, 0)), 0) unqual
        FROM data_check_recording
        WHERE 1=1
        <if test="typeIds != null and typeIds.size() > 0 ">
            AND food_id IN
            <foreach collection="typeIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <include refid="sumaryDetailCondition"/>
    </select>
    <!-- /**
     * 查询不合格排行CHAT
     * @param departIds
     * @param start
     * @param end
     * @return
     * @author LuoYX
     * @date 2018年4月19日
     */ -->
    <select id="queryCountByFoodNameAndUnqual" parameterType="Object" resultType="java.util.Map">
        SELECT food_name,COUNT(conclusion='不合格' OR NULL) unqual
        FROM data_check_recording
        WHERE 1=1
        <include refid="sumaryDetailCondition"/>
        GROUP BY food_name
        ORDER BY unqual DESC,food_name
        LIMIT 0,15
    </select>
    <sql id="sumaryDetailCondition">
        AND delete_flag=0
        <if test="start != null and start != ''">
            AND check_date &gt; #{start}
        </if>
        <if test="end != null and end != ''">
            AND check_date &lt; CONCAT(#{end},' 23:59:59')
        </if>
        AND depart_id in
        <if test="departIds != null and departIds.size() > 0 ">
            <foreach collection="departIds" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="departIds == null or departIds.size() == 0 ">
            (0)
        </if>
    </sql>

    <!-- /**
   * 端州微信首页-查询5条 不合格数据
   * @param regIds 市场IDs
   * @param start  开始
   * @param end 结束
   * @param conclusion 合格|不合格
   * @return
   * @author LuoYX
   * @date 2018年6月27日
   */ -->
    <select id="queryUnqualCheckDataLimit5" resultMap="BaseResultMap" parameterType="Object">
        SELECT
        <include refid="Base_Column_List"/>
        FROM data_check_recording
        WHERE delete_flag=0 AND
        check_date&gt;=#{start} AND check_date&lt;=#{end}
        AND conclusion=#{conclusion}
        AND reg_id IN
        <if test="regIds != null and regIds.size() > 0">
            <foreach item="item" index="index" collection="regIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="regIds == null or regIds.size() == 0">
            (0)
        </if>
        ORDER BY check_date DESC
        LIMIT 0,5
    </select>
    <!-- /**
   * 端州微信首页-检测汇总
   * @param regIds
   * @param start
   * @param end
   * @return
   * @author LuoYX
   * @date 2018年6月28日
   */ -->
    <select id="queryCountByRegIdsGroupByReg" resultType="java.util.Map" parameterType="Object">
        SELECT bro.id AS reg_id,bro.reg_name,bro.reg_type,
        count(1) AS count,
        sum(CASE WHEN s.conclusion ='合格' THEN 1 ELSE 0 END) AS qual,
        sum(CASE WHEN s.conclusion ='不合格' THEN 1 ELSE 0 END) AS unqual
        FROM base_regulatory_object bro
        LEFT JOIN data_check_recording AS s ON bro.id = s.reg_id
        LEFT JOIN t_s_depart AS d ON s.depart_id = d.id
        WHERE s.check_date &gt;= #{start} AND s.check_date&lt;= #{end}
        AND bro.delete_flag = 0
        AND s.delete_flag = 0
        AND d.delete_flag = 0
        AND d.depart_code LIKE CONCAT(( SELECT depart_code FROM t_s_depart t2 WHERE t2.id=
        <if test="departId != null and departId > 0">
            #{departId}
        </if>
        <if test="departId == null or departId == 0">
            0
        </if>
        ),'%')
        GROUP BY bro.id
        ORDER BY count DESC
    </select>

    <!-- /**
     * 端州微信-查询指定日期不合格数据
     * @param regIds
     * @param start
     * @param end
     * @param conclusion
     * @return
     * @author LuoYX
     * @date 2018年6月29日
     */
    List<DataCheckRecording> queryUnqualDetailByDepartId(@Param("departId")List<Integer> regIds,@Param("start") String start,@Param("end") String end, @Param("conclusion")String conclusion);
     -->
    <select id="queryUnqualDetailByDepartId" parameterType="Object" resultMap="BaseResultMap">
        SELECT * FROM data_check_recording
        WHERE delete_flag=0
        AND check_date&gt;=#{start} AND check_date&lt;=#{end}
        AND conclusion=#{conclusion}
        AND reg_id IN
        <if test="regIds != null and regIds.size() > 0">
            <foreach item="item" index="index" collection="regIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="regIds == null or regIds.size() == 0">
            (0)
        </if>
    </select>


    <!-- /**
     * 查询 检测档口数量、检测样品数量 ， 按市场ID分组
     * @param regId 市场ID
     * @return
     * @author LuoYX
     * @date 2018年8月24日
     */
    Map<String, Object> queryCountByRegIdGroupByRegId(@Param("regId")Integer regId, @Param("begin")String begin); -->
    <select id="queryCountByRegIdGroupByRegId" resultType="java.util.Map" parameterType="Object">
        SELECT COUNT(DISTINCT reg_id) regCount,COUNT(DISTINCT food_name) foodCount FROM
        data_check_recording WHERE delete_flag=0
        <if test="start != null and start !=''">
            AND check_date&gt;=#{begin}
        </if>
        <if test="end != null and end !=''">
            AND check_date&lt;=CONCAT(#{end},' 23:59:59')
        </if>
        AND reg_id=#{regId}
    </select>


    <!-- /**
     * 查询市场覆盖率数据   上虞项目需求
     * @param model
     * @return
     * @author LuoYX
     * @date 2018年8月27日
     */
    List<Map<String, Object>> queryCoverage(RegulatoryCoverageModel model); -->
    <select id="queryCoverage" parameterType="Object" resultType="java.util.Map">
        SELECT o.id,o.reg_name,
        (SELECT COUNT(DISTINCT reg_user_id) FROM data_check_recording r
        WHERE r.delete_flag=0
        <if test="start != null and start != ''">
            AND check_date&gt;=#{start}
        </if>
        <if test="end != null and end != ''">
            AND check_date&lt;=CONCAT(#{end},' 23:59:59')
        </if>
        AND reg_id=o.id ) regUserCount,
        (SELECT COUNT(DISTINCT food_name) FROM data_check_recording r
        WHERE r.delete_flag=0
        <if test="start != null and start != ''">
            AND check_date&gt;=#{start}
        </if>
        <if test="end != null and end != ''">
            AND check_date&lt;=CONCAT(#{end},' 23:59:59')
        </if>
        AND reg_id=o.id ) foodCount,
        IFNULL((SELECT
        SUM(CASE WHEN (delete_flag=0
        OR (delete_flag=1
        <if test="start != null and start != ''">
            AND update_date &gt;=#{start}
        </if>
        )
        ) THEN 1 ELSE 0 END)
        FROM base_regulatory_business b
        WHERE reg_id=o.id
        <if test="end != null and end != ''">
            AND b.create_date&lt;=CONCAT(#{end},' 23:59:59')
        </if>
        ),0) busCount
        FROM base_regulatory_object o
        WHERE delete_flag=0 AND
        id IN (
        SELECT id FROM base_regulatory_object WHERE depart_id=#{departId} AND delete_flag=0
        <if test="end != null and end !=''">
            AND create_date&lt;=CONCAT(#{end},' 23:59:59')
        </if>
        )
        #ORDER BY id
        ORDER BY busCount DESC
    </select>
    <!-- /**
     * 查询市场检测过的 样品
     * @param model
     * @return
     * @author LuoYX
     * @date 2018年8月27日
     */
    List<Map<String, Object>> queryCheckFoodCountGroupByRegId(RegulatoryCoverageModel model); -->
    <select id="queryCheckFoodCountGroupByRegId" parameterType="Object" resultType="java.util.Map">
        SELECT id reg_id,
        (SELECT COUNT(DISTINCT food_name) FROM data_check_recording WHERE reg_id=o.id AND delete_flag=0) foodCount
        FROM base_regulatory_object o
        WHERE id IN (SELECT id FROM base_regulatory_object WHERE depart_id=#{departId} AND delete_flag=0
        <if test="end != null and end !=''">
            AND create_date&lt;=CONCAT(#{end},' 23:59:59')
        </if>
        )
        ORDER BY id
    </select>
    <!-- /**
     * 总食品覆盖率
     * @param model
     * @return
     * @author LuoYX
     * @date 2018年8月27日
     */
    List<Map<String, Object>> queryCheckFoodCount(RegulatoryCoverageModel model); -->
    <select id="queryCheckFoodCount" parameterType="Object" resultType="java.util.Map">
        SELECT COUNT(DISTINCT food_name) foodCount
        FROM data_check_recording
        WHERE delete_flag=0
        AND reg_id IN (SELECT id FROM base_regulatory_object WHERE depart_id=#{departId} <!-- and delete_flag=0 -->
        <if test="end != null and end !=''">
            <!-- AND create_date&lt;=#{end} -->
            AND ((delete_flag=0 AND create_date&lt;=CONCAT(#{end},' 23:59:59'))
            OR (delete_flag=1 AND update_date&gt;=CONCAT(#{end},' 23:59:59')))
        </if>
        )
    </select>
    <!-- List<Map<String, Object>> queryCheckFoodCount2(RegulatoryCoverageModel model); -->
    <select id="queryCheckFoodCount2" parameterType="Object" resultType="java.util.Map">
        SELECT COUNT(DISTINCT food_name) foodCount
        FROM data_check_recording
        WHERE delete_flag=0
        <if test="start != null and start !=''">
            AND check_date &gt;=#{start}
        </if>
        <if test="end != null and end !=''">
            AND check_date &lt;=CONCAT(#{end},' 23:59:59')
        </if>
        AND reg_id IN (
        SELECT id FROM base_regulatory_object WHERE depart_id=#{departId} <!-- and delete_flag=0 -->
        <if test="end != null and end !=''">
            AND ((delete_flag=0 AND create_date&lt;=CONCAT(#{end},' 23:59:59'))
            OR (delete_flag=1 AND update_date&gt;=CONCAT(#{end},' 23:59:59')))
            <!-- AND create_date&lt;=CONCAT(#{end},' 23:59:59') -->
        </if>
        )
    </select>
    <!-- /**
     * 查询时间段内 未检测的 样品 明细
     * @param model
     * @return
     * @author LuoYX
     * @date 2018年9月13日
     */
    List<BaseFoodType> queryUnCheckFoodName(RegulatoryCoverageModel model); -->
    <select id="queryUnCheckFoodName" parameterType="Object" resultType="java.util.Map">
        SELECT DISTINCT food_name
        FROM data_check_recording r1 WHERE
        check_date&lt;=CONCAT(#{end},' 23:59:59')
        AND reg_id=#{regId} AND delete_flag=0
        AND food_id NOT IN (
        SELECT DISTINCT food_id FROM data_check_recording r2
        WHERE r2.reg_id=#{regId}
        <if test="start != null and start != ''">
            AND r2.check_date&gt;=#{start}
        </if>
        <if test="end != null and end != ''">
            AND r2.check_date&lt;=CONCAT(#{end},' 23:59:59')
        </if>
        AND delete_flag=0
        )
    </select>

    <!--获取微信端检测汇总配置文件端map对象 shit-->
    <select id="getConfigMap" resultType="java.util.Map">
        SELECT
            id,
            account_entry       AS accountEntry,
            check_sum           AS checkSum,
            check_sum_details   AS checkSumDetails,
            sale_count          AS saleCount,
            sale_count_details  AS saleCountDetails,
            stock_count         AS stockCount,
            stock_count_details AS stockCountDetails,
            total_data          AS totalData,
            unqualified_details AS unqualifiedDetails,
            unqualified,
            param1,
            param2,
            param3
        FROM config_check
        LIMIT 0, 1
    </select>


    <select id="loadDatagridUpload2" resultMap="BaseResultMap" parameterType="Object">
        SELECT tsd.id id, tsd.sample_code samplingDetailCode, tsd.id samplingDetailId,
        tsd.food_name foodName, tsd.item_name itemName,
        ts.reg_name regName, ts.ope_shop_name regUserName, ts.ope_shop_code regUserCode,
        ts.sampling_date samplingDate, ts.sampling_username samplingUsername
        FROM tb_sampling ts
        INNER JOIN tb_sampling_detail tsd ON ts.id = tsd.sampling_id
        LEFT JOIN data_check_recording dcr ON tsd.id = dcr.sampling_detail_id
        WHERE 1=1
        <include refid="SQL_WHERE2"></include>
        ORDER BY ts.sampling_date ${order} LIMIT #{rowOffset}, #{pageSize}
    </select>
    <select id="getRowTotalUpload2" resultType="java.lang.Integer" parameterType="Object">
        SELECT count(1) AS rowTotal
        FROM tb_sampling ts
        INNER JOIN tb_sampling_detail tsd ON ts.id = tsd.sampling_id
        LEFT JOIN data_check_recording dcr ON tsd.id = dcr.sampling_detail_id
        WHERE 1=1
        <include refid="SQL_WHERE2"></include>
    </select>
    <sql id="SQL_WHERE2">
        AND (dcr.id IS NULL OR dcr.delete_flag = 1)
        AND ts.delete_flag = 0
        <if test="obj.checkDateStartDateStr != null and obj.checkDateStartDateStr != ''">
            AND ts.sampling_date &gt;= #{obj.checkDateStartDateStr}
        </if>
        <if test="obj.checkDateEndDateStr != null and obj.checkDateEndDateStr != ''">
            AND ts.sampling_date &lt;= #{obj.checkDateEndDateStr}
        </if>

        <if test="obj.keyWords != null and obj.keyWords != ''">
            AND (
            ts.reg_name LIKE CONCAT('%', #{obj.keyWords}, '%')
            OR ts.ope_shop_code LIKE CONCAT('%', #{obj.keyWords}, '%')

            OR tsd.sample_code LIKE CONCAT('%', #{obj.keyWords}, '%')
            OR tsd.food_name LIKE CONCAT('%', #{obj.keyWords}, '%')
            OR tsd.item_name LIKE CONCAT('%', #{obj.keyWords}, '%')
            )
        </if>

        <choose>
            <when test="obj.personal != null">
                AND ts.personal = #{obj.personal}
                <!--上传抽样单、送样单数据-->
                <if test="obj.personal == 0 or obj.personal == 1">
                    <choose>
                        <when test="obj.userRegId != null">
                            AND ts.reg_id = #{obj.userRegId}
                        </when>
                        <when test="obj.pointArr != null and obj.pointArr.length > 0">
                            AND ts.point_id IN
                            <foreach item="item" index="index" collection="obj.pointArr" open="(" separator=","
                                     close=")">
                                #{item}
                            </foreach>
                        </when>
                        <when test="obj.departArr != null and obj.departArr.length > 0">
                            AND ts.depart_id IN
                            <foreach item="item" index="index" collection="obj.departArr" open="(" separator=","
                                     close=")">
                                #{item}
                            </foreach>
                        </when>
                        <otherwise>AND 1=0</otherwise>
                    </choose>
                </if>
                <!--上传订单数据-->
                <if test="obj.personal == 2">
                    <choose>
                        <when test="obj.pointArr != null and obj.pointArr.length > 0">
                            AND tsd.point_id IN
                            <foreach item="item" index="index" collection="obj.pointArr" open="(" separator=","
                                     close=")">
                                #{item}
                            </foreach>
                        </when>
                        <when test="obj.departArr != null and obj.departArr.length > 0">
                            AND tsd.depart_id IN
                            <foreach item="item" index="index" collection="obj.departArr" open="(" separator=","
                                     close=")">
                                #{item}
                            </foreach>
                        </when>
                        <otherwise>AND 1=0</otherwise>
                    </choose>
                </if>
            </when>
            <otherwise>
                AND(( 1=1
                <choose>
                    <when test="obj.userRegId != null">
                        AND ts.reg_id = #{obj.userRegId}
                    </when>
                    <when test="obj.pointArr != null and obj.pointArr.length > 0">
                        AND ts.point_id IN
                        <foreach item="item" index="index" collection="obj.pointArr" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <when test="obj.departArr != null and obj.departArr.length > 0">
                        AND ts.depart_id IN
                        <foreach item="item" index="index" collection="obj.departArr" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>AND 1=0</otherwise>
                </choose>
                ) OR ( 1=1
                <choose>
                    <when test="obj.pointArr != null and obj.pointArr.length > 0">
                        AND tsd.point_id IN
                        <foreach item="item" index="index" collection="obj.pointArr" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <when test="obj.departArr != null and obj.departArr.length > 0">
                        AND tsd.depart_id IN
                        <foreach item="item" index="index" collection="obj.departArr" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>AND 1=0</otherwise>
                </choose>
                ))
            </otherwise>
        </choose>

    </sql>

    <select id="loadDatagridForOrder" resultType="com.dayuan.bean.dataCheck.DataCheckRecording" parameterType="Object">
        SELECT tsd.id id, tsd.sample_code samplingDetailCode, tsd.food_name foodName, tsd.item_name itemName,
        ts.ccu_name regName,  ts.iu_name regUserCode,ts.order_time samplingDate, ts.order_username samplingUsername,ts.sampling_time sampleTubeTime,
        dcode.tube_code1 tubeCode1,dcode.tube_code2 tubeCode2
        FROM tb_sampling ts
        INNER JOIN tb_sampling_detail tsd ON ts.id = tsd.sampling_id
        LEFT JOIN data_check_recording dcr ON tsd.id = dcr.sampling_detail_id
        LEFT JOIN tb_sampling_detail_code dcode ON dcode.sampling_detail_id=tsd.id
        WHERE 1=1
        <include refid="SQL_WHEREForOrder"/>
        ORDER BY ts.order_time DESC LIMIT #{rowOffset}, #{pageSize}
    </select>
    <select id="getRowTotalForOrder" resultType="java.lang.Integer" parameterType="Object">
        SELECT count(1) AS rowTotal FROM tb_sampling ts
        INNER JOIN tb_sampling_detail tsd ON ts.id = tsd.sampling_id
        LEFT JOIN data_check_recording dcr ON tsd.id = dcr.sampling_detail_id
        LEFT JOIN tb_sampling_detail_code dcode ON dcode.sampling_detail_id=tsd.id
        WHERE 1=1
        <include refid="SQL_WHEREForOrder"/>
    </select>
    <sql id="SQL_WHEREForOrder">
        AND (dcr.id IS NULL OR dcr.delete_flag = 1)
        AND ts.delete_flag = 0
        AND ts.order_status in(2,5,6)
        <if test="obj.startDateStr != null and obj.startDateStr != ''">
            AND ts.order_time &gt;= #{obj.startDateStr}
        </if>
        <if test="obj.endDateStr != null and obj.endDateStr != ''">
            AND ts.order_time &lt;= #{obj.endDateStr}
        </if>

        <if test="obj.keyWords != null and obj.keyWords != ''">
            AND (ts.order_number LIKE CONCAT('%', #{obj.keyWords}, '%')
            OR tsd.sample_code LIKE CONCAT(#{obj.keyWords}, '%')
            OR dcode.tube_code1 LIKE CONCAT(#{obj.keyWords}, '%')
            OR dcode.tube_code2 LIKE CONCAT(#{obj.keyWords}, '%')
            )
        </if>

        <!--<choose>
            <when test="obj.personal != null">
                &lt;!&ndash;上传订单数据&ndash;&gt;
                <if test="obj.personal == 2">
                    <choose>
                        <when test="obj.pointArr != null and obj.pointArr.length > 0">
                            AND ts.point_id IN
                            <foreach item="item" index="index" collection="obj.pointArr" open="(" separator=","
                                     close=")">
                                #{item}
                            </foreach>
                        </when>
                        <when test="obj.departArr != null and obj.departArr.length > 0">
                            AND ts.depart_id IN
                            <foreach item="item" index="index" collection="obj.departArr" open="(" separator=","
                                     close=")">
                                #{item}
                            </foreach>
                        </when>
                        <otherwise>AND 1=0</otherwise>
                    </choose>
                </if>
            </when>
            <otherwise>
                AND(( 1=1
                <choose>
                    <when test="obj.userRegId != null">
                        AND ts.reg_id = #{obj.userRegId}
                    </when>
                    <when test="obj.pointArr != null and obj.pointArr.length > 0">
                        AND ts.point_id IN
                        <foreach item="item" index="index" collection="obj.pointArr" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <when test="obj.departArr != null and obj.departArr.length > 0">
                        AND ts.depart_id IN
                        <foreach item="item" index="index" collection="obj.departArr" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>AND 1=0</otherwise>
                </choose>
                ) OR ( 1=1
                <choose>
                    <when test="obj.pointArr != null and obj.pointArr.length > 0">
                        AND ts.point_id IN
                        <foreach item="item" index="index" collection="obj.pointArr" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <when test="obj.departArr != null and obj.departArr.length > 0">
                        AND ts.depart_id IN
                        <foreach item="item" index="index" collection="obj.departArr" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </when>
                    <otherwise>AND 1=0</otherwise>
                </choose>
                ))
            </otherwise>
        </choose>-->

    </sql>


    <!--数据统计-检测监控-送检详情：查询检测数据明细 shit-->
    <select id="getRowTotalDetails" resultType="java.lang.Integer">
        SELECT count(1)
        FROM
        tb_sampling_detail tsd
        JOIN tb_sampling ts ON tsd.sampling_id = ts.id
        JOIN tb_sampling_requester tsr ON tsr.sampling_id = ts.id
        LEFT JOIN data_check_recording dcr ON tsd.id = dcr.sampling_detail_id
        WHERE
        ts.delete_flag = 0
        AND tsr.request_id = #{id} OR ts.reg_id = #{id}
        AND tsr.delete_flag = 0
        AND ts.personal = 2
        AND ts.order_status = 2
        <if test="start != null and start != ''">
            AND ts.sampling_date &gt;= #{start}
        </if>
        <if test="end != null and end != ''">
            AND ts.sampling_date &lt;= #{end}
        </if>
    </select>

    <!--数据统计-检测监控-送检详情：查询检测数据明细 shit-->
    <select id="loadDatagridDetails" resultType="com.dayuan.model.dataCheck.CheckResultModel">
        SELECT
        tsd.id,
        tsr.request_id,
        tsd.sample_code AS opeShopName,
        ts.sampling_date AS samplingDate,
        tsd.food_name AS foodName,
        dcr.item_name AS itemName,
        dcr.check_result AS checkResult,
        dcr.check_date AS checkDate,
        dcr.conclusion,
        dcr.check_username AS checkUsername
        FROM
        tb_sampling_detail tsd
        JOIN tb_sampling ts ON tsd.sampling_id = ts.id
        JOIN tb_sampling_requester tsr ON tsr.sampling_id = ts.id
        LEFT JOIN data_check_recording dcr ON tsd.id = dcr.sampling_detail_id
        WHERE
        ts.delete_flag = 0
        AND tsr.request_id = #{id}
        AND tsr.delete_flag = 0
        AND ts.personal = 2
        AND ts.order_status = 2
        <if test="start != null and start != ''">
            AND ts.sampling_date &gt;= #{start}
        </if>
        <if test="end != null and end != ''">
            AND ts.sampling_date &lt;= #{end}
        </if>
        ORDER BY ts.sampling_date DESC
        LIMIT #{page.rowOffset}, #{page.pageSize}
    </select>

    <update id="resetUploadStatus" parameterType="java.lang.Integer">
        UPDATE data_check_recording SET param2=0, param5=NULL, time1=NULL, update_date=now(), update_by = #{updateBy}
        WHERE rid IN
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>
    <select id="selectCarDataGroup" resultMap="DataMap">
        CALL QueryCarStatistics(#{did}, #{pointType}, #{checkDateStart}, #{checkDateEnd})
    </select>


    <!--微信云服务-查询检测数据 shit 2021-04-08-->
    <select id="wxQueryList" resultType="com.dayuan.model.dataCheck.CheckResultModel">
        SELECT
        <!--#检测结果-->
        dcr.id AS id,dcr.check_accord AS checkAccord, dcr.limit_value AS limitValue, dcr.check_result AS checkResult,
        dcr.check_unit AS checkUnit, dcr.conclusion AS conclusion,dcr.check_date AS checkDate,dcr.check_username AS
        checkUsername,dcr.food_name AS foodName,dcr.item_name AS itemName,dcr.device_name AS
        deviceName,dcr.device_company AS deviceCompany,
        dcr.upload_name AS uploadName,dcr.upload_date AS uploadDate, dcr.data_source AS dataSource,dcr.remark AS remark,
        <!--#抽样单表-->
        tbs.id AS samplingId, tbs.sampling_no AS samplingNo,
        <!--#被检单位-->
        dcr.reg_name AS regName,tbs.reg_link_person AS regLinkPerson,bro.link_phone AS regLinkPhone,
        <!--#经营户-->
        dcr.reg_user_name AS ope_shop_code,brb.ope_shop_name AS opeShopName,brb.ope_name AS opeName,brb.ope_phone  AS opePhone,
        <!--#被检单位地址-->
        bro.reg_address regAddress,
        <!--#抽样单详情-->
        tbsd.id AS tbsdId,tbsd.sample_number AS sampleNumber, tbsd.purchase_amount AS purchaseAmount,tbsd.origin,
        <!--#检测机构和检测点-->
        dcr.depart_name AS departName,dcr.point_name AS pointName,bp.address AS address
        FROM data_check_recording dcr
        LEFT JOIN tb_sampling_detail tbsd ON dcr.sampling_detail_id = tbsd.id
        LEFT JOIN tb_sampling tbs ON tbs.id = tbsd.sampling_id
        LEFT JOIN base_regulatory_object bro ON bro.id = dcr.reg_id
        LEFT JOIN base_regulatory_business brb ON dcr.reg_user_id = brb.id
        <if test="obj.regTypeId !=null and obj.regTypeId !=''">
            LEFT JOIN base_regulatory_type type ON bro.reg_type=type.id
        </if>
        LEFT JOIN base_point bp ON bp.id = dcr.point_id
        WHERE dcr.delete_flag = 0
        <if test="obj.regTypeId !=null and obj.regTypeId !=''">
            AND FIND_IN_SET(type.id,#{obj.regTypeId})
        </if>
        <choose>
            <when test="obj.pointType == 0">
                AND bp.point_type = 0 AND bp.point_type_id = 1
            </when>
            <when test="obj.pointType == 1">
                AND bp.point_type = 1 AND bp.point_type_id = 1
            </when>
            <when test="obj.pointType == 2">
                AND bp.point_type = 0 AND bp.point_type_id != 1
            </when>
        </choose>

        <if test="obj.departArr != null and obj.departArr.length > 0">
            AND dcr.depart_id IN
            <foreach item="item" index="index" collection="obj.departArr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="obj.pointArr != null and obj.pointArr.length > 0">
            AND dcr.point_id IN
            <foreach item="item" index="index" collection="obj.pointArr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="obj.userRegId != null">
            AND dcr.reg_id = #{obj.userRegId}
        </if>
        <include refid="check_Where_Clause"/>
        ORDER BY dcr.check_date DESC LIMIT #{rowStart}, #{rowEnd}

    </select>
    <!--根据抽样单ID查询检测人员姓名和检测日期-->
    <select id="queryCheckUserBySamplingId" parameterType="Object" resultType="java.util.Map">
        SELECT
            check_username                     checkUsername,
            check_user_signature               checkUserSignature,
            max(check_date)                    uploadDate,
            GROUP_CONCAT(DISTINCT device_name) deviceName,
            GROUP_CONCAT(DISTINCT conclusion)  conclusion
        FROM data_check_recording
        WHERE delete_flag = 0 AND sampling_id = #{id}
        GROUP BY check_userid
        ORDER BY upload_date DESC
    </select>

    <insert id="bathInsertDataCheck" parameterType="java.util.List">
        INSERT INTO data_check_recording
        (id,food_type_id,food_type_name,food_id,food_name,reg_id,reg_name,reg_user_id,reg_user_name,
        depart_id,depart_name, point_id, point_name, check_userid, check_username, check_user_signature,
       upload_date,item_id,item_name,check_date,check_accord_id,check_accord,device_name,
        limit_value,check_result,check_unit,conclusion,data_source,delete_flag,create_by,create_date,update_by,
        update_date,device_method,device_model,device_company,reload_flag,status_falg,remark)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=VARCHAR},#{item.foodTypeId,jdbcType=VARCHAR},#{item.foodTypeName,jdbcType=VARCHAR},#{item.foodId,jdbcType=VARCHAR},#{item.foodName,jdbcType=VARCHAR},
            #{item.regId,jdbcType=INTEGER},#{item.regName,jdbcType=VARCHAR},#{item.regUserId,jdbcType=INTEGER},#{item.regUserName,jdbcType=VARCHAR},
            #{item.departId,jdbcType=INTEGER}, #{item.departName,jdbcType=VARCHAR},
            #{item.pointId,jdbcType=INTEGER}, #{item.pointName,jdbcType=VARCHAR}, #{item.checkUserid,jdbcType=VARCHAR},
            #{item.checkUsername,jdbcType=VARCHAR},
            #{item.checkUserSignature,jdbcType=VARCHAR},#{item.auditorName,jdbcType=VARCHAR},#{item.uploadName,jdbcType=VARCHAR},
            #{item.uploadDate,jdbcType=TIMESTAMP},
            #{item.itemId,jdbcType=VARCHAR},#{item.itemName,jdbcType=VARCHAR}, #{item.checkDate,jdbcType=TIMESTAMP},
            #{item.checkAccordId,jdbcType=VARCHAR},#{item.checkAccord,jdbcType=VARCHAR},
            #{item.deviceName,jdbcType=VARCHAR}, #{item.limitValue,jdbcType=VARCHAR},
            #{item.checkResult,jdbcType=VARCHAR}, #{item.checkUnit,jdbcType=VARCHAR},
            #{item.conclusion,jdbcType=VARCHAR},
            #{item.dataSource,jdbcType=SMALLINT},#{item.deleteFlag,jdbcType=SMALLINT},
            #{item.createBy,jdbcType=VARCHAR},#{item.createDate,jdbcType=TIMESTAMP},
            #{item.updateBy,jdbcType=VARCHAR},#{item.updateDate,jdbcType=TIMESTAMP},#{item.deviceMethod,jdbcType=VARCHAR},#{item.deviceModel,jdbcType=VARCHAR},
            #{item.deviceCompany,jdbcType=VARCHAR},#{item.reloadFlag,jdbcType=SMALLINT},#{item.statusFalg,jdbcType=SMALLINT},#{item.remark,jdbcType=VARCHAR})
        </foreach>
    </insert>
</mapper>