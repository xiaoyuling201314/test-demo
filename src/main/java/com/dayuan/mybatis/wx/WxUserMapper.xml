<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dayuan.mapper.wx.WxUserMapper">
    <resultMap id="BaseResultMap" type="com.dayuan.bean.wx.WxUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 22 11:51:12 CST 2018.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="type" jdbcType="SMALLINT" property="type"/>
        <result column="status" jdbcType="SMALLINT" property="status"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="userId" jdbcType="VARCHAR" property="userId"/>
        <result column="nickName" jdbcType="VARCHAR" property="nickName"/>
        <result column="openid" jdbcType="VARCHAR" property="openid"/>
        <result column="delete_flag" jdbcType="SMALLINT" property="delete_flag"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="create_date"/>
        <result column="create_by" jdbcType="VARCHAR" property="create_by"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="update_date"/>
        <result column="update_by" jdbcType="VARCHAR" property="update_by"/>
        <result column="delete_date" jdbcType="TIMESTAMP" property="delete_date"/>
        <result column="param1" jdbcType="VARCHAR" property="param1"/>
        <result column="param2" jdbcType="VARCHAR" property="param2"/>
        <result column="param3" jdbcType="VARCHAR" property="param3"/>
        <!-- 2018-7-16 微信用户表独立 新增字段 -->
        <result column="depart_id" jdbcType="INTEGER" property="departId"/>
        <result column="point_id" jdbcType="INTEGER" property="pointId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>

        <!-- 微信查看用户信息 -->
        <result column="realname" jdbcType="VARCHAR" property="realname"/>
        <result column="userName" jdbcType="VARCHAR" property="userName"/>
        <result column="pname" jdbcType="VARCHAR" property="pname"/>
        <result column="dname" jdbcType="VARCHAR" property="dname"/><!-- 机构名称 -->
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 22 11:51:12 CST 2018.
        -->
        id, type,status, phone, userId, nickName, openid, delete_flag, create_date, create_by, update_date,
        update_by, delete_date, param1, param2, param3,depart_id,point_id,user_name,password
    </sql>
    <!-- 根据微信openid查询是否绑定 -->
    <select id="selectByOpenid" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from wx_user
        where
        delete_flag=0 and
        openid = #{openid,jdbcType=VARCHAR}
    </select>
    <!-- 根据openid 查询绑定用户信息 -->
    <select id="selectByOpenidForUser" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
            ts.id            AS userId,
            ts.realname      AS realname,
            ts.user_name        userName,
            point.point_name AS pname,
            d.depart_name    AS dname
        FROM wx_user wx LEFT JOIN t_s_user ts ON wx.userId = ts.id
            LEFT JOIN base_point point ON ts.point_id = point.id
            LEFT JOIN t_s_depart d ON ts.depart_id = d.id
        WHERE
            wx.delete_flag = 0 AND ts.delete_flag = 0 AND ts.status = '0' AND
            wx.openid = #{openid,jdbcType=VARCHAR}
    </select>


    <!-- 根据机构code查询可绑定平台账号 -->
    <select id="selectByDepartCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT id userId,realname nickName FROM t_s_user WHERE delete_flag=0

        AND depart_id IN (
        SELECT id FROM t_s_depart WHERE depart_code LIKE CONCAT(#{departCode}, '%') )
        <!-- and
         id NOT in( SELECT  userId  from wx_user WHERE delete_flag=0 and  userId IS NOT NULL) -->
    </select>


    <!-- 根据账号密码查询    -->
    <select id="selectByUserAndPwd" parameterType="Object" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from wx_user
        where
        delete_flag=0
        and user_name = #{userName,jdbcType=VARCHAR}
        and password = #{password,jdbcType=VARCHAR}
    </select>
    <!-- 根据用户id查询账号是否可以绑定微信   -->
    <select id="selectByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from wx_user
        where
        delete_flag=0 and
        userId = #{userId,jdbcType=VARCHAR}
    </select>
    <!-- 判断用户名是否重复 -->
    <select id="getUserByUserName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from wx_user where delete_flag=0 and user_name = #{userName}
        <!-- select count(user_name) from t_s_user where user_name = #{userName} -->
    </select>
    <!-- 根据用户departId查询已绑定账号 -->
    <select id="selectByDepartId" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
            wx.*,
            u.user_name      AS userName,
            u.realname          realname,
            point.point_name AS pname,
            d.depart_name    AS dname
        FROM wx_user wx
            LEFT JOIN t_s_user u ON wx.userId = u.id
            LEFT JOIN base_point point ON u.point_id = point.id
            LEFT JOIN t_s_depart d ON u.depart_id = d.id
        WHERE
            wx.delete_flag = 0 AND u.delete_flag = 0 AND u.`status` = 0 AND u.depart_id = #{departId,jdbcType=VARCHAR}
    </select>
    <resultMap id="UserRoleMap" type="com.dayuan.model.system.UserRoleModel">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="realname" property="realname" jdbcType="VARCHAR"/>
        <result column="sorting" property="sorting" jdbcType="VARCHAR"/>
        <result column="loginCount" property="loginCount" jdbcType="SMALLINT"/>
        <result column="loginTime" property="loginTime" jdbcType="TIMESTAMP"/>
        <result column="departName" property="departName" jdbcType="VARCHAR"/>
        <result column="rolename" property="rolename" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="pointId" property="pointId" jdbcType="VARCHAR"/>
        <result column="pointName" property="pointName" jdbcType="VARCHAR"/>
        <result column="openid" property="openid" jdbcType="VARCHAR"/>
        <result column="wxstatus" property="wxstatus" jdbcType="SMALLINT"/>
        <result column="type" property="type" jdbcType="SMALLINT"/>
    </resultMap>
    <!-- <select id="loadDatagrid" resultMap="UserRoleMap" parameterType="Object">
          select u.id id , u.workers_id workersId , u.user_name userName, u.password `password`, u.depart_id departId,
          u.role_id roleId, u.realname realname, u.login_count loginCount, u.login_time loginTime, u.status status,
          u.point_id pointId, u.sorting sorting,
          d.depart_name departName,
          r.rolename rolename, r.remark remark,
          p.point_name pointName,
              (SELECT	wx.`status` FROM	wx_user wx WHERE wx.userId = u.id
          AND delete_flag = 0)AS wxstatus,
          (SELECT 	wx.openid	FROM	wx_user wx WHERE wx.userId = u.id
          AND delete_flag = 0) as openid,
      (SELECT 	wx.type	FROM	wx_user wx WHERE wx.userId = u.id
          AND delete_flag = 0) as type
          from t_s_user as u
          LEFT JOIN t_s_depart d on u.depart_id = d.id
          LEFT JOIN t_s_role r on u.role_id = r.id
          LEFT JOIN base_point p on u.point_id = p.id
          where u.delete_flag = 0  and u.status=0
          <if test="obj.pointId !=null">
              and u.point_id=#{obj.pointId}
          </if>
           <if test="obj.departCode !=null and obj.departCode != ''">
              and u.depart_id in (select id from t_s_depart where depart_code like CONCAT(#{obj.departCode},'%'))
          </if>
          <if test="obj.userName !=null and obj.userName != '' ">
              and (u.user_name like concat('%',#{obj.userName},'%')
              or d.depart_name like concat('%',#{obj.userName},'%')
              or r.rolename like concat('%',#{obj.userName},'%'))
          </if>
          order by d.depart_name ${order}, p.point_name ${order}, u.user_name ${order} limit #{rowOffset}, #{pageSize}
      </select>

      <select id="getRowTotal" resultType="java.lang.Integer" parameterType="Object">
          select count(1) as rowTotal from t_s_user as u
          LEFT JOIN t_s_depart d on u.depart_id = d.id
          LEFT JOIN t_s_role r on u.role_id = r.id
          LEFT JOIN base_point p on u.point_id = p.id
          where u.delete_flag = 0
              <if test="obj.pointId !=null">
              and u.point_id=#{obj.pointId}
          </if>
           <if test="obj.departCode !=null and obj.departCode != ''">
              and u.depart_id in (select id from t_s_depart where depart_code like CONCAT(#{obj.departCode},'%'))
          </if>
          <if test="obj.userName !=null and obj.userName != '' ">
              and (u.user_name like concat('%',#{obj.userName},'%')
              or d.depart_name like concat('%',#{obj.userName},'%')
              or r.rolename like concat('%',#{obj.userName},'%'))
          </if>
      </select> -->


    <select id="loadDatagrid" resultMap="BaseResultMap" parameterType="Object">
        SELECT
        wx.* ,tsuser.realname realname
        from wx_user wx LEFT JOIN t_s_user tsuser on wx.userId= tsuser.id
        WHERE wx.delete_flag = 0
        <if test="obj.userName !=null and obj.userName != '' ">
            and (wx.user_name like concat('%',#{obj.userName},'%')
            or wx.nickName like concat('%',#{obj.userName},'%')
            )
        </if>
        order by user_name ${order} limit #{rowOffset}, #{pageSize}
    </select>

    <select id="getRowTotal" resultType="java.lang.Integer" parameterType="Object">
        select count(1) as rowTotal from wx_user
        where 1=1 and delete_flag = 0
        <if test="obj.userName !=null and obj.userName != '' ">
            and (user_name like concat('%',#{obj.userName},'%')
            or nickName like concat('%',#{obj.userName},'%')
            )
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
            wx.*,
            tsuser.realname realname
        FROM wx_user wx LEFT JOIN t_s_user tsuser ON wx.userId = tsuser.id
        WHERE wx.id = #{id,jdbcType=INTEGER}
    </select>

    <!--shit:查询存在的所有启用人员 -->
    <select id="selectAllUser" resultType="com.dayuan.bean.wx.WxUser">
        SELECT
            id,
            userId,
            status,
            nickName
        FROM wx_user
        WHERE delete_flag = 0 AND status = 0
    </select>
    <!-- 微信用户逻辑删除 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        UPDATE wx_user SET delete_flag=1
        ,update_date=now()
        where id in
        <foreach collection="array" item="ids" index="index" open="(" close=")" separator=",">
            #{ids}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.dayuan.bean.wx.WxUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 22 11:51:12 CST 2018.
        -->
        INSERT INTO wx_user (id, type,status, phone,
        userId, nickName, openid,
        delete_flag, create_date, create_by,
        update_date, update_by, delete_date,
        param1, param2, param3,depart_id,point_id,user_name,password
        )
        VALUES (#{id,jdbcType=INTEGER}, #{type,jdbcType=SMALLINT}, #{status,jdbcType=SMALLINT},#{phone,jdbcType=VARCHAR},
        #{userId,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{openid,jdbcType=VARCHAR},
        #{delete_flag,jdbcType=SMALLINT}, #{create_date,jdbcType=TIMESTAMP}, #{create_by,jdbcType=VARCHAR},
        #{update_date,jdbcType=TIMESTAMP}, #{update_by,jdbcType=VARCHAR}, #{delete_date,jdbcType=TIMESTAMP},
        #{param1,jdbcType=VARCHAR}, #{param2,jdbcType=VARCHAR}, #{param3,jdbcType=VARCHAR},
        #{departId,jdbcType=INTEGER}, #{pointId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="com.dayuan.bean.wx.WxUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 22 11:51:12 CST 2018.
        -->
        insert into wx_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="userId != null">
                userId,
            </if>
            <if test="nickName != null">
                nickName,
            </if>
            <if test="openid != null">
                openid,
            </if>
            <if test="delete_flag != null">
                delete_flag,
            </if>
            <if test="create_date != null">
                create_date,
            </if>
            <if test="create_by != null">
                create_by,
            </if>
            <if test="update_date != null">
                update_date,
            </if>
            <if test="update_by != null">
                update_by,
            </if>
            <if test="delete_date != null">
                delete_date,
            </if>
            <if test="param1 != null">
                param1,
            </if>
            <if test="param2 != null">
                param2,
            </if>
            <if test="param3 != null">
                param3,
            </if>
            <if test="departId != null">
                depart_id,
            </if>
            <if test="pointId != null">
                point_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="password != null">
                password,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=SMALLINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=SMALLINT},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="openid != null">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="delete_flag != null">
                #{delete_flag,jdbcType=SMALLINT},
            </if>
            <if test="create_date != null">
                #{create_date,jdbcType=TIMESTAMP},
            </if>
            <if test="create_by != null">
                #{create_by,jdbcType=VARCHAR},
            </if>
            <if test="update_date != null">
                #{update_date,jdbcType=TIMESTAMP},
            </if>
            <if test="update_by != null">
                #{update_by,jdbcType=VARCHAR},
            </if>
            <if test="delete_date != null">
                #{delete_date,jdbcType=TIMESTAMP},
            </if>
            <if test="param1 != null">
                #{param1,jdbcType=VARCHAR},
            </if>
            <if test="param2 != null">
                #{param2,jdbcType=VARCHAR},
            </if>
            <if test="param3 != null">
                #{param3,jdbcType=VARCHAR},
            </if>
            <if test="departId != null">
                #{departId,jdbcType=INTEGER},
            </if>
            <if test="pointId != null">
                #{pointId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dayuan.bean.wx.WxUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 22 11:51:12 CST 2018.
        -->
        update wx_user
        <set>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=SMALLINT},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                userId = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nickName = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="openid != null">
                openid = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="delete_flag != null">
                delete_flag = #{delete_flag,jdbcType=SMALLINT},
            </if>
            <if test="create_date != null">
                create_date = #{create_date,jdbcType=TIMESTAMP},
            </if>
            <if test="create_by != null">
                create_by = #{create_by,jdbcType=VARCHAR},
            </if>
            <if test="update_date != null">
                update_date = #{update_date,jdbcType=TIMESTAMP},
            </if>
            <if test="update_by != null">
                update_by = #{update_by,jdbcType=VARCHAR},
            </if>
            <if test="delete_date != null">
                delete_date = #{delete_date,jdbcType=TIMESTAMP},
            </if>
            <if test="param1 != null">
                param1 = #{param1,jdbcType=VARCHAR},
            </if>
            <if test="param2 != null">
                param2 = #{param2,jdbcType=VARCHAR},
            </if>
            <if test="param3 != null">
                param3 = #{param3,jdbcType=VARCHAR},
            </if>
            <if test="departId != null">
                depart_id = #{departId,jdbcType=INTEGER},
            </if>
            <if test="pointId != null">
                point_id = #{pointId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null and password != ''">
                password = #{password,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dayuan.bean.wx.WxUser">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue May 22 11:51:12 CST 2018.
        -->
        UPDATE wx_user
        SET type = #{type,jdbcType=SMALLINT},
        status = #{status,jdbcType=SMALLINT},
        phone = #{phone,jdbcType=VARCHAR},
        userId = #{userId,jdbcType=VARCHAR},
        nickName = #{nickName,jdbcType=VARCHAR},
        openid = #{openid,jdbcType=VARCHAR},
        delete_flag = #{delete_flag,jdbcType=SMALLINT},
        create_date = #{create_date,jdbcType=TIMESTAMP},
        create_by = #{create_by,jdbcType=VARCHAR},
        update_date = #{update_date,jdbcType=TIMESTAMP},
        update_by = #{update_by,jdbcType=VARCHAR},
        delete_date = #{delete_date,jdbcType=TIMESTAMP},
        param1 = #{param1,jdbcType=VARCHAR},
        param2 = #{param2,jdbcType=VARCHAR},
        param3 = #{param3,jdbcType=VARCHAR},
        depart_id = #{departId,jdbcType=VARCHAR},
        point_id = #{pointId,jdbcType=VARCHAR},
        user_name = #{userName,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
</mapper>