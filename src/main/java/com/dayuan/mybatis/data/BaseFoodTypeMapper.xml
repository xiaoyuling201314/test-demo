<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dayuan.mapper.data.BaseFoodTypeMapper" >
  <resultMap id="BaseResultMap" type="com.dayuan.bean.data.BaseFoodType" >
      <id property="id" column="id" />
      <result property="foodName" column="food_name" />
      <result property="foodNameEn" column="food_name_en" />
      <result property="foodNameOther" column="food_name_other" />
      <result property="foodCode" column="food_code" />
      <result property="parentId" column="parent_id" />
      <result property="cimonitorLevel" column="cimonitor_level" />
      <result property="isfood" column="isFood" />
      <result property="sorting" column="sorting" />
      <result property="isextends" column="isExtends" />
      <result property="checked" column="checked" />
      <result property="deleteFlag" column="delete_flag" />
      <result property="createBy" column="create_by" />
      <result property="createDate" column="create_date" />
      <result property="updateBy" column="update_by" />
      <result property="updateDate" column="update_date" />
      <result property="remark" column="remark" />
      <result property="otherCode" column="other_code" />
      <result property="otherParentId" column="other_parent_id" />
      <result property="otherType" column="other_type" />
      <result property="foodFirstLetter" column="food_first_letter" />
      <result property="foodFullLetter" column="food_full_letter" />
  </resultMap>

    <sql id="Base_Column_List">
        id,food_name,food_name_en,food_name_other,food_code,parent_id,
        cimonitor_level,isFood,sorting,isExtends,checked,
        delete_flag,create_by,create_date,update_by,update_date,
        remark,other_code,other_parent_id,other_type,food_first_letter,
        food_full_letter
    </sql>

  <!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		where tb1.delete_flag = 0 AND tb1.food_name != '样品种类'
		<if test="obj.keyWords != null and obj.keyWords != ''">
            and (
            tb1.food_name like CONCAT('%', #{obj.keyWords}, '%')
            or tb1.food_name_en like CONCAT('%', #{obj.keyWords}, '%')
            or tb1.food_name_other like CONCAT('%', #{obj.keyWords}, '%')
            )
        </if>
		<if test="obj.baseBean != null">
			<if test="obj.baseBean.parentId != null and obj.baseBean.parentId != ''">
				and tb1.parent_id = #{obj.baseBean.parentId}
			</if>
		</if>
		<if test="obj.baseBean == null">
				and tb1.parent_id =3
		</if>
	</sql>
	<select id="queryFoodId" resultType="java.lang.Integer">
    	SELECT id FROM base_food_type bf1 WHERE bf1.food_code LIKE CONCAT((SELECT food_code FROM base_food_type bf2 WHERE bf2.id =#{foodId}),'%')
    	<if test="foodArr != null and foodArr.size>0">
                <foreach item="item" index="index" collection="foodArr">
                    UNION
					SELECT id FROM base_food_type bf1 WHERE bf1.food_code LIKE CONCAT((SELECT food_code FROM base_food_type bf2 WHERE bf2.id =#{item}),'%')
                </foreach>
        </if>
    </select>
  <select id="selectByParentId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  	SELECT <include refid="Base_Column_List" />
  	FROM base_food_type
  	WHERE delete_flag=0
  	  <if test="parentId == null">
          AND parent_id IS NULL
      </if>
  	  <if test="parentId != null">
          AND parent_id = #{parentId}
      </if>
      <if test="isFood != null" >
          AND isFood = #{isFood}
      </if>
  	ORDER BY food_code ASC, sorting ASC
  </select>
<!--  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >-->
<!--  	select -->
<!--    tb1.*,(SELECT tb2.food_name from base_food_type tb2 where tb2.id=tb1.parent_id ) as parentName-->
<!--    from base_food_type tb1-->
<!--    where tb1.id = #{id}-->
<!--  </select>-->
<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
<!--    update base_food_type set delete_flag=1,update_date=now()-->
<!--	where id =#{id}-->
<!--  </delete>-->
<!--  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.dayuan.bean.data.BaseFoodType" >-->
<!--    insert into base_food_type (food_name, -->
<!--      food_name_en, food_name_other, parent_id, -->
<!--      checked, delete_flag,-->
<!--      create_by, create_date, -->
<!--      update_by, update_date,isFood,sorting,cimonitor_level,isExtends,food_code,remark)-->
<!--    values (#{foodName,jdbcType=VARCHAR}, -->
<!--      #{foodNameEn,jdbcType=VARCHAR}, #{foodNameOther,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, -->
<!--      #{checked,jdbcType=SMALLINT}, #{deleteFlag,jdbcType=SMALLINT}, -->
<!--      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},-->
<!--      #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP},#{isFood,jdbcType=SMALLINT},-->
<!--      #{sorting,jdbcType=SMALLINT},#{cimonitorLevel,jdbcType=SMALLINT},#{isExtends,jdbcType=SMALLINT},#{foodCode,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR})-->
<!--  </insert>-->
<!--  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.dayuan.bean.data.BaseFoodType" >-->
<!--    insert into base_food_type-->
<!--    <trim prefix="(" suffix=")" suffixOverrides="," >-->
<!--      <if test="foodName != null" >-->
<!--        food_name,-->
<!--      </if>-->
<!--      <if test="foodNameEn != null" >-->
<!--        food_name_en,-->
<!--      </if>-->
<!--      <if test="foodNameOther != null" >-->
<!--        food_name_other,-->
<!--      </if>-->
<!--      <if test="parentId != null" >-->
<!--        parent_id,-->
<!--      </if>-->
<!--      <if test="checked != null" >-->
<!--        checked,-->
<!--      </if>-->
<!--      <if test="deleteFlag != null" >-->
<!--        delete_flag,-->
<!--      </if>-->
<!--      <if test="createBy != null" >-->
<!--        create_by,-->
<!--      </if>-->
<!--      <if test="createDate != null" >-->
<!--        create_date,-->
<!--      </if>-->
<!--      <if test="updateBy != null" >-->
<!--        update_by,-->
<!--      </if>-->
<!--      <if test="updateDate != null" >-->
<!--        update_date,-->
<!--      </if>-->
<!--      <if test="isFood !=null">-->
<!--      	isFood,-->
<!--      </if>-->
<!--      <if test="sorting !=null ">-->
<!--      	sorting,-->
<!--      </if>-->
<!--       <if test="cimonitorLevel !='' ">-->
<!--      	cimonitor_level,-->
<!--      </if>-->
<!--      <if test="isExtends !='' ">-->
<!--      	isExtends,-->
<!--      </if>-->
<!--      <if test="foodCode !=null ">-->
<!--      	food_code,-->
<!--      </if>-->
<!--      <if test="remark !=null ">-->
<!--      	remark,-->
<!--      </if>-->
<!--    </trim>-->
<!--    <trim prefix="values (" suffix=")" suffixOverrides="," >-->
<!--      <if test="foodName != null" >-->
<!--        #{foodName,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="foodNameEn != null" >-->
<!--        #{foodNameEn,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="foodNameOther != null" >-->
<!--        #{foodNameOther,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="parentId != null" >-->
<!--        #{parentId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="checked != null" >-->
<!--        #{checked,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="deleteFlag != null" >-->
<!--        #{deleteFlag,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="createBy != null" >-->
<!--        #{createBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="createDate != null" >-->
<!--        #{createDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="updateBy != null" >-->
<!--        #{updateBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="updateDate != null" >-->
<!--        #{updateDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="isFood != null" >-->
<!--        #{isFood,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--       <if test="sorting != null" >-->
<!--        #{sorting,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="cimonitorLevel !='' ">-->
<!--      	#{cimonitorLevel,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="isExtends !='' ">-->
<!--      	#{isExtends,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="foodCode != null" >-->
<!--        #{foodCode,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="remark != null" >-->
<!--        #{remark,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--    </trim>-->
<!--  </insert>-->
<!--  <update id="updateByPrimaryKeySelective" parameterType="com.dayuan.bean.data.BaseFoodType" >-->
<!--    update base_food_type-->
<!--    <set >-->
<!--      <if test="foodName != null" >-->
<!--        food_name = #{foodName,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="foodNameEn != ''" >-->
<!--        food_name_en = #{foodNameEn,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="foodNameOther != ''" >-->
<!--        food_name_other = #{foodNameOther,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--        parent_id = #{parentId,jdbcType=INTEGER},-->
<!--      <if test="checked != null" >-->
<!--        checked = #{checked,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="deleteFlag != null" >-->
<!--        delete_flag = #{deleteFlag,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="isFood != null" >-->
<!--        isFood = #{isFood,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="createBy != null" >-->
<!--        create_by = #{createBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="createDate != null" >-->
<!--        create_date = #{createDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="updateBy != null" >-->
<!--        update_by = #{updateBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="updateDate != null" >-->
<!--        update_date = #{updateDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="sorting != null " >-->
<!--        sorting = #{sorting,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--       <if test="cimonitorLevel !='' ">-->
<!--        cimonitor_level = #{cimonitorLevel,jdbcType=SMALLINT},-->
<!--       </if>-->
<!--       <if test="isExtends !='' ">-->
<!--        isExtends = #{isExtends,jdbcType=SMALLINT},-->
<!--       </if>-->
<!--       <if test="foodCode != null" >-->
<!--        food_code = #{foodCode,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="remark != ''" >-->
<!--        remark = #{remark,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="foodFirstLetter != null" >-->
<!--        food_first_letter = #{foodFirstLetter,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="foodFullLetter != ''" >-->
<!--        food_full_letter = #{foodFullLetter,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--    </set>-->
<!--    where id = #{id}-->
<!--  </update>-->
<!--  <update id="updateByPrimaryKey" parameterType="com.dayuan.bean.data.BaseFoodType" >-->
<!--    update base_food_type-->
<!--    set food_name = #{foodName,jdbcType=VARCHAR},-->
<!--      food_name_en = #{foodNameEn,jdbcType=VARCHAR},-->
<!--      food_name_other = #{foodNameOther,jdbcType=VARCHAR},-->
<!--      parent_id = #{parentId,jdbcType=INTEGER},-->
<!--      checked = #{checked,jdbcType=SMALLINT},-->
<!--      delete_flag = #{deleteFlag,jdbcType=SMALLINT},-->
<!--      create_by = #{createBy,jdbcType=VARCHAR},-->
<!--      create_date = #{createDate,jdbcType=TIMESTAMP},-->
<!--      isFood = #{isFood,jdbcType=SMALLINT},-->
<!--      sorting= #{sorting,jdbcType=SMALLINT},-->
<!--      cimonitor_level = #{cimonitorLevel,jdbcType=SMALLINT},-->
<!--      update_by = #{updateBy,jdbcType=VARCHAR},-->
<!--      update_date = #{updateDate,jdbcType=TIMESTAMP},-->
<!--      isExtends = #{isExtends,jdbcType=SMALLINT},-->
<!--      food_code = #{foodCode,jdbcType=VARCHAR},-->
<!--      remark = #{remark,jdbcType=VARCHAR}-->
<!--    where id = #{id}-->
<!--  </update>-->
  
  
  <select id="queryFoodByPid" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from base_food_type
    where delete_flag = 0 
   <choose>
   	<when test="id ==null">
   		and parent_id is null
   	</when>
   	<otherwise>
   		and parent_id =#{id,jdbcType=VARCHAR}
   	</otherwise>
   </choose> 
    <if test="isShowFood !=true ">
    	and isFood=0
    </if>
    <if test="isContainSelf != null and isContainSelf != ''">
    	or id=#{id,jdbcType=VARCHAR}
    </if>
    order by sorting asc
  </select>
  
   <!-- 分页基础查询 -->
  	<select id="loadDatagrid" resultMap="BaseResultMap" parameterType="Object" >
	    SELECT tb1.*,
	   (SELECT tb2.food_name FROM base_food_type tb2 WHERE tb2.id=tb1.parent_id) AS parentName,ts.realname AS realName
 		FROM base_food_type  tb1
 		LEFT JOIN t_s_user ts  ON tb1.update_by=ts.id
    	<include refid="Example_Where_Clause" />
        ORDER BY
        <if test="obj.keyWords != null and obj.keyWords != ''">
            IF(tb1.food_name = #{obj.keyWords}, 0,
            IF(tb1.food_name LIKE CONCAT(#{obj.keyWords}, '%'), 1, 2)
            ) ASC, tb1.food_name ASC,
        </if>
        tb1.isFood ASC, tb1.sorting ASC, tb1.food_code ASC limit #{rowOffset}, #{pageSize}
  	</select>
	
 	<select id="getRowTotal" resultType="java.lang.Integer" parameterType="Object" >
    	select count(1) as rowTotal
    	from base_food_type tb1
    	<include refid="Example_Where_Clause" />
  	</select>
  	
  	<select id="queryByFoodName"  resultMap="BaseResultMap" parameterType="Object">
		select <include refid="Base_Column_List" /> 
		 from base_food_type 
		 where food_name=#{foodName} and delete_flag=0
        <if test="parentId!=null">
            and parent_id=#{parentId}
        </if>
        ORDER BY isfood DESC
        LIMIT 0, 1
	</select>
	
	<select id="queryCountByPid" parameterType="Object" resultType="java.lang.Integer">
		select count(1)
		 from base_food_type 
		 where parent_id=#{parentId} and delete_flag=0
	</select>
	
	<!-- 根据最后更新时间查询信息 -->
	<select id="queryByUpdateDate" resultMap="BaseResultMap" parameterType="Object" >
	   select <include refid="Base_Column_List" />
	   from base_food_type where update_date>#{Object} ORDER BY sorting asc
  	</select>
  	<update id="updateByFoodPid">
  		 update base_food_type set  parent_id = #{parentId},update_date=now()
		where id in
	   <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
			#{id}
	   </foreach>
  	</update>
  	
  	<select id="queryParentFoodById"  resultType="java.lang.String" parameterType="Object">
		select getFoodParentList(#{id})
	</select>
	
  	<select id="queryAll"  resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from base_food_type where delete_flag = 0 and checked=1
	</select>
	<!-- 2018-7-2 微信端获取样品数据  只加载食品名称  hu-->
	<select id="queryAllFood"  resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from base_food_type where delete_flag = 0  and  isFood=1  and checked=1
	</select>
	
	<!-- /**
	 * 查询所有子种类IDS
	 * @param id
	 * @return
	 * @author LuoYX
	 * @date 2018年4月19日
	 */ -->
	 <select id="querySubTypes" resultType="java.lang.String" parameterType="java.lang.Integer">
	 	SELECT getChildLst(#{id})
	 </select>
	<select id="queryByFName" parameterType="Object" resultMap="BaseResultMap">
		SELECT
            ft1.id, ft1.food_name, ft1.food_name_en, ft1.food_name_other, ft1.parent_id, ft1.checked, ft1.delete_flag,
            ft1.create_by, ft1.create_date, ft1.update_by, ft1.update_date, ft1.isFood, ft1.sorting, ft1.cimonitor_level,
		    ft1.isExtends, ft1.food_code, ft1.remark, ft1.food_first_letter, ft1.food_full_letter,
            ft2.food_name parentName
		FROM
		    (
		        SELECT tb1.* FROM base_food_type tb1 WHERE tb1.delete_flag = 0 AND tb1.food_name = #{fName}
		        UNION
                SELECT tb2.* FROM base_food_type tb2 WHERE tb2.delete_flag = 0 AND tb2.food_name LIKE CONCAT(#{fName},'%')
		        UNION
                SELECT tb3.* FROM base_food_type tb3 WHERE tb3.delete_flag = 0 AND tb3.food_name LIKE CONCAT('%',#{fName},'%')
                UNION
                SELECT tb4.* FROM base_food_type tb4 WHERE tb4.delete_flag = 0 AND tb4.food_name_other LIKE CONCAT('%',#{fName},'%')
		    ) ft1
		    LEFT JOIN base_food_type ft2 ON ft1.parent_id = ft2.id
		WHERE 1=1
        <if test="isFood!=null">
            AND ft1.isFood=#{isFood}
        </if>
	</select>
	<select id="queryFoodTypeMap" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM base_food_type
		WHERE delete_flag=0 and 
		id IN (SELECT id FROM base_food_type bf1 
				WHERE bf1.food_code LIKE CONCAT((SELECT food_code FROM base_food_type bf2 WHERE bf2.id=#{id}),'____'))
        AND isFood=0
	</select>
	<select id="queryFoodMap" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM base_food_type
		WHERE delete_flag=0
            AND food_code = ( SELECT food_code FROM base_food_type bf2 WHERE bf2.id = #{id} )
        AND isFood=1
	</select>
	
	<select id="queryAllMap" resultType="java.util.Map">
		SELECT 
		t1.id,t1.parent_id,t1.food_name,t2.food_name type_name,COUNT(1) count
		FROM base_food_type t1
		INNER JOIN base_food_type t2 ON t1.parent_id=t2.id
		WHERE t1.parent_id IS NOT NULL AND t1.delete_flag=0 AND t1.checked=1
		GROUP BY t1.food_name
	</select>
	<select id="queryByFoodCode" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from base_food_type where food_code like CONCAT(#{foodCode},'%')
	</select>
	
	<select id="getLastFoodCode" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT MAX(food_code) FROM base_food_type WHERE food_code like CONCAT(#{foodCode},'____')
	</select>
	
	<select id="querySonFoods" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT id FROM base_food_type bf1 
		WHERE bf1.delete_flag=0 AND bf1.food_code LIKE CONCAT((SELECT food_code FROM base_food_type bf2 WHERE bf2.id=#{id} AND bf2.delete_flag=0),'%')
	</select>
    <select id="queryAllSonFoods" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT id FROM base_food_type bf1
		WHERE bf1.food_code LIKE CONCAT((SELECT food_code FROM base_food_type bf2 WHERE bf2.id=#{id} AND bf2.delete_flag=0),'%')
	</select>
	<!-- 根据最后更新时间查询样品名称信息 xiaoyl 2019-07-25-->
	<select id="queryFoodByLastUpdateTime" resultMap="BaseResultMap" parameterType="java.lang.String" >
	   select <include refid="Base_Column_List" />
	   from base_food_type where delete_flag = 0  and  isFood=1  and checked=1 
	   <if test="lastUpdateTime!=null">
	   and update_date&gt;=#{lastUpdateTime}
	   </if>
  	</select>

    <select id="queryFoodByItemId" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select <include refid="Base_Column_List" />
          from base_food_type
        where delete_flag=0 and isFood=1 and checked=1
          and id in (select food_id from base_food_item where delete_flag=0 and checked=1 and item_id=#{itemId})
    </select>
    
    <select id="querySecondFoodType"  resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> from base_food_type where delete_flag = 0 and LENGTH(food_code)=8
		ORDER BY food_code asc limit 0,1
	</select>

    <select id="queryMaxSorting" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT IF(MAX(sorting) IS NULL,0,MAX(sorting)) FROM base_food_type WHERE delete_flag = 0 and parent_id = #{parentId}
    </select>
    <!--add by xiaoyl 2022-07-28 根据样品ID查询该类下是否有样品种类，用于仪器端控制是否启用新增样品按钮-->
    <select id="queryFoodTypeByID" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
        SELECT count(1)  FROM base_food_type
        WHERE delete_flag=0 AND parent_id = #{id}
            AND isFood = 0
    </select>

	<select id="queryFoodById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
  	select
    tb1.*,(SELECT tb2.food_name from base_food_type tb2 where tb2.id=tb1.parent_id ) as parentName
    from base_food_type tb1
    where tb1.id = #{id}
  </select>
</mapper>