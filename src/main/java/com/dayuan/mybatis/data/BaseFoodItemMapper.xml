<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dayuan.mapper.data.BaseFoodItemMapper" >

    <resultMap id="BaseResultMap" type="com.dayuan.bean.data.BaseFoodItem" >
        <id property="id" column="id" />
        <result property="foodId" column="food_id" />
        <result property="itemId" column="item_id" />
        <result property="detectSign" column="detect_sign" />
        <result property="detectValue" column="detect_value" />
        <result property="detectValueUnit" column="detect_value_unit" />
        <result property="remark" column="remark" />
        <result property="useDefault" column="use_default" />
        <result property="checked" column="checked" />
        <result property="deleteFlag" column="delete_flag" />
        <result property="createBy" column="create_by" />
        <result property="createDate" column="create_date" />
        <result property="updateBy" column="update_by" />
        <result property="updateDate" column="update_date" />

        <result column="standardName" property="standardName" jdbcType="VARCHAR"/>
        <result column="detectName" property="detectName" jdbcType="VARCHAR"/>
        <result column="detectStandardValue" property="detectStandardValue" jdbcType="VARCHAR" />
        <result column="detectSignStr" property="detectSignStr" jdbcType="VARCHAR" />
        <result column="detectValueStr" property="detectValueStr" jdbcType="VARCHAR" />
        <result column="detectValueUnitStr" property="detectValueUnitStr" jdbcType="VARCHAR" />
        <result column="price" property="price" jdbcType="DOUBLE" />
        <result column="discount" property="discount" jdbcType="DOUBLE" />
        <result column="offer_id" property="offerId" jdbcType="INTEGER" />
    </resultMap>

  <sql id="Base_Column_List" >
      id,food_id,item_id,detect_sign,detect_value,detect_value_unit,
        remark,use_default,checked,delete_flag,create_by,
        create_date,update_by,update_date
  </sql>

  <sql id="Base_Column_Lists" >
    food_id, item_id, detect_sign, detect_value, detect_value_unit, remark, use_default,
    checked, create_by, create_date,update_date
  </sql>
  	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		where tb1.delete_flag = 0 and tb2.delete_flag=0
		<trim suffixOverrides=",">
            <if test="obj.baseBean !=null">
                <if test="obj.baseBean.foodId != null and obj.baseBean.foodId !='' ">
                    and tb1.food_id=#{obj.baseBean.foodId}
                </if>
                <if test="obj.baseBean.detectName != null and obj.baseBean.detectName !='' ">
                    and tb2.detect_item_name like CONCAT('%', #{obj.baseBean.detectName}, '%')
                </if>
            </if>
		</trim>
        <if test="obj.keyWords != null and obj.keyWords !='' ">
            and tb2.detect_item_name like CONCAT('%', #{obj.keyWords}, '%')
        </if>

	</sql>
	<insert id="insertBean"  parameterType="java.util.List">
		insert into base_food_item(<include refid="Base_Column_Lists" />) values
		<foreach collection="list" item="item" index="index" separator=",">
				(#{item.foodId}, #{item.itemId},#{item.detectSign},#{item.detectValue}
	            ,#{item.detectValueUnit},#{item.remark},#{item.useDefault},#{item.checked}
	            ,#{item.createBy},NOW(),NOW())
        </foreach>
	</insert>
	<select id="queryListByFoodId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT bfi.id, bfi.food_id, bfi.item_id, bfi.detect_sign, bfi.detect_value, bfi.detect_value_unit, bfi.remark, bfi.use_default,
          bfi.checked, bfi.delete_flag, bfi.create_by, bfi.create_date, bfi.update_by, bfi.update_date,
          bdi.detect_item_name detectName,bdi.price price,bdi.discount,bdi.offer_id
		  from base_food_item bfi inner join base_detect_item bdi on bdi.id = bfi.item_id
		WHERE bfi.delete_flag=0 and bfi.checked=1 and bfi.food_id=#{foodId}
		  and bdi.delete_flag=0 and bdi.checked=1
	</select>
	<select id="selectByFoodId" resultType="java.lang.Integer" parameterType="Object">
		select count(1) as rowTotal from base_food_item  where delete_flag=0 and food_id=#{foodId} and item_id=#{itemId}
	</select>
	<select id="queryList" resultMap="BaseResultMap" parameterType="Object">
          select id as food_id,#{baseFoodItem.itemId} as item_id,#{baseFoodItem.detectSign} as detect_sign,#{baseFoodItem.detectValue} as detect_value,
          #{baseFoodItem.detectValueUnit} as detect_value_unit,#{baseFoodItem.remark} as remark,#{baseFoodItem.useDefault} as use_default,#{baseFoodItem.checked} as checked,
          #{baseFoodItem.createBy} as create_by
          from base_food_type
          where delete_flag=0 and id in
          <foreach collection="ids" item="ids" index="index"
            open="(" close=")" separator=",">
            #{ids}
          </foreach>
   </select>
    <select id="queryByFoodItem" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/> FROM base_food_item WHERE delete_flag=0 AND food_id = #{foodId} AND item_id = #{itemId} LIMIT 0,1
    </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
   select  tb1.id,tb1.use_default,tb2.detect_item_name as detectName,tb1.item_id as itemId,
	if(tb1.use_default=1,(select t1.detect_sign from base_food_item t1 where t1.id=tb1.id),
	(select t2.detect_sign from base_detect_item t2 where t2.id=tb1.item_id )) as  detect_sign,
	if(tb1.use_default=1,(select t1.detect_value from base_food_item t1 where t1.id=tb1.id),
	(select t2.detect_value from base_detect_item t2 where t2.id=tb1.item_id )) as  detect_value,
	if(tb1.use_default=1,(select t1.detect_value_unit from base_food_item t1 where t1.id=tb1.id),
	(select t2.detect_value_unit from base_detect_item t2 where t2.id=tb1.item_id )) as  detect_value_unit
	from base_food_item tb1
	INNER JOIN base_detect_item tb2 on tb1.item_id=tb2.id
    where tb1.id = #{id,jdbcType=VARCHAR}
  </select>
<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >-->
<!--    update base_food_item set delete_flag=1,update_date=now()-->
<!--    where id in-->
<!--   	<foreach collection="array" item="ids" index="index"-->
<!--           open="(" close=")" separator=",">-->
<!--           #{ids}-->
<!--     </foreach>-->
<!--  </delete>-->
<!--  <insert id="insert" parameterType="com.dayuan.bean.data.BaseFoodItem" >-->
<!--    insert into base_food_item (id, food_id, item_id,-->
<!--      detect_sign, detect_value, detect_value_unit,-->
<!--      remark, use_default, checked,-->
<!--      delete_flag, create_by, create_date,-->
<!--      update_by, update_date)-->
<!--    values (#{id,jdbcType=VARCHAR}, #{foodId,jdbcType=INTEGER}, #{itemId,jdbcType=VARCHAR},-->
<!--      #{detectSign,jdbcType=VARCHAR}, #{detectValue,jdbcType=VARCHAR}, #{detectValueUnit,jdbcType=VARCHAR},-->
<!--      #{remark,jdbcType=VARCHAR}, #{useDefault,jdbcType=SMALLINT}, #{checked,jdbcType=SMALLINT},-->
<!--      #{deleteFlag,jdbcType=SMALLINT}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},-->
<!--      #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP})-->
<!--  </insert>-->
<!--  <insert id="insertSelective" parameterType="com.dayuan.bean.data.BaseFoodItem" >-->
<!--    insert into base_food_item-->
<!--    <trim prefix="(" suffix=")" suffixOverrides="," >-->
<!--      &lt;!&ndash; <if test="id != null" >-->
<!--        id,-->
<!--      </if> &ndash;&gt;-->
<!--      <if test="foodId != null" >-->
<!--        food_id,-->
<!--      </if>-->
<!--      <if test="itemId != null" >-->
<!--        item_id,-->
<!--      </if>-->
<!--      <if test="detectSign != null" >-->
<!--        detect_sign,-->
<!--      </if>-->
<!--      <if test="detectValue != null" >-->
<!--        detect_value,-->
<!--      </if>-->
<!--      <if test="detectValueUnit != null" >-->
<!--        detect_value_unit,-->
<!--      </if>-->
<!--      <if test="remark != null" >-->
<!--        remark,-->
<!--      </if>-->
<!--      <if test="useDefault != null" >-->
<!--        use_default,-->
<!--      </if>-->
<!--      <if test="checked != null" >-->
<!--        checked,-->
<!--      </if>-->
<!--      <if test="deleteFlag != null" >-->
<!--        delete_flag,-->
<!--      </if>-->
<!--      <if test="createBy != null" >-->
<!--        create_by,-->
<!--      </if>-->
<!--      <if test="createDate != null" >-->
<!--        create_date,-->
<!--      </if>-->
<!--      <if test="updateBy != null" >-->
<!--        update_by,-->
<!--      </if>-->
<!--      <if test="updateDate != null" >-->
<!--        update_date,-->
<!--      </if>-->
<!--    </trim>-->
<!--    <trim prefix="values (" suffix=")" suffixOverrides="," >-->
<!--      &lt;!&ndash; <if test="id != null" >-->
<!--        #{id,jdbcType=VARCHAR},-->
<!--      </if> &ndash;&gt;-->
<!--      <if test="foodId != null" >-->
<!--        #{foodId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="itemId != null" >-->
<!--        #{itemId,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="detectSign != null" >-->
<!--        #{detectSign,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="detectValue != null" >-->
<!--        #{detectValue,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="detectValueUnit != null" >-->
<!--        #{detectValueUnit,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="remark != null" >-->
<!--        #{remark,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="useDefault != null" >-->
<!--        #{useDefault,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="checked != null" >-->
<!--        #{checked,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="deleteFlag != null" >-->
<!--        #{deleteFlag,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="createBy != null" >-->
<!--        #{createBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="createDate != null" >-->
<!--        #{createDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="updateBy != null" >-->
<!--        #{updateBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="updateDate != null" >-->
<!--        #{updateDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--    </trim>-->
<!--  </insert>-->
<!--  <update id="updateByPrimaryKeySelective" parameterType="com.dayuan.bean.data.BaseFoodItem" >-->
<!--    update base_food_item-->
<!--    <set >-->
<!--      <if test="foodId != null" >-->
<!--        food_id = #{foodId,jdbcType=INTEGER},-->
<!--      </if>-->
<!--      <if test="itemId != null" >-->
<!--        item_id = #{itemId,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="detectSign != null" >-->
<!--        detect_sign = #{detectSign,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="detectValue != null" >-->
<!--        detect_value = #{detectValue,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="detectValueUnit != null" >-->
<!--        detect_value_unit = #{detectValueUnit,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="remark != null" >-->
<!--        remark = #{remark,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="useDefault != null" >-->
<!--        use_default = #{useDefault,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="checked != null" >-->
<!--        checked = #{checked,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="deleteFlag != null" >-->
<!--        delete_flag = #{deleteFlag,jdbcType=SMALLINT},-->
<!--      </if>-->
<!--      <if test="createBy != null" >-->
<!--        create_by = #{createBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="createDate != null" >-->
<!--        create_date = #{createDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--      <if test="updateBy != null" >-->
<!--        update_by = #{updateBy,jdbcType=VARCHAR},-->
<!--      </if>-->
<!--      <if test="updateDate != null" >-->
<!--        update_date = #{updateDate,jdbcType=TIMESTAMP},-->
<!--      </if>-->
<!--    </set>-->
<!--    where id = #{id,jdbcType=VARCHAR}-->
<!--  </update>-->
<!--  <update id="updateByPrimaryKey" parameterType="com.dayuan.bean.data.BaseFoodItem" >-->
<!--    update base_food_item-->
<!--    set food_id = #{foodId,jdbcType=INTEGER},-->
<!--      item_id = #{itemId,jdbcType=VARCHAR},-->
<!--      detect_sign = #{detectSign,jdbcType=VARCHAR},-->
<!--      detect_value = #{detectValue,jdbcType=VARCHAR},-->
<!--      detect_value_unit = #{detectValueUnit,jdbcType=VARCHAR},-->
<!--      remark = #{remark,jdbcType=VARCHAR},-->
<!--      use_default = #{useDefault,jdbcType=SMALLINT},-->
<!--      checked = #{checked,jdbcType=SMALLINT},-->
<!--      delete_flag = #{deleteFlag,jdbcType=SMALLINT},-->
<!--      create_by = #{createBy,jdbcType=VARCHAR},-->
<!--      create_date = #{createDate,jdbcType=TIMESTAMP},-->
<!--      update_by = #{updateBy,jdbcType=VARCHAR},-->
<!--      update_date = #{updateDate,jdbcType=TIMESTAMP}-->
<!--    where id = #{id,jdbcType=VARCHAR}-->
<!--  </update>-->
	<!-- 分页基础查询 -->
	<select id="loadDatagrid" resultMap="BaseResultMap" parameterType="Object">
		select tb1.*,
		tb2.detect_item_name as detectName,
		IF(tb1.use_default=0,(SELECT concat(t.detect_sign,t.detect_value,t.detect_value_unit) FROM base_detect_item t WHERE t.id = tb1.item_id ),
		(SELECT concat(detect_sign,detect_value,detect_value_unit) FROM base_food_item tt where tt.id=tb1.id))  AS detectStandardValue,
		tb3.std_code as standardName  from base_food_item tb1
		RIGHT JOIN base_detect_item tb2 on tb1.item_id=tb2.id
		LEFT JOIN base_standard tb3 on tb2.standard_id =tb3.id
		<include refid="Example_Where_Clause" />
		order by tb1.update_date ${order} limit #{rowOffset}, #{pageSize}
	</select>

	<select id="getRowTotal" resultType="java.lang.Integer" parameterType="Object">
		select count(*) as  rowTotal from base_food_item tb1
		RIGHT JOIN base_detect_item tb2 on tb1.item_id=tb2.id
		LEFT JOIN base_standard tb3 on tb2.standard_id =tb3.id
		<include refid="Example_Where_Clause" />
	</select>
	<!-- 根据样品ID删除关联检测项目 -->
	<delete id="deteteByFoodId" parameterType="java.lang.Integer" >
	    update base_food_item set delete_flag=1,update_date=now()
	    where food_id =#{id}
  </delete>

  	<select id="queryByList" resultMap="BaseResultMap" parameterType="Object">
		SELECT tb1.item_id as item_id,tb2.detect_item_name as detectName,
		if(tb1.use_default=1,(select t1.detect_sign from base_food_item t1 where t1.id=tb1.id),
		(select t2.detect_sign from base_detect_item t2 where t2.id=tb1.item_id )) as  detect_sign,
		if(tb1.use_default=1,(select t1.detect_value from base_food_item t1 where t1.id=tb1.id),
		(select t2.detect_value from base_detect_item t2 where t2.id=tb1.item_id )) as  detect_value,
		if(tb1.use_default=1,(select t1.detect_value_unit from base_food_item t1 where t1.id=tb1.id),
		(select t2.detect_value_unit from base_detect_item t2 where t2.id=tb1.item_id )) as  detect_value_unit
		 from base_food_item tb1
		LEFT JOIN base_detect_item tb2 on tb1.item_id =tb2.id
		where tb1.food_id in
		<foreach collection="array" item="ids" index="index"
		           open="(" close=")" separator=",">
	           #{ids}
	     </foreach>
	     and tb1.delete_flag=0
		GROUP BY tb1.item_id
	</select>
	<!-- 删除样品种类的检测项目时同时删除子类的配置 -->
	 <delete id="deleteBatch" parameterType="java.lang.Object" >
    update base_food_item set delete_flag=1,update_date=now()
    where 1=1
    <if test="itemId != null">
        and item_id=#{itemId}
    </if>
    and food_id in
   	<foreach collection="idList" item="ids" index="index"
           open="(" close=")" separator=",">
           #{ids}
     </foreach>
  </delete>
	
</mapper>