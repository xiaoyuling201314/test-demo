<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dayuan.mapper.data.BaseDetectItemMapper">
	<resultMap id="BaseResultMap" type="com.dayuan.bean.data.BaseDetectItem">
		<id property="id" column="id" />
		<result property="detectItemName" column="detect_item_name" />
		<result property="detectItemTypeid" column="detect_item_typeid" />
		<result property="standardId" column="standard_id" />
		<result property="detectSign" column="detect_sign" />
		<result property="detectValue" column="detect_value" />
		<result property="detectValueUnit" column="detect_value_unit" />
		<result property="checked" column="checked" />
		<result property="cimonitorLevel" column="cimonitor_level" />
		<result property="remark" column="remark" />
		<result property="deleteFlag" column="delete_flag" />
		<result property="createBy" column="create_by" />
		<result property="createDate" column="create_date" />
		<result property="updateBy" column="update_by" />
		<result property="updateDate" column="update_date" />
		<result property="otherCode" column="other_code" />
		<result property="otherType" column="other_type" />
		<result property="price" column="price" />
		<result property="offerId" column="offer_id" />
		<result property="discount" column="discount" />
	</resultMap>

	<resultMap id="ResultMapList" type="com.dayuan.bean.data.BaseDetectItem" extends="BaseResultMap">
		<result column="item_name" property="detectItemTypeName" jdbcType="VARCHAR" />
		<result column="std_code" property="stdCode" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id,detect_item_name,detect_item_typeid,standard_id,detect_sign,detect_value,
        detect_value_unit,checked,cimonitor_level,remark,delete_flag,
        create_by,create_date,update_by,update_date,other_code,
        other_type,price,offer_id,discount
	</sql>

	<!-- 查询条件 -->
	<sql id="Example_Where_Clause">
		where item.delete_flag = 0
		<trim suffixOverrides=",">
			<if test="obj.keyWords != null and obj.keyWords !='' ">
				and item.detect_item_name like CONCAT('%', #{obj.keyWords}, '%')
			</if>
			<if test="obj.baseDetectItem != null">
				<if test="obj.baseDetectItem.detectItemName != null and obj.baseDetectItem.detectItemName != ''">
					and item.detect_item_name like CONCAT('%', #{obj.baseDetectItem.detectItemName}, '%')
				</if>
				<if test="obj.baseDetectItem.checked != null">
					and item.checked = #{obj.baseDetectItem.checked}
				</if>
			</if>
			<if test="obj.foodId  != null">
				and item.id not in (select item_id from base_food_item where food_id=#{obj.foodId} and
				delete_flag=0)
				and item.checked=1
			</if>
		</trim>
	</sql>

<!--	-->
<!--	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">-->
<!--		update base_detect_item set delete_flag=1,update_date=now()-->
<!--		where id in-->
<!--		<foreach collection="array" item="ids" index="index" open="(" close=")" separator=",">-->
<!--			#{ids}-->
<!--		</foreach>-->
<!--	</delete>-->

<!--	<insert id="insert" parameterType="com.dayuan.bean.data.BaseDetectItem">-->
<!--		insert into base_detect_item (id, detect_item_name, detect_item_vulgo,-->
<!--		detect_item_typeid, standard_id, detect_sign,-->
<!--		detect_value, detect_value_unit, checked,-->
<!--		cimonitor_level, remark,-->
<!--		delete_flag, create_by,-->
<!--		create_date, update_by,-->
<!--		update_date, other_code, price)-->
<!--		values (#{id,jdbcType=VARCHAR}, #{detectItemName,jdbcType=VARCHAR}, #{detectItemVulgo,jdbcType=VARCHAR},-->
<!--		#{detectItemTypeid,jdbcType=VARCHAR}, #{standardId,jdbcType=VARCHAR},-->
<!--		#{detectSign,jdbcType=VARCHAR},-->
<!--		#{detectValue,jdbcType=VARCHAR}, #{detectValueUnit,jdbcType=VARCHAR}, #{checked,jdbcType=SMALLINT},-->
<!--		#{cimonitorLevel,jdbcType=SMALLINT}, #{remark,jdbcType=VARCHAR},-->
<!--		#{deleteFlag,jdbcType=SMALLINT}, #{createBy,jdbcType=VARCHAR},-->
<!--		#{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR},-->
<!--		#{updateDate,jdbcType=TIMESTAMP}, #{otherCode,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE})-->
<!--	</insert>-->
<!--	<insert id="insertSelective" parameterType="com.dayuan.bean.data.BaseDetectItem">-->
<!--		insert into base_detect_item-->
<!--		<trim prefix="(" suffix=")" suffixOverrides=",">-->
<!--			<if test="id != null">-->
<!--				id,-->
<!--			</if>-->
<!--			<if test="detectItemName != null">-->
<!--				detect_item_name,-->
<!--			</if>-->
<!--			<if test="detectItemVulgo != null">-->
<!--				detect_item_vulgo,-->
<!--			</if>-->
<!--			<if test="detectItemTypeid != null">-->
<!--				detect_item_typeid,-->
<!--			</if>-->
<!--			<if test="standardId != null">-->
<!--				standard_id,-->
<!--			</if>-->
<!--			<if test="detectSign != null">-->
<!--				detect_sign,-->
<!--			</if>-->
<!--			<if test="detectValue != null">-->
<!--				detect_value,-->
<!--			</if>-->
<!--			<if test="detectValueUnit != null">-->
<!--				detect_value_unit,-->
<!--			</if>-->
<!--			<if test="checked != null">-->
<!--				checked,-->
<!--			</if>-->
<!--			<if test="cimonitorLevel != null">-->
<!--				cimonitor_level,-->
<!--			</if>-->
<!--			<if test="remark != null">-->
<!--				remark,-->
<!--			</if>-->
<!--			<if test="deleteFlag != null">-->
<!--				delete_flag,-->
<!--			</if>-->
<!--			<if test="createBy != null">-->
<!--				create_by,-->
<!--			</if>-->
<!--			<if test="createDate != null">-->
<!--				create_date,-->
<!--			</if>-->
<!--			<if test="updateBy != null">-->
<!--				update_by,-->
<!--			</if>-->
<!--			<if test="updateDate != null">-->
<!--				update_date,-->
<!--			</if>-->
<!--			<if test="otherCode != null">-->
<!--				other_code,-->
<!--			</if>-->
<!--			 <if test="price != null">-->
<!--		        price,-->
<!--		      </if>-->
<!--		</trim>-->
<!--		<trim prefix="values (" suffix=")" suffixOverrides=",">-->
<!--			<if test="id != null">-->
<!--				#{id,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="detectItemName != null">-->
<!--				#{detectItemName,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="detectItemVulgo != null">-->
<!--				#{detectItemVulgo,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="detectItemTypeid != null">-->
<!--				#{detectItemTypeid,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="standardId != null">-->
<!--				#{standardId,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="detectSign != null">-->
<!--				#{detectSign,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="detectValue != null">-->
<!--				#{detectValue,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="detectValueUnit != null">-->
<!--				#{detectValueUnit,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="checked != null">-->
<!--				#{checked,jdbcType=SMALLINT},-->
<!--			</if>-->
<!--			<if test="cimonitorLevel != null">-->
<!--				#{cimonitorLevel,jdbcType=SMALLINT},-->
<!--			</if>-->
<!--			<if test="remark != null">-->
<!--				#{remark,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="deleteFlag != null">-->
<!--				#{deleteFlag,jdbcType=SMALLINT},-->
<!--			</if>-->
<!--			<if test="createBy != null">-->
<!--				#{createBy,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="createDate != null">-->
<!--				#{createDate,jdbcType=TIMESTAMP},-->
<!--			</if>-->
<!--			<if test="updateBy != null">-->
<!--				#{updateBy,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="updateDate != null">-->
<!--				#{updateDate,jdbcType=TIMESTAMP},-->
<!--			</if>-->
<!--			<if test="otherCode != null">-->
<!--				#{otherCode,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="price != null">-->
<!--	        	#{price,jdbcType=DOUBLE},-->
<!--	      </if>-->
<!--		</trim>-->
<!--	</insert>-->
<!--	<update id="updateByPrimaryKeySelective" parameterType="com.dayuan.bean.data.BaseDetectItem">-->
<!--		update base_detect_item-->
<!--		<set>-->
<!--			<if test="detectItemName != null">-->
<!--				detect_item_name = #{detectItemName,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="detectItemVulgo != null">-->
<!--				detect_item_vulgo = #{detectItemVulgo,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="detectItemTypeid != null">-->
<!--				detect_item_typeid = #{detectItemTypeid,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="standardId != null">-->
<!--				standard_id = #{standardId,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="detectSign != null">-->
<!--				detect_sign = #{detectSign,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="detectValue != null">-->
<!--				detect_value = #{detectValue,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="detectValueUnit != null">-->
<!--				detect_value_unit = #{detectValueUnit,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="checked != null">-->
<!--				checked = #{checked,jdbcType=SMALLINT},-->
<!--			</if>-->
<!--			<if test="cimonitorLevel != null">-->
<!--				cimonitor_level = #{cimonitorLevel,jdbcType=SMALLINT},-->
<!--			</if>-->
<!--			<if test="remark != null">-->
<!--				remark = #{remark,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="deleteFlag != null">-->
<!--				delete_flag = #{deleteFlag,jdbcType=SMALLINT},-->
<!--			</if>-->
<!--			<if test="createBy != null">-->
<!--				create_by = #{createBy,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="createDate != null">-->
<!--				create_date = #{createDate,jdbcType=TIMESTAMP},-->
<!--			</if>-->
<!--			<if test="updateBy != null">-->
<!--				update_by = #{updateBy,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="updateDate != null">-->
<!--				update_date = #{updateDate,jdbcType=TIMESTAMP},-->
<!--			</if>-->
<!--			<if test="otherCode != null">-->
<!--				other_code = #{otherCode,jdbcType=VARCHAR},-->
<!--			</if>-->
<!--			<if test="price != null">-->
<!--		        price = #{price,jdbcType=DOUBLE},-->
<!--	      </if>-->
<!--	      <if test="discount != null">-->
<!--		        discount = #{discount,jdbcType=DOUBLE},-->
<!--	      </if>-->
<!--	      <if test="offerId != null">-->
<!--		        offer_id = #{offerId,jdbcType=INTEGER},-->
<!--	      </if>-->
<!--		</set>-->
<!--		where id = #{id,jdbcType=VARCHAR}-->
<!--	</update>-->
<!--	<update id="updateByPrimaryKey" parameterType="com.dayuan.bean.data.BaseDetectItem">-->
<!--		update base_detect_item-->
<!--		set detect_item_name = #{detectItemName,jdbcType=VARCHAR},-->
<!--		detect_item_vulgo = #{detectItemVulgo,jdbcType=VARCHAR},-->
<!--		detect_item_typeid = #{detectItemTypeid,jdbcType=VARCHAR},-->
<!--		standard_id = #{standardId,jdbcType=VARCHAR},-->
<!--		detect_sign = #{detectSign,jdbcType=VARCHAR},-->
<!--		detect_value = #{detectValue,jdbcType=VARCHAR},-->
<!--		detect_value_unit = #{detectValueUnit,jdbcType=VARCHAR},-->
<!--		checked = #{checked,jdbcType=SMALLINT},-->
<!--		cimonitor_level = #{cimonitorLevel,jdbcType=SMALLINT},-->
<!--		remark = #{remark,jdbcType=VARCHAR},-->
<!--		delete_flag = #{deleteFlag,jdbcType=SMALLINT},-->
<!--		create_by = #{createBy,jdbcType=VARCHAR},-->
<!--		create_date = #{createDate,jdbcType=TIMESTAMP},-->
<!--		update_by = #{updateBy,jdbcType=VARCHAR},-->
<!--		update_date = #{updateDate,jdbcType=TIMESTAMP},-->
<!--		other_code = #{otherCode,jdbcType=VARCHAR},-->
<!--	    price = #{price,jdbcType=DOUBLE},-->
<!--	    discount = #{discount,jdbcType=DOUBLE},-->
<!--	     offer_id = #{offerId,jdbcType=INTEGER}-->
<!--		where id = #{id,jdbcType=VARCHAR}-->
<!--	</update>-->

	<!-- 分页基础查询 -->
	<select id="loadDatagrid" resultMap="ResultMapList" parameterType="Object">
		select item.*,s.std_code,t.item_name
		from base_detect_item item
		LEFT JOIN base_standard s on item.standard_id=s.id
		LEFT JOIN base_item_type t
		on item.detect_item_typeid=t.id
		<include refid="Example_Where_Clause" />
		order by t.sorting ${order},item.detect_item_name ${order} limit #{rowOffset}, #{pageSize}
	</select>

	<select id="getRowTotal" resultType="java.lang.Integer" parameterType="Object">
		select count(1) as rowTotal
		from base_detect_item item
		<include refid="Example_Where_Clause" />
	</select>
	<!-- 查询最后一个系统编号 queryLastCode -->
	<select id="queryLastCode" resultType="java.lang.String" parameterType="java.lang.String">
		select max(detect_item_code) from base_detect_item
	</select>
	<!-- 根据检测项目名称和检测标准查询数据 queryByDetectNameAndStandard -->
	<select id="queryByDetectNameAndStandard" resultMap="BaseResultMap" parameterType="com.dayuan.bean.data.BaseDetectItem">
		select
		<include refid="Base_Column_List" />
		from base_detect_item
		where delete_flag = 0 and checked=1
		and detect_item_name=#{detectItemName} and standard_id =#{standardId}
	</select>
	<!-- 根据检测项目类型查询数据 queryByTypeid -->
	<select id="queryByTypeid" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from base_detect_item
		where delete_flag = 0 and checked=1
		and detect_item_typeid=#{typeid}
	</select>
	<!-- 根据最后更新时间查询信息 -->
	<select id="queryByUpdateDate" resultMap="ResultMapList" parameterType="Object">
		select tb1.*,tb2.item_name from base_detect_item tb1
		LEFT JOIN base_item_type tb2 on tb1.detect_item_typeid=tb2.id
		where tb1.update_date>#{Object} or tb2.update_date>#{Object}
	</select>
	<select id="queryByFoodId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select DISTINCT d.id,d.detect_item_name,d.price,
			d.discount, d.offer_id
		from base_detect_item d
		INNER JOIN base_food_item i on d.id=i.item_id
		INNER JOIN base_food_type t on i.food_id=t.id
		WHERE
		d.delete_flag=0 and i.delete_flag=0 and t.delete_flag=0 and d.checked=1
		<if test="foodId != null">
			and t.id in
			<foreach collection="foodId" item="id" index="index" open="(" close=")" separator=",">
				#{id}
			</foreach>
		</if>
		ORDER BY i.update_date desc
	</select>

	<select id="queryByFoodId2" resultMap="BaseResultMap" parameterType="Object">
		SELECT d.id, d.detect_item_name, d.price, d.discount, d.offer_id
		FROM
			(
				SELECT DISTINCT item_id
				FROM base_food_item
				WHERE delete_flag=0
				  <if test="foodId != null">
					  AND food_id = #{foodId}
				  </if>
				  <if test="foodCode != null and foodCode != ''">
					  AND food_id IN (SELECT id FROM base_food_type WHERE delete_flag=0 AND food_code LIKE CONCAT(#{foodCode},'%'))
				  </if>
			) i
			INNER JOIN base_detect_item d ON d.id = i.item_id
		WHERE
			d.delete_flag=0 AND d.checked=1
	</select>

	<select id="queryByItemType" resultMap="BaseResultMap" parameterType="java.lang.String">
		select DISTINCT d.id,d.detect_item_name from base_detect_item d
		LEFT JOIN base_food_item i on d.id=i.item_id
		LEFT JOIN base_food_type t on i.food_id=t.id
		LEFT JOIN base_item_type bit on d.detect_item_typeid = bit.id
		WHERE 1=1 
		<if test="childFoodIdArray != null">
			and t.id in
			<foreach collection="childFoodIdArray" item="childFoodId" index="index" open="(" close=")"
				separator=",">
				#{childFoodId}
			</foreach>
		</if>
		and bit.id=#{itemTypeId} and d.delete_flag=0 and d.checked=1
		and i.delete_flag=0 and t.delete_flag=0 and bit.delete_flag=0;
	</select>
	
	<select id="queryByItemName" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT * FROM base_detect_item WHERE delete_flag=0 AND detect_item_name=#{itemName}
	</select>

	<select id="queryOneByItemName" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT * FROM base_detect_item WHERE delete_flag=0 AND detect_item_name=#{itemName} LIMIT 0,1
	</select>
	
	<select id="queryItemMap" resultType="java.util.Map">
		SELECT item.id, item.detect_item_name, item.detect_value_unit, 
			item.detect_item_typeid type_id, item.other_code,
			std.id std_id, std.std_code, 
			bit.item_name type_name,
			COUNT(1) count
		FROM base_detect_item item
		LEFT JOIN base_standard std ON item.standard_id=std.id
		LEFT JOIN base_item_type bit ON bit.id = item.detect_item_typeid
		where item.delete_flag=0
		GROUP BY detect_item_name
	</select>
	
	<select id="queryAll" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM base_detect_item where delete_flag=0
	</select>
	<!-- 2019-8-28 huht 查询全部可用检测项目 -->
	<select id="queryAllByChecked" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT  
		item.id,item.detect_item_name,item.price,item.detect_item_typeid,  type.item_name as remark
		FROM base_detect_item item LEFT JOIN base_item_type type ON item.detect_item_typeid=type.id
		where item.delete_flag=0 AND checked = 1
		<if test="offerId != null">
	    and	item.id NOT in(SELECT item_id  FROM special_offer_item WHERE offer_id in 
	    		<foreach collection="offerId" item="id" index="index" open="(" close=")" separator=",">
				#{id}
			</foreach>
	     GROUP BY item_id)
		 </if>
		 ORDER BY type.sorting 
	</select>
 
 <select id="queryAllIds" resultType="java.lang.String" >
		select GROUP_CONCAT(id) from base_detect_item where delete_flag=0 and checked=1
	</select>

	<select id="queryByItemNames" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT * FROM base_detect_item WHERE delete_flag=0
		<if test="itemNames != null">
			AND detect_item_name in
			<foreach collection="itemNames" item="itenName" index="index" open="(" close=")" separator=",">
				#{itenName}
			</foreach>
		</if>
		limit 0,1
	</select>

	<select id="queryItemById" resultMap="ResultMapList" parameterType="java.lang.String">
		select item.*,s.std_code,t.item_name
		from base_detect_item item
		LEFT JOIN base_standard s on item.standard_id=s.id
		LEFT JOIN base_item_type t on item.detect_item_typeid=t.id
		where item.id = #{id,jdbcType=VARCHAR}
	</select>
</mapper>