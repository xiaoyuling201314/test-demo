<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dayuan.mapper.data.BasePointMapper">
    <resultMap id="BaseResultMap" type="com.dayuan.bean.data.BasePoint">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="point_name" property="pointName" jdbcType="VARCHAR"/>
        <result column="point_code" property="pointCode" jdbcType="VARCHAR"/>
        <result column="point_type" property="pointType" jdbcType="VARCHAR"/>
        <result column="depart_id" property="departId" jdbcType="INTEGER"/>
        <result column="region_id" property="regionId" jdbcType="VARCHAR"/>
        <result column="manager_id" property="managerId" jdbcType="VARCHAR"/>
        <result column="license_plate" property="licensePlate" jdbcType="VARCHAR"/>
        <result column="IMEI" property="imei" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="place_x" property="placeX" jdbcType="VARCHAR"/>
        <result column="place_y" property="placeY" jdbcType="VARCHAR"/>
        <result column="map_display" property="mapDisplay" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="sorting" property="sorting" jdbcType="SMALLINT"/>
        <result column="delete_flag" property="deleteFlag" jdbcType="SMALLINT"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="point_id" property="pointId" jdbcType="INTEGER"/>
        <result column="video_type" property="videoType" jdbcType="INTEGER"/>
        <!-- add by luo start  -->
        <result column="point_type_id" property="pointTypeId" jdbcType="VARCHAR"/>
        <result column="regulatory_id" property="regulatoryId" jdbcType="VARCHAR"/>
        <!-- add by luo end  -->
        <result column="sample_delivery" property="sampleDelivery" jdbcType="INTEGER"/>
        <result column="vedioNumbers" property="vedioNumbers" jdbcType="INTEGER"/>
        <result column="unqualifiedNumber" property="unqualifiedNumber" jdbcType="INTEGER"/>

        <result column="signature_type" property="signatureType" jdbcType="SMALLINT"/>
        <result column="signature_file" property="signatureFile" jdbcType="VARCHAR"/>
        <result column="check_depart" property="checkDepart" jdbcType="VARCHAR"/>
        <result column="regulatoryName" property="regulatoryName" jdbcType="VARCHAR"/>
        <result column="depart_name" property="departName" jdbcType="VARCHAR"/>
        <result column="check_number" property="checkNumber" jdbcType="INTEGER"/>
        <!--add by xiaoyl 2022/07/18 乐橙云摄像头增加在线状态和最后一次状态同步时间字段 start-->
        <result column="online_status" jdbcType="SMALLINT" property="onlineStatus" />
        <result column="sync_status_date" jdbcType="TIMESTAMP" property="syncStatusDate" />
        <result column="storage_type" jdbcType="SMALLINT" property="storageType" />
    </resultMap>
    <sql id="Base_Column_List">
        id, point_name, point_code, point_type, depart_id, region_id, manager_id, license_plate,
        IMEI, phone, address, place_x, place_y, map_display, remark, sorting, delete_flag, create_by, create_date,
        update_by, update_date, point_type_id, regulatory_id, sample_delivery, signature_type, signature_file, check_depart
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM base_point
        WHERE id = #{id,jdbcType=INTEGER}
    </select>
    <insert id="insert" parameterType="com.dayuan.bean.data.BasePoint">
        INSERT INTO base_point (id, point_name, point_code,
                                point_type, depart_id, region_id,
                                manager_id, license_plate, IMEI,
                                phone, address, place_x, place_y, map_display, remark,
                                sorting, delete_flag, create_by,
                                create_date, update_by, update_date, point_type_id, regulatory_id, sample_delivery, signature_type, signature_file, check_depart
        )
        VALUES (#{id,jdbcType=INTEGER}, #{pointName,jdbcType=VARCHAR}, #{pointCode,jdbcType=VARCHAR},
                                        #{pointType,jdbcType=VARCHAR}, #{departId,jdbcType=INTEGER},
                                        #{regionId,jdbcType=VARCHAR},
                                        #{managerId,jdbcType=VARCHAR}, #{licensePlate,jdbcType=VARCHAR},
                                        #{imei,jdbcType=VARCHAR},
                                        #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
            #{placeX,jdbcType=VARCHAR}, #{placeY,jdbcType=VARCHAR}, #{mapDisplay,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
            #{sorting,jdbcType=SMALLINT}, #{deleteFlag,jdbcType=SMALLINT}, #{createBy,jdbcType=VARCHAR},
            #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP},
            #{pointTypeId}, #{regulatoryId}, #{sampleDelivery}, #{signatureType}, #{signatureFile}, #{checkDepart})
    </insert>
    <insert id="insertSelective" parameterType="com.dayuan.bean.data.BasePoint">
        INSERT INTO base_point
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="pointName != null">
                point_name,
            </if>
            <if test="pointCode != null">
                point_code,
            </if>
            <if test="pointType != null">
                point_type,
            </if>
            <if test="departId != null">
                depart_id,
            </if>
            <if test="regionId != null">
                region_id,
            </if>
            <if test="managerId != null">
                manager_id,
            </if>
            <if test="licensePlate != null">
                license_plate,
            </if>
            <if test="imei != null">
                IMEI,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="placeX != null">
                place_x,
            </if>
            <if test="placeY != null">
                place_y,
            </if>
            <if test="mapDisplay != null">
                map_display,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="sorting != null">
                sorting,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="pointTypeId != null">
                point_type_id
            </if>
            <if test="regulatoryId != null">
                regulatory_id,
            </if>
            <if test="sampleDelivery != null">
                sample_delivery,
            </if>
            <if test="signatureType != null">
                signature_type,
            </if>
            <if test="signatureFile != null">
                signature_file,
            </if>
            <if test="checkDepart != null">
                check_depart,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="pointName != null">
                #{pointName,jdbcType=VARCHAR},
            </if>
            <if test="pointCode != null">
                #{pointCode,jdbcType=VARCHAR},
            </if>
            <if test="pointType != null">
                #{pointType,jdbcType=VARCHAR},
            </if>
            <if test="departId != null">
                #{departId,jdbcType=INTEGER},
            </if>
            <if test="regionId != null">
                #{regionId,jdbcType=VARCHAR},
            </if>
            <if test="managerId != null">
                #{managerId,jdbcType=VARCHAR},
            </if>
            <if test="licensePlate != null">
                #{licensePlate,jdbcType=VARCHAR},
            </if>
            <if test="imei != null">
                #{imei,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="placeX != null">
                #{placeX,jdbcType=VARCHAR},
            </if>
            <if test="placeY != null">
                #{placeY,jdbcType=VARCHAR},
            </if>
            <if test="mapDisplay != null">
                #{mapDisplay,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="sorting != null">
                #{sorting,jdbcType=SMALLINT},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=SMALLINT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="pointTypeId != null">
                #{pointTypeId,jdbcType=VARCHAR},
            </if>
            <if test="regulatoryId != null">
                #{regulatoryId,jdbcType=VARCHAR},
            </if>
            <if test="sampleDelivery != null">
                #{sampleDelivery,jdbcType=INTEGER},
            </if>
            <if test="signatureType != null">
                #{signatureType,jdbcType=SMALLINT},
            </if>
            <if test="signatureFile != null">
                #{signatureFile,jdbcType=VARCHAR},
            </if>
            <if test="checkDepart != null">
                #{checkDepart,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dayuan.bean.data.BasePoint">
        UPDATE base_point
        <set>
            <if test="pointName != null">
                point_name = #{pointName,jdbcType=VARCHAR},
            </if>
            <if test="pointCode != null">
                point_code = #{pointCode,jdbcType=VARCHAR},
            </if>
            <if test="pointType != null">
                point_type = #{pointType,jdbcType=VARCHAR},
            </if>
            <if test="departId != null">
                depart_id = #{departId,jdbcType=INTEGER},
            </if>
            <if test="regionId != null">
                region_id = #{regionId,jdbcType=VARCHAR},
            </if>
            <if test="managerId != null">
                manager_id = #{managerId,jdbcType=VARCHAR},
            </if>
            <if test="licensePlate != null">
                license_plate = #{licensePlate,jdbcType=VARCHAR},
            </if>
            <if test="imei != null">
                IMEI = #{imei,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="placeX != null">
                place_x = #{placeX,jdbcType=VARCHAR},
            </if>
            <if test="placeY != null">
                place_y = #{placeY,jdbcType=VARCHAR},
            </if>
            <if test="mapDisplay != null">
                map_display = #{mapDisplay,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="sorting != null">
                sorting = #{sorting,jdbcType=SMALLINT},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=SMALLINT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="pointTypeId != null">
                point_type_id=#{pointTypeId,jdbcType=VARCHAR},
            </if>
            <if test="regulatoryId != null">
                regulatory_id=#{regulatoryId,jdbcType=VARCHAR},
            </if>
            <if test="sampleDelivery != null">
                sample_delivery=#{sampleDelivery,jdbcType=INTEGER},
            </if>
            signature_type=#{signatureType,jdbcType=SMALLINT},
            <if test="signatureFile != null">
                signature_file=#{signatureFile,jdbcType=VARCHAR},
            </if>
            <if test="checkDepart != null">
                check_depart=#{checkDepart,jdbcType=VARCHAR}
            </if>
        </set>
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dayuan.bean.data.BasePoint">
        UPDATE base_point
        SET point_name      = #{pointName,jdbcType=VARCHAR},
            point_code      = #{pointCode,jdbcType=VARCHAR},
            point_type      = #{pointType,jdbcType=VARCHAR},
            depart_id       = #{departId,jdbcType=INTEGER},
            region_id       = #{regionId,jdbcType=VARCHAR},
            manager_id      = #{managerId,jdbcType=VARCHAR},
            license_plate   = #{licensePlate,jdbcType=VARCHAR},
            IMEI            = #{imei,jdbcType=VARCHAR},
            phone           = #{phone,jdbcType=VARCHAR},
            address         = #{address,jdbcType=VARCHAR},
            place_x         = #{placeX,jdbcType=VARCHAR},
            place_y         = #{placeY,jdbcType=VARCHAR},
            map_display     = #{mapDisplay,jdbcType=INTEGER},
            remark          = #{remark,jdbcType=VARCHAR},
            sorting         = #{sorting,jdbcType=SMALLINT},
            delete_flag     = #{deleteFlag,jdbcType=SMALLINT},
            create_by       = #{createBy,jdbcType=VARCHAR},
            create_date     = #{createDate,jdbcType=TIMESTAMP},
            update_by       = #{updateBy,jdbcType=VARCHAR},
            update_date     = #{updateDate,jdbcType=TIMESTAMP},
            point_type_id   = #{pointTypeId,jdbcType=VARCHAR},
            regulatory_id   = #{regulatoryId,jdbcType=VARCHAR},
            sample_delivery = #{sampleDelivery,jdbcType=INTEGER},
            signature_type  = #{signatureType,jdbcType=SMALLINT},
            signature_file  = #{signatureFile,jdbcType=VARCHAR},
            check_depart    = #{checkDepart,jdbcType=VARCHAR}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>


    <!-- 查询条件 -->
    <sql id="Example_Where_Clause">
        where p.delete_flag=0
        <trim suffixOverrides=",">
            <if test="obj.baseBean != null">
                <if test="obj.baseBean.pointName != null and obj.baseBean.pointName != ''">
                    and p.point_name like CONCAT('%', #{obj.baseBean.pointName}, '%')
                </if>
            </if>
            <if test="obj.depart != null">
                <if test="obj.depart.departCode != null and obj.depart.departCode != ''">
                    and d.depart_code LIKE CONCAT(#{obj.depart.departCode},'%')
                </if>
            </if>
            <if test="obj.map != null">
                and p.place_x is NOT NULL and p.place_y IS NOT NULL and p.place_x!=''and p.place_y!='' and
                d.delete_flag=0
            </if>
        </trim>
    </sql>

    <!-- <delete id="deleteByPrimaryKey" parameterType="java.lang.String" > update base_point set delete_flag=1,update_date=now()
        where id in <foreach collection="array" item="ids" index="index" open="(" close=")" separator=","> #{ids}
        </foreach> </delete> -->

    <update id="deletePoints" parameterType="Object">
        UPDATE base_point bp
        LEFT JOIN base_device bd ON bd.point_id = bp.id
        SET
        bp.delete_flag = 1, bp.update_date = now(), bp.update_by = #{userId},
        bd.delete_flag = 1, bd.update_date = now(),
        bd.update_by = #{userId}
        WHERE bp.id IN
        <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <select id="selectByDepartid" resultMap="BaseResultMap" parameterType="Object">
        SELECT
        <include refid="Base_Column_List"/>
        FROM base_point
        WHERE depart_id = #{departId,jdbcType=INTEGER} AND delete_flag = '0'
        <if test="pointId!=null and pointId!=''">
            AND id=#{pointId,jdbcType=INTEGER}
        </if>
        ORDER BY sorting ASC,create_date ASC
    </select>
    <select id="selectByPointArr" resultMap="BaseResultMap" parameterType="Object">
        SELECT bp.id, bp.point_name, bv.point_id, bv.video_type,bv.online_status,bv.sync_status_date,bv.storage_type,bp.depart_id,
        IF(bv.point_id IS NULL, 999999, bp.sorting) mySorting
        FROM base_point bp
        LEFT JOIN (SELECT point_id, video_type,online_status,sync_status_date,storage_type,update_date FROM base_point_video_surveillance WHERE delete_flag=0
        <if test="videoType != null">AND video_type = #{videoType}</if>
        GROUP BY point_id)
        bv
        ON bp.id=bv.point_id
        WHERE bp.delete_flag = 0
        <if test="pointArr != null and pointArr.length > 0">
            AND bp.id IN
            <foreach item="item" index="index" collection="pointArr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="flag!=null and flag==0 ">
            AND bv.point_id IS NOT NULL
        </if>
        <if test="id !=null and id !=''">
            AND bp.id = #{id,jdbcType=INTEGER}
        </if>
        <if test="pointName!=null and pointName!=''">
            AND bp.point_name LIKE CONCAT('%',#{pointName},'%')
        </if>
        <choose>
            <when test="queryType!=null and queryType==0"> and bv.online_status=0</when>
            <when test="queryType==1"> and bv.online_status=1 </when>
            <when test="queryType==-1"> and bv.online_status=-1 </when>
            <when test="queryType==-2"> and bv.point_id IS NULL </when>
            <when test="queryType==9"> and bv.video_type=0 and bv.online_status=1 and bv.storage_type!=0 </when> <!--查看支持回放的摄像头-->
        </choose>
        ORDER BY bv.online_status desc, mySorting ASC
    </select>

    <!-- 分页基础查询 --> <!-- 2018-11-23 胡 -将原来只查检测点表修改为检测点与机构关联查询 -->
    <select id="loadDatagrid" resultMap="BaseResultMap" parameterType="Object">
        SELECT
        p.*
        <if test="obj.IsQueryVideoS==1"><!-- add by xiaoyl 2020-04-23 项目预览中查看实验室是否配置了摄像头 -->
            ,count(video.id) vedioNumbers ,sum(online_status)  online_status
        </if>
        <if test="obj.isQueryUnqualified==1"><!-- add by xiaoyl 2020-08-28 是否查询检测点当天的不合格检测数 -->
            ,(SELECT count(*) FROM data_check_recording dcr WHERE dcr.point_id=p.id AND
            dcr.check_date>=#{obj.startDateStr} AND dcr.check_date&lt;=#{obj.endDateStr}
            AND dcr.conclusion='不合格' AND dcr.delete_flag=0 ) unqualifiedNumber
        </if>
        FROM base_point p LEFT JOIN t_s_depart d ON p.depart_id=d.id
        <if test="obj.IsQueryVideoS==1"><!-- add by xiaoyl 2020-04-23 项目预览中查看实验室是否配置了摄像头 -->
            left join base_point_video_surveillance video on video.point_id=p.id AND video.delete_flag=0
        </if>
        <include refid="Example_Where_Clause"/>
        GROUP BY p.id
        ORDER BY d.depart_code ASC, p.sorting ASC LIMIT #{rowOffset}, #{pageSize}
    </select>

    <select id="getRowTotal" resultType="java.lang.Integer" parameterType="Object">
        SELECT count(1) AS rowTotal
        FROM base_point p LEFT JOIN t_s_depart d ON p.depart_id=d.id
        <include refid="Example_Where_Clause"/>
    </select>

    <select id="queryByDepartId" resultMap="BaseResultMap" parameterType="Object">
        SELECT
        <include refid="Base_Column_List"/>
        FROM base_point
        WHERE delete_flag = '0'
        <if test="subset == null or subset == 'N'.toString()">
            AND depart_id = #{departId}
        </if>
        <if test="subset == 'Y'.toString()">
            AND depart_id IN (SELECT id FROM t_s_depart WHERE depart_code LIKE CONCAT((SELECT depart_code FROM
            t_s_depart WHERE id=#{departId}),'%'))
        </if>
        <if test="pointName != null and pointName != ''">
            AND point_name LIKE CONCAT( #{pointName},'%')
        </if>
        <if test="pointTypes != null">
            AND (
            <foreach collection="pointTypes" item="pointType" open="(" close=")" separator=" OR ">
                <choose>
                    <when test="pointType == 0">
                        point_type = 0 AND point_type_id = 1
                    </when>
                    <when test="pointType == 1">
                        point_type = 1 AND point_type_id = 1
                    </when>
                    <when test="pointType == 2">
                        point_type = 0 AND point_type_id != 1
                    </when>
                </choose>
            </foreach>
            )
        </if>
    </select>

    <select id="queryByUniqueIMEI" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM base_point
        WHERE delete_flag=0 AND IMEI=#{imei}
    </select>

    <select id="queryByPointType" resultMap="BaseResultMap" parameterType="Object">
        SELECT
        <include refid="Base_Column_List"/>
        FROM base_point
        WHERE delete_flag=0 AND point_type=#{pointType}
        <if test="departArr != null and departArr.length > 0">
            AND depart_id IN
            <foreach item="item" index="index" collection="departArr" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        ORDER BY sorting
    </select>
    <!-- /**
     * 查询出机构下所有的检测点及数量
     * @param departCode 部门Code
     * @param subset 是否查询下级
     * @return
     * @author LuoYX
     * @date 2018年5月29日
     */ -->
    <select id="queryByDepartCode" resultType="java.util.Map" parameterType="Object">
        SELECT
        p.id,p.point_name,p.depart_id,d.depart_name,count(1) count
        FROM base_point p
        LEFT JOIN t_s_depart d ON p.depart_id=d.id
        WHERE p.delete_flag=0
        <if test="subset != null and subset == 'N'.toString()">
            <!-- AND depart_id in (select id from t_s_depart where depart_code =#{departCode}) -->
            AND d.depart_code=#{departCode}
        </if>
        <if test="subset != null and subset == 'Y'.toString()">
            <!-- AND depart_id IN (select id from t_s_depart where depart_code like CONCAT(#{departCode},'%')) -->
            AND d.depart_code LIKE CONCAT(#{departCode},'%')
        </if>
        GROUP BY p.point_name
    </select>

    <!--查询当前机构下检测点的最大排序-->
    <select id="queryMaxSortByDepartId" resultType="java.lang.Short">
        SELECT IFNULL(MAX(sorting), 0) + 1
        FROM base_point
        WHERE delete_flag = 0 AND depart_id = #{departId}
    </select>
    <!--查询机构下有多少个检测点-->
    <select id="queryPointSize" resultType="java.lang.Integer">
        SELECT count(1)
        FROM base_point
        WHERE delete_flag = 0
              AND depart_id IN (SELECT id
                                FROM t_s_depart
                                WHERE depart_code LIKE CONCAT((SELECT depart_code
                                                               FROM
                                                                   t_s_depart
                                                               WHERE id = #{departId}), '%'))
    </select>

    <!--查询机构下面的所有子机构的检测点 shit-->
    <select id="selectByDepartId" resultType="java.util.Map">
        SELECT
        id AS `value`,
        point_name AS title
        FROM base_point
        WHERE
        depart_id IN (SELECT id
        FROM t_s_depart
        WHERE
        depart_code LIKE CONCAT((SELECT depart_code
        FROM t_s_depart
        WHERE id = #{departId}), '%')
        AND delete_flag = 0
        )
        AND delete_flag = 0
        <if test="pointId!=null">
            AND id = #{pointId}
        </if>
        ORDER BY sorting ASC, create_date ASC
    </select>

    <select id="queryRegByPointID" resultMap="BaseResultMap" parameterType="java.lang.Integer">
         SELECT point.*, obj.reg_name regulatoryName,
        (select depart_name from t_s_depart where id=point.depart_id) depart_name
        FROM base_point point
        left join base_regulatory_object obj on point.regulatory_id=obj.id
        WHERE point.delete_flag=0 AND point.id=#{pointId}
    </select>

    <!-- 分页基础查询 --> <!-- 2018-11-23 胡 -将原来只查检测点表修改为检测点与机构关联查询 -->
    <select id="loadPointForGS" resultMap="BaseResultMap" parameterType="Object">
       SELECT  bp.id,bp.point_name,bp.depart_id,bp.phone,bp.address,
        #{obj.pointType} point_type,
        (SELECT depart_name  FROM t_s_depart  WHERE depart_code = SUBSTRING( dp.depart_code, 1, LENGTH( #{obj.departCode} ) + 2 )  LIMIT 0, 1  ) AS depart_name,-- 单位名称
        count(*) check_number FROM base_point bp
        LEFT JOIN data_check_recording r ON bp.id = r.point_id
        INNER JOIN t_s_depart dp ON r.depart_id = dp.id
        <include refid="check_Where_Clause_GS"/>
        GROUP BY bp.id
        ORDER BY dp.depart_code ASC, bp.sorting ASC LIMIT #{rowOffset}, #{pageSize}
    </select>

    <select id="getRowTotalForGS" resultType="java.lang.Integer" parameterType="Object">
      SELECT count(DISTINCT bp.id) rowTotal
        FROM base_point bp
        LEFT JOIN data_check_recording r ON bp.id = r.point_id
        INNER JOIN t_s_depart dp ON r.depart_id = dp.id
       <include refid="check_Where_Clause_GS"/>
    </select>
    <sql id="check_Where_Clause_GS">
        WHERE r.delete_flag = 0  AND r.check_date BETWEEN #{obj.start}  AND #{obj.end}
        AND dp.depart_code LIKE CONCAT( #{obj.departCode}, '%' )
    <choose>
        <when test="obj.pointType == 0">
            AND bp.point_type = 0 AND bp.point_type_id = 1
        </when>
        <when test="obj.pointType == 1">
            AND bp.point_type = 0 AND bp.point_type_id != 1
        </when>
        <when test="obj.pointType == 2">
            AND bp.point_type = 1 AND bp.point_type_id = 1
        </when>
    </choose>
    </sql>
    <!--add by xiaoyl 2022/07/29 根据关键字查询当前用户所属机构下的检测点信息-->
    <select id="selectDepartByName" resultMap="BaseResultMap" parameterType="Object">
        SELECT
        p.*
        FROM base_point p
        LEFT JOIN t_s_depart d ON p.depart_id=d.id
        WHERE  p.delete_flag = '0'
         AND d.depart_code LIKE CONCAT(#{departCode},'%')
        <if test="pointId!=null and pointId!=''">
            AND  p.id=#{pointId,jdbcType=INTEGER}
        </if>
        <if test="pointName!=null and pointName!=''">
            AND  p.point_name LIKE CONCAT('%',#{pointName},'%')
        </if>
        ORDER BY  p.sorting ASC, p.create_date ASC
    </select>
    <!--东营可视化大屏-根据检测点ID查询检测点和机构名称信息-->
    <select id="queryForVisual" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
        p.*,d.depart_name
        FROM base_point p
        LEFT JOIN t_s_depart d ON p.depart_id=d.id
        WHERE  p.delete_flag = 0 AND  p.id=#{pointId}
    </select>
    <!--根据机构ID查询配置了乐橙摄像头的检测点信息-->
    <select id="selectConfigVideoPoint" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT bp.id, bp.point_name, bv.point_id, bv.video_type,bv.online_status,bv.sync_status_date,bv.storage_type,bp.depart_id,
        IF(bv.point_id IS NULL, 999999, bp.sorting) mySorting
        FROM base_point bp
        LEFT JOIN (SELECT point_id, video_type,online_status,sync_status_date,storage_type,update_date FROM base_point_video_surveillance WHERE delete_flag=0
       AND video_type =0
        GROUP BY point_id) bv  ON bp.id=bv.point_id
        WHERE bp.delete_flag = 0
        and bp.depart_id in (SELECT id FROM t_s_depart
						WHERE depart_code LIKE CONCAT((SELECT depart_code FROM t_s_depart WHERE id = #{departId}),'%'))
				AND bv.point_id IS NOT NULL
        and bv.online_status=1
        ORDER BY bv.online_status desc, mySorting ASC
    </select>
</mapper>

