<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dayuan.mapper.ledger.BaseLedgerStockMapper">
	<resultMap id="BaseResultMap" type="com.dayuan.bean.ledger.BaseLedgerStock">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed May 02 
			14:43:09 CST 2018. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="regId" jdbcType="VARCHAR" property="regId" />
		<result column="businessId" jdbcType="VARCHAR" property="businessId" />
		<result column="foodName" jdbcType="VARCHAR" property="foodName" />
		<result column="supplierId" jdbcType="VARCHAR" property="supplierId" />
		<result column="supplierUser" jdbcType="VARCHAR" property="supplierUser" />
		<result column="supplierTel" jdbcType="VARCHAR" property="supplierTel" />
		<result column="supplier" jdbcType="VARCHAR" property="supplier" />
		<result column="batchNumber" jdbcType="VARCHAR" property="batchNumber" />
		<result column="size" jdbcType="VARCHAR" property="size" />
		<result column="stockDate" jdbcType="TIMESTAMP" property="stockDate" />
		<result column="expirationDate" jdbcType="VARCHAR" property="expirationDate" />
		<result column="stockCount" jdbcType="DECIMAL" property="stockCount" />
		<result column="productionPlace" jdbcType="VARCHAR" property="productionPlace" />
		<result column="productionDate" jdbcType="TIMESTAMP" property="productionDate" />
		<result column="stockProof" jdbcType="VARCHAR" property="stockProof" />
		<result column="stockProof_Img" jdbcType="VARCHAR" property="stockProof_Img" />
		<result column="checkProof" jdbcType="VARCHAR" property="checkProof" />
		<result column="checkProof_Img" jdbcType="VARCHAR" property="checkProof_Img" />
		<result column="quarantineProof" jdbcType="VARCHAR" property="quarantineProof" />
		<result column="quarantineProof_Img" jdbcType="VARCHAR"
			property="quarantineProof_Img" />
		<result column="memo" jdbcType="VARCHAR" property="memo" />
		<result column="accessory" jdbcType="VARCHAR" property="accessory" />
		<result column="delete_flag" jdbcType="SMALLINT" property="delete_flag" />
		<result column="create_by" jdbcType="VARCHAR" property="create_by" />
		<result column="create_date" jdbcType="TIMESTAMP" property="create_date" />
		<result column="update_by" jdbcType="VARCHAR" property="update_by" />
		<result column="update_date" jdbcType="TIMESTAMP" property="update_date" />
		<result column="param1" jdbcType="VARCHAR" property="param1" />
		<result column="param2" jdbcType="VARCHAR" property="param2" />
		<result column="param3" jdbcType="VARCHAR" property="param3" />
		<result column="opeShopCode" jdbcType="VARCHAR" property="opeShopCode" />
		<result column="reg_name" jdbcType="VARCHAR" property="reg_name" />
		<result column="check_recording_id" jdbcType="INTEGER" property="checkRecordingId" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed May 02 
			14:43:09 CST 2018. -->
		id,regId, businessId, foodName, supplierId, supplierUser, supplierTel,
		supplier, batchNumber,
		size, stockDate, expirationDate, stockCount,
		productionPlace,
		productionDate, stockProof,
		stockProof_Img, checkProof,
		checkProof_Img, quarantineProof, quarantineProof_Img,
		memo, accessory,
		delete_flag, create_by, create_date, update_by,
		update_date, param1,
		param2, param3, check_recording_id
	</sql>



	<!-- 查询条件 -->
	<sql id="check_Where_Clause">
		where 1=1
		and stock.delete_flag=0
		<if test="obj != null">
			<if test="obj.search !=null and obj.search !=''">
				and (stock.foodName like CONCAT('%', #{obj.search}, '%')
				or
				stock.supplier like CONCAT('%', #{obj.search}, '%')
				or stock.param1 like
				CONCAT('%', #{obj.search}, '%')
				or stock.supplierCode like CONCAT('%',
				#{obj.search}, '%')
				)
			</if>
			<if test="obj.foodName !=null and obj.foodName !=''">
				and stock.foodName like CONCAT('%', #{obj.foodName}, '%')
			</if>
			<if test="obj.businessId !=null and obj.businessId !=''">
				and stock.businessId=#{obj.businessId}
			</if>
			<if test="obj.regId !=null and obj.regId !=''">
				and stock.regId=#{obj.regId}
			</if>
			<if test="obj.regtype !=null and obj.regtype !=''">
				and obj.reg_type=#{obj.regtype}
			</if>
			<if test="obj.departId !=null and obj.departId !=''">
				AND obj.depart_id in ( SELECT t.id FROM t_s_depart t WHERE t.delete_flag=0 AND t.depart_code LIKE CONCAT((SELECT s.depart_code FROM t_s_depart s WHERE s.id=#{obj.departId}),'%'))
			</if>
			<if test="obj.startDate !=null and obj.startDate !=''">
				and stock.stockDate like concat(#{obj.startDate},'%')
			</if>
			<if test="obj.reg_name !=null and obj.reg_name !=''">
				and obj.reg_name like concat('%',#{obj.reg_name},'%')
			</if>
			<if test="obj.param1 !=null and obj.param1 !=''">
				and stock.param1 like concat('%',#{obj.param1},'%')
			</if>
			<if test="obj.opeShopCode !=null and obj.opeShopCode !=''">
				and busi.ope_shop_code like concat('%',#{obj.opeShopCode},'%')
			</if>
				<if test="obj.stockDateStartDate!=null and obj.stockDateStartDate!=''">
			and stock.stockDate &gt;= #{obj.stockDateStartDate}
		</if>
		<if test="obj.stockDateEndDate!=null and obj.stockDateEndDate!=''">
			and stock.stockDate &lt;= #{obj.stockDateEndDate}
		</if>
		</if>
	</sql>
	<!-- 查询信息列表 -->
	<select id="loadDatagrid" resultMap="BaseResultMap"
		parameterType="Object">
		select obj.reg_name as reg_name, busi.ope_shop_code as opeShopCode, stock.*
		FROM
		base_ledger_stock stock
		LEFT JOIN base_regulatory_object obj ON obj.id = stock.regId
		LEFT JOIN base_regulatory_business busi on  busi.id = stock.businessId
		<include refid="check_Where_Clause" />
		order by stock.stockDate ${order} , stock.create_date  desc limit #{rowOffset}, #{pageSize}
	</select>
	<!-- 查询数据数量 -->
	<select id="getRowTotal" resultType="java.lang.Integer"
		parameterType="Object">
		select count(1) as rowTotal
		FROM
		base_ledger_stock stock
		LEFT JOIN base_regulatory_object obj ON obj.id = stock.regId
		LEFT JOIN base_regulatory_business busi on  busi.id = stock.businessId
		<include refid="check_Where_Clause" />
	</select>
	
	<select id="queryByBatchNumber" resultMap="BaseResultMap" parameterType="Object">
		SELECT <include refid="Base_Column_List"></include>
		FROM
			base_ledger_stock
		WHERE 
			regId = #{regId} AND foodName = #{foodName}
			<!-- <![CDATA[ AND stockDate <= #{stockDate} ]]> -->
			AND stockDate  &gt;= CONCAT(#{stockDate}, ' 00:00:00')
			AND stockDate  &lt;= CONCAT(#{stockDate}, ' 23:59:59')
			<if test="businessId != null and businessId != ''"> AND businessId = #{businessId}</if>
			<if test="batchNumber != null and batchNumber != ''"> AND batchNumber = #{batchNumber} </if>
			
		ORDER BY stockDate DESC LIMIT 0, 1
	</select>

	<!-- 查询各个市场档口录入信息列表 -->
	<select id="loadRegReport" resultMap="BaseResultMapModel"
		parameterType="Object">
		SELECT t.id as reg_id,t.reg_name,
		(SELECT COUNT(1) FROM base_regulatory_business b WHERE b.reg_id= t.id and b.delete_flag=0) as  allCount,
		SUM(CASE WHEN t.delete_flag=0 AND taiCount > 0 THEN 1 ELSE 0 END) yiwanc,
		SUM(CASE WHEN t.delete_flag=0 AND taiCount = 0 THEN 1 ELSE 0 END) weiwanc
		FROM (
		SELECT obj.id,obj.reg_name, b.id businessId,b.ope_name,b.delete_flag,
			(SELECT COUNT(1) FROM base_ledger_stock s WHERE s.businessId = b.id AND s.delete_flag = 0
		<if
			test="type!=null and type!='' and type=='month' and month !=null and month !=''">
			and month(s.stockDate)=#{month} and
			year(s.stockDate)=year(now())
		</if>
		<if
			test="type!=null and type!='' and type=='season' and season !=null and season !='' ">
			and QUARTER(s.stockDate)=#{season} and
			year(s.stockDate)=year(now())
		</if>
		<if
			test="type!=null and type!='' and type=='year' and year !=null and year !='' ">
			and year(s.stockDate)=#{year}
		</if>
		<if
			test="type!=null and type!='' and type=='diy' and start !=null and start !='' ">
			and s.stockDate &gt;=#{start}
		</if>
		<if
			test="type!=null and type!='' and type=='diy'  and end !=null and end !=''">
			and s.stockDate &lt;=#{end}
		</if>

		) taiCount
		FROM
		base_regulatory_object obj
		LEFT JOIN base_regulatory_business b ON obj.id = b.reg_id
		WHERE obj.delete_flag = 0	AND obj.checked = 1
		AND obj.id IN (
			SELECT 	id FROM	base_regulatory_object	WHERE
			delete_flag = 0
			AND reg_type =#{regTypeId}
			AND depart_id IN (
			SELECT id FROM t_s_depart WHERE delete_flag = 0 AND
			<!--  FIND_IN_SET(id, getChildDepartLst(#{did})) -->
			depart_code LIKE CONCAT(#{departCode}, '%')
			))) t GROUP BY t.id ORDER BY	yiwanc DESC,	allCount DESC 
	</select>
	<!-- 查询各个市场录入台账情况 -->
	<select id="loadRegReport2" resultMap="BaseResultMapModel"
		parameterType="Object">
	 
		SELECT obj.id,obj.reg_name, 
			(SELECT COUNT(1) FROM base_ledger_stock s WHERE 	s.regId = obj.id AND s.delete_flag = 0
		<if
			test="type!=null and type!='' and type=='month' and month !=null and month !=''">
			and month(s.stockDate)=#{month} and
			year(s.stockDate)=year(now())
		</if>
		<if
			test="type!=null and type!='' and type=='season' and season !=null and season !='' ">
			and QUARTER(s.stockDate)=#{season} and
			year(s.stockDate)=year(now())
		</if>
		<if
			test="type!=null and type!='' and type=='year' and year !=null and year !='' ">
			and year(s.stockDate)=#{year}
		</if>
		<if
			test="type!=null and type!='' and type=='diy' and start !=null and start !='' ">
			and s.stockDate &gt;=#{start}
		</if>
		<if
			test="type!=null and type!='' and type=='diy'  and end !=null and end !=''">
			and s.stockDate &lt;=#{end}
		</if>

		) yiwanc
		FROM
		base_regulatory_object obj
		WHERE obj.delete_flag = 0	AND obj.checked = 1
		AND obj.id IN (
			SELECT 	id FROM	base_regulatory_object	WHERE
			delete_flag = 0
			AND reg_type =#{regTypeId}
			AND depart_id IN (
			SELECT id FROM t_s_depart WHERE delete_flag = 0 AND
			<!--  FIND_IN_SET(id, getChildDepartLst(#{did})) -->
			depart_code LIKE CONCAT(#{departCode}, '%')
			))  ORDER BY yiwanc DESC 
	</select>

	<resultMap id="BaseResultMapModel" type="com.dayuan.model.ledger.BaseLedgerStockModel">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed May 02 
			14:43:09 CST 2018. -->
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="regId" jdbcType="VARCHAR" property="regId" />
		<result column="businessId" jdbcType="VARCHAR" property="businessId" />
		<result column="foodName" jdbcType="VARCHAR" property="foodName" />
		<result column="supplierId" jdbcType="VARCHAR" property="supplierId" />
		<result column="supplierUser" jdbcType="VARCHAR" property="supplierUser" />
		<result column="supplierTel" jdbcType="VARCHAR" property="supplierTel" />
		<result column="supplier" jdbcType="VARCHAR" property="supplier" />
		<result column="batchNumber" jdbcType="VARCHAR" property="batchNumber" />
		<result column="size" jdbcType="VARCHAR" property="size" />
		<result column="stockDate" jdbcType="TIMESTAMP" property="stockDate" />
		<result column="expirationDate" jdbcType="VARCHAR" property="expirationDate" />
		<result column="stockCount" jdbcType="DECIMAL" property="stockCount" />
		<result column="productionPlace" jdbcType="VARCHAR" property="productionPlace" />
		<result column="productionDate" jdbcType="TIMESTAMP" property="productionDate" />
		<result column="stockProof" jdbcType="VARCHAR" property="stockProof" />
		<result column="stockProof_Img" jdbcType="VARCHAR" property="stockProof_Img" />
		<result column="checkProof" jdbcType="VARCHAR" property="checkProof" />
		<result column="checkProof_Img" jdbcType="VARCHAR" property="checkProof_Img" />
		<result column="quarantineProof" jdbcType="VARCHAR" property="quarantineProof" />
		<result column="quarantineProof_Img" jdbcType="VARCHAR"
			property="quarantineProof_Img" />
		<result column="memo" jdbcType="VARCHAR" property="memo" />
		<result column="accessory" jdbcType="VARCHAR" property="accessory" />
		<result column="delete_flag" jdbcType="SMALLINT" property="delete_flag" />
		<result column="create_by" jdbcType="VARCHAR" property="create_by" />
		<result column="create_date" jdbcType="TIMESTAMP" property="create_date" />
		<result column="update_by" jdbcType="VARCHAR" property="update_by" />
		<result column="update_date" jdbcType="TIMESTAMP" property="update_date" />
		<result column="param1" jdbcType="VARCHAR" property="param1" />
		<result column="param2" jdbcType="VARCHAR" property="param2" />
		<result column="param3" jdbcType="VARCHAR" property="param3" />
		<result column="allCount" jdbcType="VARCHAR" property="allCount" />
		<result column="reg_id" jdbcType="VARCHAR" property="reg_id" />
		<result column="yiwanc" jdbcType="VARCHAR" property="yiwanc" />
		<result column="reg_name" jdbcType="VARCHAR" property="reg_name" />
	</resultMap>
	<!-- 根据经营户id、foodName 批号查询批号是否存在 -->
	<select id="selectByBatchNumber" parameterType="Object"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from base_ledger_stock
		where
		1=1
			<if test="foodName !=null and foodName !=''">
			and foodName=#{foodName}
			</if>
			<if test="businessId !=null and businessId !=''">
				and businessId=#{businessId}
			</if>
			<if test="batchNumber !=null and batchNumber !=''">
			and batchNumber=#{batchNumber}
			</if>
	</select>

	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed May 02 
			14:43:09 CST 2018. -->
		select
		<include refid="Base_Column_List" />
		from base_ledger_stock
		where id = #{id,jdbcType=INTEGER}
	</select>
	<!-- 批量删除-逻辑删除 -->
	<update id="deleteByPrimaryKey" parameterType="Object">
		update base_ledger_stock
		set delete_flag = 1
		where id in
		<foreach collection="array" item="ids" index="index" open="("
			close=")" separator=",">
			#{ids}
		</foreach>
	</update>
	<!-- <delete id="deleteByPrimaryKey" parameterType="java.lang.String"> WARNING 
		- @mbg.generated This element is automatically generated by MyBatis Generator, 
		do not modify. This element was generated on Wed May 02 14:43:09 CST 2018. 
		delete from base_ledger_stock where id = #{id,jdbcType=INTEGER} </delete> -->
	<insert id="insert" parameterType="com.dayuan.bean.ledger.BaseLedgerStock">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed May 02 
			14:43:09 CST 2018. -->
		insert into base_ledger_stock (id, regId,businessId, foodName,
		supplierId, supplierUser, supplierTel,
		supplier, batchNumber, size,
		stockDate, expirationDate, stockCount,
		productionPlace, productionDate,
		stockProof,
		stockProof_Img, checkProof, checkProof_Img,
		quarantineProof, quarantineProof_Img, memo,
		accessory, delete_flag,
		create_by,
		create_date, update_by, update_date,
		param1, param2, param3, check_recording_id
		)
		values (#{id,jdbcType=INTEGER},#{regId,jdbcType=VARCHAR},
		#{businessId,jdbcType=VARCHAR},
		#{foodName,jdbcType=VARCHAR},
		#{supplierId,jdbcType=VARCHAR}, #{supplierUser,jdbcType=VARCHAR},
		#{supplierTel,jdbcType=VARCHAR},
		#{supplier,jdbcType=VARCHAR},
		#{batchNumber,jdbcType=VARCHAR},
		#{size,jdbcType=VARCHAR},
		#{stockDate,jdbcType=TIMESTAMP}, #{expirationDate,jdbcType=VARCHAR},
		#{stockCount,jdbcType=DECIMAL},
		#{productionPlace,jdbcType=VARCHAR},
		#{productionDate,jdbcType=TIMESTAMP}, #{stockProof,jdbcType=VARCHAR},
		#{stockProof_Img,jdbcType=VARCHAR}, #{checkProof,jdbcType=VARCHAR},
		#{checkProof_Img,jdbcType=VARCHAR},
		#{quarantineProof,jdbcType=VARCHAR},
		#{quarantineProof_Img,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR},
		#{accessory,jdbcType=VARCHAR}, #{delete_flag,jdbcType=SMALLINT},
		#{create_by,jdbcType=VARCHAR},
		#{create_date,jdbcType=TIMESTAMP},
		#{update_by,jdbcType=VARCHAR}, #{update_date,jdbcType=TIMESTAMP},
		#{param1,jdbcType=VARCHAR}, #{param2,jdbcType=VARCHAR},
		#{param3,jdbcType=VARCHAR}, #{checkRecordingId,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.dayuan.bean.ledger.BaseLedgerStock">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed May 02 
			14:43:09 CST 2018. -->
		insert into base_ledger_stock
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="regId != null">
				regId,
			</if>
			<if test="businessId != null">
				businessId,
			</if>
			<if test="foodName != null">
				foodName,
			</if>
			<if test="supplierId != null">
				supplierId,
			</if>
			<if test="supplierUser != null">
				supplierUser,
			</if>
			<if test="supplierTel != null">
				supplierTel,
			</if>
			<if test="supplier != null">
				supplier,
			</if>
			<if test="batchNumber != null">
				batchNumber,
			</if>
			<if test="size != null">
				size,
			</if>
			<if test="stockDate != null">
				stockDate,
			</if>
			<if test="expirationDate != null">
				expirationDate,
			</if>
			<if test="stockCount != null">
				stockCount,
			</if>
			<if test="productionPlace != null">
				productionPlace,
			</if>
			<if test="productionDate != null">
				productionDate,
			</if>
			<if test="stockProof != null">
				stockProof,
			</if>
			<if test="stockProof_Img != null">
				stockProof_Img,
			</if>
			<if test="checkProof != null">
				checkProof,
			</if>
			<if test="checkProof_Img != null">
				checkProof_Img,
			</if>
			<if test="quarantineProof != null">
				quarantineProof,
			</if>
			<if test="quarantineProof_Img != null">
				quarantineProof_Img,
			</if>
			<if test="memo != null">
				memo,
			</if>
			<if test="accessory != null">
				accessory,
			</if>
			<if test="delete_flag != null">
				delete_flag,
			</if>
			<if test="create_by != null">
				create_by,
			</if>
			<if test="create_date != null">
				create_date,
			</if>
			<if test="update_by != null">
				update_by,
			</if>
			<if test="update_date != null">
				update_date,
			</if>
			<if test="param1 != null">
				param1,
			</if>
			<if test="param2 != null">
				param2,
			</if>
			<if test="param3 != null">
				param3,
			</if>
			<if test="checkRecordingId != null">
				check_recording_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="regId != null">
				#{regId,jdbcType=VARCHAR},
			</if>
			<if test="businessId != null">
				#{businessId,jdbcType=VARCHAR},
			</if>
			<if test="foodName != null">
				#{foodName,jdbcType=VARCHAR},
			</if>
			<if test="supplierId != null">
				#{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="supplierUser != null">
				#{supplierUser,jdbcType=VARCHAR},
			</if>
			<if test="supplierTel != null">
				#{supplierTel,jdbcType=VARCHAR},
			</if>
			<if test="supplier != null">
				#{supplier,jdbcType=VARCHAR},
			</if>
			<if test="batchNumber != null">
				#{batchNumber,jdbcType=VARCHAR},
			</if>
			<if test="size != null">
				#{size,jdbcType=VARCHAR},
			</if>
			<if test="stockDate != null">
				#{stockDate,jdbcType=TIMESTAMP},
			</if>
			<if test="expirationDate != null">
				#{expirationDate,jdbcType=VARCHAR},
			</if>
			<if test="stockCount != null">
				#{stockCount,jdbcType=DECIMAL},
			</if>
			<if test="productionPlace != null">
				#{productionPlace,jdbcType=VARCHAR},
			</if>
			<if test="productionDate != null">
				#{productionDate,jdbcType=TIMESTAMP},
			</if>
			<if test="stockProof != null">
				#{stockProof,jdbcType=VARCHAR},
			</if>
			<if test="stockProof_Img != null">
				#{stockProof_Img,jdbcType=VARCHAR},
			</if>
			<if test="checkProof != null">
				#{checkProof,jdbcType=VARCHAR},
			</if>
			<if test="checkProof_Img != null">
				#{checkProof_Img,jdbcType=VARCHAR},
			</if>
			<if test="quarantineProof != null">
				#{quarantineProof,jdbcType=VARCHAR},
			</if>
			<if test="quarantineProof_Img != null">
				#{quarantineProof_Img,jdbcType=VARCHAR},
			</if>
			<if test="memo != null">
				#{memo,jdbcType=VARCHAR},
			</if>
			<if test="accessory != null">
				#{accessory,jdbcType=VARCHAR},
			</if>
			<if test="delete_flag != null">
				#{delete_flag,jdbcType=SMALLINT},
			</if>
			<if test="create_by != null">
				#{create_by,jdbcType=VARCHAR},
			</if>
			<if test="create_date != null">
				#{create_date,jdbcType=TIMESTAMP},
			</if>
			<if test="update_by != null">
				#{update_by,jdbcType=VARCHAR},
			</if>
			<if test="update_date != null">
				#{update_date,jdbcType=TIMESTAMP},
			</if>
			<if test="param1 != null">
				#{param1,jdbcType=VARCHAR},
			</if>
			<if test="param2 != null">
				#{param2,jdbcType=VARCHAR},
			</if>
			<if test="param3 != null">
				#{param3,jdbcType=VARCHAR},
			</if>
			<if test="checkRecordingId != null">
				#{checkRecordingId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.dayuan.bean.ledger.BaseLedgerStock">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed May 02 
			14:43:09 CST 2018. -->
		update base_ledger_stock
		<set>
			<if test="regId != null">
				regId = #{regId,jdbcType=VARCHAR},
			</if>
			<if test="businessId != null">
				businessId = #{businessId,jdbcType=VARCHAR},
			</if>
			<if test="foodName != null">
				foodName = #{foodName,jdbcType=VARCHAR},
			</if>
			<if test="supplierId != null">
				supplierId = #{supplierId,jdbcType=VARCHAR},
			</if>
			<if test="supplierUser != null">
				supplierUser = #{supplierUser,jdbcType=VARCHAR},
			</if>
			<if test="supplierTel != null">
				supplierTel = #{supplierTel,jdbcType=VARCHAR},
			</if>
			<if test="supplier != null">
				supplier = #{supplier,jdbcType=VARCHAR},
			</if>
			<if test="batchNumber != null">
				batchNumber = #{batchNumber,jdbcType=VARCHAR},
			</if>
			<if test="size != null">
				size = #{size,jdbcType=VARCHAR},
			</if>
			<if test="stockDate != null">
				stockDate = #{stockDate,jdbcType=TIMESTAMP},
			</if>
			<if test="expirationDate != null">
				expirationDate = #{expirationDate,jdbcType=VARCHAR},
			</if>
			<if test="stockCount != null">
				stockCount = #{stockCount,jdbcType=DECIMAL},
			</if>
			<if test="productionPlace != null">
				productionPlace = #{productionPlace,jdbcType=VARCHAR},
			</if>
			<if test="productionDate != null">
				productionDate = #{productionDate,jdbcType=TIMESTAMP},
			</if>
			<if test="stockProof != null">
				stockProof = #{stockProof,jdbcType=VARCHAR},
			</if>
			<if test="stockProof_Img != null">
				stockProof_Img = #{stockProof_Img,jdbcType=VARCHAR},
			</if>
			<if test="checkProof != null">
				checkProof = #{checkProof,jdbcType=VARCHAR},
			</if>
			<if test="checkProof_Img != null">
				checkProof_Img = #{checkProof_Img,jdbcType=VARCHAR},
			</if>
			<if test="quarantineProof != null">
				quarantineProof = #{quarantineProof,jdbcType=VARCHAR},
			</if>
			<if test="quarantineProof_Img != null">
				quarantineProof_Img =
				#{quarantineProof_Img,jdbcType=VARCHAR},
			</if>
			<if test="memo != null">
				memo = #{memo,jdbcType=VARCHAR},
			</if>
			<if test="accessory != null">
				accessory = #{accessory,jdbcType=VARCHAR},
			</if>
			<if test="delete_flag != null">
				delete_flag = #{delete_flag,jdbcType=SMALLINT},
			</if>
			<if test="create_by != null">
				create_by = #{create_by,jdbcType=VARCHAR},
			</if>
			<if test="create_date != null">
				create_date = #{create_date,jdbcType=TIMESTAMP},
			</if>
			<if test="update_by != null">
				update_by = #{update_by,jdbcType=VARCHAR},
			</if>
			<if test="update_date != null">
				update_date = #{update_date,jdbcType=TIMESTAMP},
			</if>
			<if test="param1 != null">
				param1 = #{param1,jdbcType=VARCHAR},
			</if>
			<if test="param2 != null">
				param2 = #{param2,jdbcType=VARCHAR},
			</if>
			<if test="param3 != null">
				param3 = #{param3,jdbcType=VARCHAR},
			</if>
			<if test="checkRecordingId != null">
				check_recording_id = #{checkRecordingId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.dayuan.bean.ledger.BaseLedgerStock">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed May 02 
			14:43:09 CST 2018. -->
		update base_ledger_stock
		set regId = #{regId,jdbcType=VARCHAR},
		businessId = #{businessId,jdbcType=VARCHAR},
		foodName =
		#{foodName,jdbcType=VARCHAR},
		supplierId =
		#{supplierId,jdbcType=VARCHAR},
		supplierUser =
		#{supplierUser,jdbcType=VARCHAR},
		supplierTel =
		#{supplierTel,jdbcType=VARCHAR},
		supplier =
		#{supplier,jdbcType=VARCHAR},
		batchNumber =
		#{batchNumber,jdbcType=VARCHAR},
		size = #{size,jdbcType=VARCHAR},
		stockDate = #{stockDate,jdbcType=TIMESTAMP},
		expirationDate =
		#{expirationDate,jdbcType=VARCHAR},
		stockCount =
		#{stockCount,jdbcType=DECIMAL},
		productionPlace =
		#{productionPlace,jdbcType=VARCHAR},
		productionDate =
		#{productionDate,jdbcType=TIMESTAMP},
		stockProof =
		#{stockProof,jdbcType=VARCHAR},
		stockProof_Img =
		#{stockProof_Img,jdbcType=VARCHAR},
		checkProof =
		#{checkProof,jdbcType=VARCHAR},
		checkProof_Img =
		#{checkProof_Img,jdbcType=VARCHAR},
		quarantineProof =
		#{quarantineProof,jdbcType=VARCHAR},
		quarantineProof_Img =
		#{quarantineProof_Img,jdbcType=VARCHAR},
		memo =
		#{memo,jdbcType=VARCHAR},
		accessory = #{accessory,jdbcType=VARCHAR},
		delete_flag = #{delete_flag,jdbcType=SMALLINT},
		create_by =
		#{create_by,jdbcType=VARCHAR},
		create_date =
		#{create_date,jdbcType=TIMESTAMP},
		update_by =
		#{update_by,jdbcType=VARCHAR},
		update_date =
		#{update_date,jdbcType=TIMESTAMP},
		param1 = #{param1,jdbcType=VARCHAR},
		param2 = #{param2,jdbcType=VARCHAR},
		param3 = #{param3,jdbcType=VARCHAR},
		check_recording_id = #{checkRecordingId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- /**
	 * 端州微信- 根据经营户ID查询 录入了进货台账的档口数量
	 * @param businessIds 经营户IDs
	 * @param start 开始日期
	 * @param end 结束日期
	 * @return 录入了进货台账的档口数量
	 * @author LuoYX
	 * @date 2018年6月27日
	 */ -->
	<select id="getEnterStockCount" parameterType="Object" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM (
			SELECT COUNT(s.businessId) c  
			FROM base_regulatory_business b
			LEFT JOIN base_ledger_stock s ON b.id=s.businessId
			WHERE s.delete_flag=0 AND
			s.stockDate&gt;=#{start} AND s.stockDate&lt;=#{end}
			AND b.id in 
			<if test="businessIds != null and businessIds.size() > 0">
				<foreach item="item" index="index" collection="businessIds" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="businessIds == null or businessIds.size() == 0">
				(0)
			</if>
			GROUP BY s.businessId
			HAVING c&gt;0
		) t
		
		<!-- SELECT COUNT(1) FROM (
			SELECT businessId,COUNT(1) c
			FROM base_ledger_stock
			WHERE stockDate&gt;=#{start} AND stockDate&lt;=#{end}
			AND businessId in 
			<if test="businessIds != null and businessIds.size() > 0">
				<foreach item="item" index="index" collection="businessIds" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="businessIds == null or businessIds.size() == 0">
				(0)
			</if>
			GROUP BY businessId
			HAVING c&gt;0
		) t -->
	</select>
	
	<!-- /**
	 * 端州微信-进货统计
	 * @param regIds 市场IDs
	 * @param start 开始时间
	 * @param end 结束时间
	 * @return 每个市场的档口数量、已录入台账数量
	 * @author LuoYX
	 * @date 2018年6月28日
	 */ -->
	<select id="queryStockByRegIds" parameterType="Object" resultType="java.util.Map">
		SELECT o.id,o.reg_name,COUNT(b.delete_flag=0 OR NULL) bCount,
		(
			SELECT COUNT(DISTINCT businessId) FROM base_ledger_stock 
			WHERE regId =o.id AND stockDate&gt;=#{start} AND stockDate&lt;=#{end}
		) enterStockCount
		FROM base_regulatory_object o
		LEFT JOIN base_regulatory_business b ON o.id=b.reg_id
		WHERE o.delete_flag=0 AND o.reg_type in ('4028935f5e7e898a015e7e89a9490001')
		AND o.id in 
		<if test="regIds != null and regIds.size() > 0">
			<foreach item="item" index="index" collection="regIds" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="regIds == null or regIds.size() == 0">
			(0)
		</if>
		GROUP BY o.id
		ORDER BY enterStockCount DESC,bCount desc
	</select>
	<!-- /**
	 * 端州微信-进货台账详情
	 * @param regId
	 * @param start
	 * @param end
	 * @return
	 * @author LuoYX
	 * @date 2018年6月28日
	 */ -->
	<select id="queryByRegId" resultType="java.util.Map" parameterType="Object">
		SELECT businessId,
		b.ope_shop_name,b.ope_shop_code,COUNT(s.businessId) stockCount 
		FROM base_ledger_stock s
		LEFT JOIN base_regulatory_business b ON s.businessId=b.id
		WHERE s.delete_flag =0 AND b.delete_flag=0 AND regId=#{regId}
		AND s.stockDate&gt;=#{start} AND s.stockDate&lt;=#{end}
		GROUP BY businessId
	</select>

	<select id="queryByRid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM base_ledger_stock
		WHERE check_recording_id = #{rid,jdbcType=INTEGER} AND delete_flag = 0
	</select>
</mapper>