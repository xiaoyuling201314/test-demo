<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dayuan.logs.mapper.SysLogMapper">
    <resultMap id="BaseResultMap" type="com.dayuan.logs.bean.SysLog">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="remote_ip" jdbcType="VARCHAR" property="remoteIp"/>
        <result column="request_uri" jdbcType="VARCHAR" property="requestUri"/>
        <result column="type" jdbcType="SMALLINT" property="type"/>
        <result column="module" jdbcType="VARCHAR" property="module"/>
        <result column="func" jdbcType="VARCHAR" property="func"/>
        <result column="class_name" jdbcType="VARCHAR" property="className"/>
        <result column="request_param" jdbcType="VARCHAR" property="requestParam"/>
        <result column="operator_id" jdbcType="VARCHAR" property="operatorId"/>
        <result column="before_data" jdbcType="VARCHAR" property="beforeData"/>
        <result column="after_data" jdbcType="VARCHAR" property="afterData"/>
        <result column="operator_result" jdbcType="SMALLINT" property="operatorResult"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="exception" jdbcType="VARCHAR" property="exception"/>
        <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime"/>
        <result column="param1" jdbcType="VARCHAR" property="param1"/>
        <result column="param2" jdbcType="VARCHAR" property="param2"/>
        <result column="param3" jdbcType="VARCHAR" property="param3"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, user_name, remote_ip, request_uri, type, module, func, class_name, request_param,
    operator_id, before_data, after_data, operator_result, description, exception, operate_time,
    param1, param2, param3
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_log
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.dayuan.logs.bean.SysLog">
    insert into sys_log (id, user_id, user_name,
      remote_ip, request_uri, type,
      module, func, class_name,
      request_param, operator_id, before_data,
      after_data, operator_result, description,
      exception, operate_time, param1,
      param2, param3)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
      #{remoteIp,jdbcType=VARCHAR}, #{requestUri,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT},
      #{module,jdbcType=VARCHAR}, #{func,jdbcType=VARCHAR}, #{className,jdbcType=VARCHAR},
      #{requestParam,jdbcType=VARCHAR}, #{operatorId,jdbcType=VARCHAR}, #{beforeData,jdbcType=VARCHAR},
      #{afterData,jdbcType=VARCHAR}, #{operatorResult,jdbcType=SMALLINT}, #{description,jdbcType=VARCHAR},
      #{exception,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}, #{param1,jdbcType=VARCHAR},
      #{param2,jdbcType=VARCHAR}, #{param3,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.dayuan.logs.bean.SysLog">
        insert into sys_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="remoteIp != null">
                remote_ip,
            </if>
            <if test="requestUri != null">
                request_uri,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="module != null">
                module,
            </if>
            <if test="func != null">
                func,
            </if>
            <if test="className != null">
                class_name,
            </if>
            <if test="requestParam != null">
                request_param,
            </if>
            <if test="operatorId != null">
                operator_id,
            </if>
            <if test="beforeData != null">
                before_data,
            </if>
            <if test="afterData != null">
                after_data,
            </if>
            <if test="operatorResult != null">
                operator_result,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="exception != null">
                exception,
            </if>
            <if test="operateTime != null">
                operate_time,
            </if>
            <if test="param1 != null">
                param1,
            </if>
            <if test="param2 != null">
                param2,
            </if>
            <if test="param3 != null">
                param3,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="remoteIp != null">
                #{remoteIp,jdbcType=VARCHAR},
            </if>
            <if test="requestUri != null">
                #{requestUri,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=SMALLINT},
            </if>
            <if test="module != null">
                #{module,jdbcType=VARCHAR},
            </if>
            <if test="func != null">
                #{func,jdbcType=VARCHAR},
            </if>
            <if test="className != null">
                #{className,jdbcType=VARCHAR},
            </if>
            <if test="requestParam != null">
                #{requestParam,jdbcType=VARCHAR},
            </if>
            <if test="operatorId != null">
                #{operatorId,jdbcType=VARCHAR},
            </if>
            <if test="beforeData != null">
                #{beforeData,jdbcType=VARCHAR},
            </if>
            <if test="afterData != null">
                #{afterData,jdbcType=VARCHAR},
            </if>
            <if test="operatorResult != null">
                #{operatorResult,jdbcType=SMALLINT},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="exception != null">
                #{exception,jdbcType=VARCHAR},
            </if>
            <if test="operateTime != null">
                #{operateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="param1 != null">
                #{param1,jdbcType=VARCHAR},
            </if>
            <if test="param2 != null">
                #{param2,jdbcType=VARCHAR},
            </if>
            <if test="param3 != null">
                #{param3,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dayuan.logs.bean.SysLog">
        update sys_log
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="remoteIp != null">
                remote_ip = #{remoteIp,jdbcType=VARCHAR},
            </if>
            <if test="requestUri != null">
                request_uri = #{requestUri,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT},
            </if>
            <if test="module != null">
                module = #{module,jdbcType=VARCHAR},
            </if>
            <if test="func != null">
                func = #{func,jdbcType=VARCHAR},
            </if>
            <if test="className != null">
                class_name = #{className,jdbcType=VARCHAR},
            </if>
            <if test="requestParam != null">
                request_param = #{requestParam,jdbcType=VARCHAR},
            </if>
            <if test="operatorId != null">
                operator_id = #{operatorId,jdbcType=VARCHAR},
            </if>
            <if test="beforeData != null">
                before_data = #{beforeData,jdbcType=VARCHAR},
            </if>
            <if test="afterData != null">
                after_data = #{afterData,jdbcType=VARCHAR},
            </if>
            <if test="operatorResult != null">
                operator_result = #{operatorResult,jdbcType=SMALLINT},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="exception != null">
                exception = #{exception,jdbcType=VARCHAR},
            </if>
            <if test="operateTime != null">
                operate_time = #{operateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="param1 != null">
                param1 = #{param1,jdbcType=VARCHAR},
            </if>
            <if test="param2 != null">
                param2 = #{param2,jdbcType=VARCHAR},
            </if>
            <if test="param3 != null">
                param3 = #{param3,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dayuan.logs.bean.SysLog">
    update sys_log
    set user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      remote_ip = #{remoteIp,jdbcType=VARCHAR},
      request_uri = #{requestUri,jdbcType=VARCHAR},
      type = #{type,jdbcType=SMALLINT},
      module = #{module,jdbcType=VARCHAR},
      func = #{func,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      request_param = #{requestParam,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      before_data = #{beforeData,jdbcType=VARCHAR},
      after_data = #{afterData,jdbcType=VARCHAR},
      operator_result = #{operatorResult,jdbcType=SMALLINT},
      description = #{description,jdbcType=VARCHAR},
      exception = #{exception,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP},
      param1 = #{param1,jdbcType=VARCHAR},
      param2 = #{param2,jdbcType=VARCHAR},
      param3 = #{param3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="loadDatagrid" resultMap="BaseResultMap" parameterType="Object">
        select
        <include refid="Base_Column_List"/>
        from sys_log
        <include refid="Example_Where_Clause"/>
        order by operate_time DESC limit #{rowOffset}, #{pageSize}
    </select>

    <select id="getRowTotal" resultType="java.lang.Integer" parameterType="Object">
        select count(1) as rowTotal
        from sys_log
        <include refid="Example_Where_Clause"/>
    </select>
    <!-- 查询条件 -->
    <sql id="Example_Where_Clause">
        where 1 = 1
        <if test="obj.keyWords != null and obj.keyWords != ''">
            and ( user_name like CONCAT('%', #{obj.keyWords}, '%')
            or remote_ip like CONCAT('%', #{obj.keyWords}, '%')
            or module like CONCAT('%', #{obj.keyWords}, '%')
            or func like CONCAT('%', #{obj.keyWords}, '%')
             )
        </if>
        <if test="obj.operateTimeStartDate != null and obj.operateTimeStartDate != ''">
            AND operate_time &gt;= CONCAT(#{obj.operateTimeStartDate},' 00:00:00')
        </if>
        <if test="obj.operateTimeEndDate != null and obj.operateTimeEndDate != ''">
            AND operate_time &lt;= CONCAT(#{obj.operateTimeEndDate},' 23:59:59')
        </if>
        <if test="obj.sysLog != null">
            <if test="obj.sysLog.userName != null and obj.sysLog.userName != ''">
                and user_name = #{obj.sysLog.userName}
            </if>
            <if test="obj.sysLog.remoteIp != null and obj.sysLog.remoteIp != ''">
                and remote_ip = #{obj.sysLog.remoteIp}
            </if>
            <if test="obj.sysLog.module != null and obj.sysLog.module != ''">
                and module = #{obj.sysLog.module}
            </if>
            <if test="obj.sysLog.operatorResult != null">
                and operator_result = #{obj.sysLog.operatorResult}
            </if>
            <if test="obj.sysLog.func != null and obj.sysLog.func != ''">
                and func LIKE CONCAT('%',#{obj.sysLog.func},'%')
            </if>
        </if>
    </sql>
    <select id="queryAllModule" parameterType="Object" resultType="java.lang.String">
        select module from sys_log GROUP BY module
    </select>
    <!--查询近三天没有物理地址的IP信息-->
    <select id="queryIpForNotAddress" parameterType="Object" resultType="java.lang.String">
        select remote_ip from sys_log where operate_time>=DATE_SUB(now(),INTERVAL 3 DAY)
        and (param1  ='' or param1  is null)
        GROUP BY remote_ip
    </select>
    <!--根据IP地址更新日志表没有物理地址的日志信息-->
    <update id="updateLogsByIp" parameterType="Object">
    update sys_log
    set param1 = #{address}
    where remote_ip=#{ip} and (param1  ='' or param1  is null)
  </update>

</mapper>