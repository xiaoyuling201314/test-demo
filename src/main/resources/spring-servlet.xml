<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		 http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
		 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd ">
    <!-- 用于持有ApplicationContext,可以使用 SpringContextUtil .getBean('xxxx')的静态方法得到spring bean对象 -->
    <bean id = "springUtil" class="com.dayuan.logs.aop.SpringContextUtil " lazy-init="false" />

    <!-- 扫描classpath的包下的所有类，该包路径下的类可以不需要配置bean了(action下的控制器交给spring管理)-->
    <context:component-scan base-package="com.*.controller,com.*.*.controller,com.dayuan.aop,com.dayuan.logs.aop,com.dayuan3.api.config"/>
    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven/>
    <!-- 支持aop -->
    <aop:aspectj-autoproxy/>
    <bean id="customObjectMapper" class="com.dayuan.common.CustomObjectMapper"></bean>

    <context:property-placeholder file-encoding="UTF-8" location="classpath:sysconfig.properties"/>
    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper" ref="customObjectMapper"></property>
            </bean>
            <!-- <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper">
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                        <property name="dateFormat">
                            <bean class="java.text.SimpleDateFormat">
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />
                            </bean>
                        </property>
                    </bean>
                </property>
            </bean> -->
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/
        directory /resources/ -->
    <!-- <mvc:default-servlet-handler/> file:/F:/upload/resources/ -->
    <mvc:resources mapping="/resources/**" location="file:${resources}"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/player/**" location="/player/"/>
    <mvc:resources mapping="/img/**" location="/img/"/>
    <mvc:resources mapping="/plug-in/**" location="/plug-in/"/>
    <mvc:resources mapping="/app/**" location="/app/"/>
    <mvc:resources mapping="/public/**" location="/public/"/>
    <mvc:resources mapping="/mini/**" location="/mini/"/>
    <mvc:resources mapping="/device/**" location="/device/"/>

    <!-- 配置Swagger UI和Knife4j的静态资源 -->
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
    <mvc:resources mapping="/doc.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <!-- Saves a locale change using a cookie -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>

    <!-- Configures Handler Interceptors -->
    <!-- <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
    </mvc:interceptors> -->

    <mvc:interceptors>
        <!-- Sa-Token拦截器 -->
        <mvc:interceptor>
            <!-- 拦截所有/api/开头的请求 -->
            <mvc:mapping path="/api/**"/>
            <mvc:exclude-mapping path="/api/user/authURL"/>
            <mvc:exclude-mapping path="/api/user/login"/>
            <mvc:exclude-mapping path="/api/user/register"/>
            <mvc:exclude-mapping path="/api/user/queryColdUnit"/>
            <mvc:exclude-mapping path="/api/user/checkPhone"/>
            <mvc:exclude-mapping path="/api/pay/payNotify"/>
            <mvc:exclude-mapping path="/api/pay/callBackNotify/*"/>
            <mvc:exclude-mapping path="/api/deviceAuth/login"/>
            <mvc:exclude-mapping path="/api/order/getReport/*/*/*"/>
            <bean class="com.dayuan3.api.config.SaInterceptorImpl" />
        </mvc:interceptor>
        <mvc:interceptor>
            <!-- 配置需要拦截请求 -->
            <mvc:mapping path="/**"/>
            <!-- 配置拦截器类 -->
            <bean id="loginInterceptor" class="com.dayuan.interceptor.LoginInterceptor">

                <!-- 不拦截地址 -->
                <property name="exceptUrls">
                    <list>
                        <value>/toLogin</value>
                        <value>/404</value>
                        <value>/loginAjax</value>
                        <value>/ImageServlet</value>
                        <value>/interfaces/</value>
                        <value>/upload/</value>
                        <value>/wx/</value>
                        <value>/ledger/wx/</value>
                        <value>/iSampling/</value>
                        <value>/iRegulatory/</value>
                        <value>/iDownload/</value>
                        <value>/resources/</value>
                        <value>/app/</value>
                        <value>/css/</value>
                        <value>/js/</value>
                        <value>/images/</value>
                        <value>/img/</value>
                        <value>/map_files/</value>
                        <value>/plug-in/</value>
                        <value>/systemManager/download</value>
                        <value>/pdf/</value>

                        <!--数据公示-->
                        <value>/publicity/</value>

                        <!--小程序接口-->
                        <value>/mini/</value>

                        <!--密码过于简单，强制修改密码-->
                        <value>/system/user/simplePassword</value>
                        <value>/system/user/updatePassword2</value>
                        <!--账号解锁-->
                        <value>/system/user/unlock</value>
                        <!--下载法律法规、检测标准附件-->
                        <value>/data/laws/download</value>
                        <value>/data/standard/download</value>

                        <!-- 新模式 -->
						<value>/terminal/index</value>
						<value>/terminal/toLogin</value>
						<value>/terminal/loginAjax</value>
						<value>/terminal/register</value>
						<value>/terminal/registerUser</value>
						<value>/terminal/checkPhone</value>
						<value>/terminal/registerUserByPhone</value>
						<value>/terminal/checkPage</value>
						<value>/reportPrint/</value>
						<value>/pay/weipayCallback</value>
						<value>/pay/alipayCallback</value>
                        <value>/pay/generatorQrCode</value>
                        <value>/pay/weipay.do</value>
                        <value>/pay/weipayQuery</value>
                        <value>/pay/alipay.do</value>
                        <value>/pay/alipayQuery</value>
                        <value>/pay/cancelOrder</value>
                        <value>/pay/payQuery</value>
                        <value>/pretreatment</value>
                        <value>/order/checkCreditCode</value>
                        <value>/requester/unit/scanQrcode</value>
                        <value>/collectSample/detail</value>
                        <value>/order/visitorlist</value>
                        <value>/rpt</value>
                        <value>/miniProgram</value>

                        <!-- 新版接口 -->
                        <value>/iDownload/</value>
                        <value>/iDataChecking/</value>
                        <value>/iDevices/</value>
                        <value>/iTbSampling/</value>
                        <value>/iUserLogin/</value>
                        <value>/iLog/</value>
                        <value>/iSystem/</value>
                        <value>/iDataUnqualified/</value>
                        <value>/iDelivery/</value>
                        <value>/iVideoSurveillance/</value>
                        <value>/iBaseLedgerStock/</value>
                        <value>/iRiskWarning/</value>
                        <value>/iAppConfig/</value>
                        <value>/ext/</value>

                        <!--APP使用教程-->
                        <value>/app/useTutorial</value>

                        <!-- 自助下单小程序接口 -->
                        <value>/mp/order/</value>

                        <!-- 在线查看PDF -->
                        <value>/pdf/preview</value>
                        <value>/main_offline</value>

                        <!--微信公众号-->
                        <value>/p-wx/data-statis/</value>
                        <value>/p-wx/sample/</value>
                        <value>/system/getProjectMsg</value>
                        <value>/system/getRecordingNum</value>
                        <value>/system/queryCheckNumD</value>
                        <!--Knife4j接口文档资源文件放行-->
                        <value>/v2/api-docs</value>
                        <value>/doc.html</value>
                        <value>/webjars/</value>
                        <value>/swagger-resources</value>
                        <value>/swagger-ui.html</value>

                        <!--快检新模式接口-->
                        <value>/api/</value>

                    </list>
                </property>
            </bean>
        </mvc:interceptor>

    </mvc:interceptors>

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>


    <!-- Sa-Token-->
    <!--Sa-Token 日志输出对象 -->
    <bean id="saLog" class="cn.dev33.satoken.log.SaLogForConsole" />
    <bean class="org.springframework.boot.autoconfigure.EnableAutoConfiguration" abstract="true">
    </bean>
    <bean class="cn.dev33.satoken.spring.SaBeanRegister" ></bean>
    <bean class="cn.dev33.satoken.spring.SaBeanInject" >
        <constructor-arg ref="saLog"/>
        <constructor-arg ref="saTokenConfig"/>
    </bean>
    <!--Sa-Token 配置-->
    <bean id="saTokenConfig" class="cn.dev33.satoken.config.SaTokenConfig">
        <!-- token 名称（同时也是 cookie 名称） -->
        <property name="tokenName" value="satoken" />
        <!-- token 有效期（单位：秒） 默认30天，-1 代表永久有效  7200-->
        <property name="timeout" value="7200" />
        <!-- 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录） -->
        <property name="isConcurrent" value="false" />
        <!-- 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token） -->
        <property name="isShare" value="false" />
        <!-- token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）-->
        <property name="tokenStyle" value="uuid" />
        <!-- 是否输出操作日志 -->
        <property name="isLog" value="true"/>
       <!-- # 是否打开自动续签 (如果此值为true, 框架会在每次直接或间接调用getLoginId()时进行一次过期检查与续签操作)-->
        <property name="autoRenew" value="true"/>
    </bean>


    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="cacheSeconds" value="0"/>
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/><!-- json转换器 -->
            </list>
        </property>
    </bean>

    <!-- Resolves view names to protected .jsp resources within the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/view"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- 上传文件配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760000"/>
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 启用时为了推迟文件解析，以便捕获文件大小异常 -->
        <property name="resolveLazily" value="true"/>
    </bean>

    <task:annotation-driven/>

</beans>
